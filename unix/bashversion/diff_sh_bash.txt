BASH(1)                                                                BASH(1)			BASH(1)                                                                BASH(1)



NNAAMMEE												NNAAMMEE
       bash - GNU Bourne-Again SHell								       bash - GNU Bourne-Again SHell

SSYYNNOOPPSSIISS											SSYYNNOOPPSSIISS
       bbaasshh [options] [file]								      |	       bbaasshh [options] [command_string | file]

CCOOPPYYRRIIGGHHTT											CCOOPPYYRRIIGGHHTT
       Bash is Copyright (C) 1989-2005 by the Free Software Foundation, Inc.		      |	       Bash is Copyright (C) 1989-2018 by the Free Software Foundation, Inc.

DDEESSCCRRIIPPTTIIOONN											DDEESSCCRRIIPPTTIIOONN
       BBaasshh  is  an  sshh-compatible  command language interpreter that executes			       BBaasshh  is  an  sshh-compatible  command language interpreter that executes
       commands read from the standard input or from a file.  BBaasshh also incor-			       commands read from the standard input or from a file.  BBaasshh also incor-
       porates useful features from the _K_o_r_n and _C shells (kksshh and ccsshh).			       porates useful features from the _K_o_r_n and _C shells (kksshh and ccsshh).

       BBaasshh  is  intended  to  be a conformant implementation of the Shell and			       BBaasshh  is  intended  to  be a conformant implementation of the Shell and
       Utilities portion  of  the  IEEE  POSIX  specification  (IEEE  Standard			       Utilities portion  of  the  IEEE  POSIX  specification  (IEEE  Standard
       1003.1).  BBaasshh can be configured to be POSIX-conformant by default.			       1003.1).  BBaasshh can be configured to be POSIX-conformant by default.

OOPPTTIIOONNSS												OOPPTTIIOONNSS
       In  addition  to  the  single-character shell options documented in the		      |	       All of the single-character shell options documented in the description
       description of the sseett builtin command, bbaasshh interprets  the  following		      |	       of the sseett builtin command, including --oo, can be used as  options  when
											      >	       the  shell  is  invoked.   In  addition,  bbaasshh interprets the following
       options when it is invoked:								       options when it is invoked:

       --cc _s_t_r_i_n_g If  the  --cc  option  is  present, then commands are read from		      |	       --cc        If the --cc option is present, then commands are read from  the
                 _s_t_r_i_n_g.  If there are arguments after the  _s_t_r_i_n_g,  they  are		      |	                 first non-option argument _c_o_m_m_a_n_d___s_t_r_i_n_g.  If there are argu-
                 assigned to the positional parameters, starting with $$00.		      |	                 ments  after  the  _c_o_m_m_a_n_d___s_t_r_i_n_g,  the  first  argument   is
											      >	                 assigned  to  $$00  and any remaining arguments are assigned to
											      >	                 the positional parameters.  The assignment  to  $$00  sets  the
											      >	                 name  of  the  shell, which is used in warning and error mes-
											      >	                 sages.
       --ii        If the --ii option is present, the shell is _i_n_t_e_r_a_c_t_i_v_e.				       --ii        If the --ii option is present, the shell is _i_n_t_e_r_a_c_t_i_v_e.
       --ll        Make bbaasshh act as if it had been invoked as a login shell (see			       --ll        Make bbaasshh act as if it had been invoked as a login shell (see
                 IINNVVOOCCAATTIIOONN below).								                 IINNVVOOCCAATTIIOONN below).
       --rr        If the --rr option is present,  the  shell  becomes  _r_e_s_t_r_i_c_t_e_d		      |	       --rr        If  the  --rr  option  is present, the shell becomes _r_e_s_t_r_i_c_t_e_d
                 (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).							                 (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).
       --ss        If  the --ss option is present, or if no arguments remain after		      |	       --ss        If the --ss option is present, or if no arguments remain  after
                 option processing, then commands are read from  the  standard		      |	                 option  processing,  then commands are read from the standard
                 input.   This  option  allows the positional parameters to be		      |	                 input.  This option allows the positional  parameters  to  be
                 set when invoking an interactive shell.				      |	                 set  when invoking an interactive shell or when reading input
											      >	                 through a pipe.
       --DD        A list of all double-quoted strings preceded by $$ is  printed			       --DD        A list of all double-quoted strings preceded by $$ is  printed
                 on  the standard output.  These are the strings that are sub-			                 on  the standard output.  These are the strings that are sub-
                 ject to language translation when the current locale is not CC			                 ject to language translation when the current locale is not CC
                 or  PPOOSSIIXX.   This  implies the --nn option; no commands will be			                 or  PPOOSSIIXX.   This  implies the --nn option; no commands will be
                 executed.									                 executed.
       [[--++]]OO [[_s_h_o_p_t___o_p_t_i_o_n]]									       [[--++]]OO [[_s_h_o_p_t___o_p_t_i_o_n]]
                 _s_h_o_p_t___o_p_t_i_o_n is one of the  shell  options  accepted  by  the			                 _s_h_o_p_t___o_p_t_i_o_n is one of the  shell  options  accepted  by  the
                 sshhoopptt   builtin  (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below).   If			                 sshhoopptt   builtin  (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below).   If
                 _s_h_o_p_t___o_p_t_i_o_n is present, --OO sets the value of that option; ++OO			                 _s_h_o_p_t___o_p_t_i_o_n is present, --OO sets the value of that option; ++OO
                 unsets  it.   If  _s_h_o_p_t___o_p_t_i_o_n is not supplied, the names and			                 unsets  it.   If  _s_h_o_p_t___o_p_t_i_o_n is not supplied, the names and
                 values of the shell options accepted by sshhoopptt are printed  on			                 values of the shell options accepted by sshhoopptt are printed  on
                 the  standard  output.   If  the invocation option is ++OO, the			                 the  standard  output.   If  the invocation option is ++OO, the
                 output is displayed in a format that may be reused as  input.			                 output is displayed in a format that may be reused as  input.
       ----        A  ----  signals the end of options and disables further option			       ----        A  ----  signals the end of options and disables further option
                 processing.  Any arguments after the ---- are treated as  file-			                 processing.  Any arguments after the ---- are treated as  file-
                 names and arguments.  An argument of -- is equivalent to ----.			                 names and arguments.  An argument of -- is equivalent to ----.

       BBaasshh  also  interprets  a  number  of  multi-character  options.  These			       BBaasshh  also  interprets  a  number  of  multi-character  options.  These
       options must appear on the command  line  before  the  single-character			       options must appear on the command  line  before  the  single-character
       options to be recognized.								       options to be recognized.

       ----ddeebbuuggggeerr										       ----ddeebbuuggggeerr
              Arrange for the debugger profile to be executed before the shell			              Arrange for the debugger profile to be executed before the shell
              starts.  Turns on extended debugging mode (see  the  description			              starts.  Turns on extended debugging mode (see  the  description
              of  the  eexxttddeebbuugg  option  to the sshhoopptt builtin below) and shell		      |	              of the eexxttddeebbuugg option to the sshhoopptt builtin below).
              function tracing (see the description of the --oo ffuunnccttrraaccee option		      <
              to the sseett builtin below).						      <
       ----dduummpp--ppoo--ssttrriinnggss									       ----dduummpp--ppoo--ssttrriinnggss
              Equivalent  to --DD, but the output is in the GNU _g_e_t_t_e_x_t ppoo (por-			              Equivalent  to --DD, but the output is in the GNU _g_e_t_t_e_x_t ppoo (por-
              table object) file format.							              table object) file format.
       ----dduummpp--ssttrriinnggss										       ----dduummpp--ssttrriinnggss
              Equivalent to --DD.									              Equivalent to --DD.
       ----hheellpp Display a usage message on standard  output  and  exit  success-			       ----hheellpp Display a usage message on standard  output  and  exit  success-
              fully.										              fully.
       ----iinniitt--ffiillee _f_i_l_e										       ----iinniitt--ffiillee _f_i_l_e
       ----rrccffiillee _f_i_l_e										       ----rrccffiillee _f_i_l_e
              Execute commands from _f_i_l_e instead of the standard personal ini-			              Execute commands from _f_i_l_e instead of the standard personal ini-
              tialization file _~_/_._b_a_s_h_r_c if  the  shell  is  interactive  (see			              tialization file _~_/_._b_a_s_h_r_c if  the  shell  is  interactive  (see
              IINNVVOOCCAATTIIOONN below).								              IINNVVOOCCAATTIIOONN below).

       ----llooggiinn											       ----llooggiinn
              Equivalent to --ll.									              Equivalent to --ll.

       ----nnooeeddiittiinngg										       ----nnooeeddiittiinngg
              Do  not  use the GNU rreeaaddlliinnee library to read command lines when			              Do  not  use the GNU rreeaaddlliinnee library to read command lines when
              the shell is interactive.								              the shell is interactive.

       ----nnoopprrooffiillee										       ----nnoopprrooffiillee
              Do not read either the system-wide startup file _/_e_t_c_/_p_r_o_f_i_l_e  or			              Do not read either the system-wide startup file _/_e_t_c_/_p_r_o_f_i_l_e  or
              any   of  the  personal  initialization  files  _~_/_._b_a_s_h___p_r_o_f_i_l_e,			              any   of  the  personal  initialization  files  _~_/_._b_a_s_h___p_r_o_f_i_l_e,
              _~_/_._b_a_s_h___l_o_g_i_n, or _~_/_._p_r_o_f_i_l_e.   By  default,  bbaasshh  reads  these			              _~_/_._b_a_s_h___l_o_g_i_n, or _~_/_._p_r_o_f_i_l_e.   By  default,  bbaasshh  reads  these
              files  when  it  is  invoked  as  a  login shell (see IINNVVOOCCAATTIIOONN			              files  when  it  is  invoked  as  a  login shell (see IINNVVOOCCAATTIIOONN
              below).										              below).

       ----nnoorrcc Do  not  read  and  execute  the  personal  initialization  file			       ----nnoorrcc Do  not  read  and  execute  the  personal  initialization  file
              _~_/_._b_a_s_h_r_c  if  the  shell  is interactive.  This option is on by			              _~_/_._b_a_s_h_r_c  if  the  shell  is interactive.  This option is on by
              default if the shell is invoked as sshh.						              default if the shell is invoked as sshh.

       ----ppoossiixx											       ----ppoossiixx
              Change the behavior of bbaasshh where the default operation  differs			              Change the behavior of bbaasshh where the default operation  differs
              from the POSIX standard to match the standard (_p_o_s_i_x _m_o_d_e).		      |	              from the POSIX standard to match the standard (_p_o_s_i_x _m_o_d_e).  See
											      >	              SSEEEE AALLSSOO below for a reference to a document  that  details  how
											      >	              posix mode affects bash's behavior.

       ----rreessttrriicctteedd										       ----rreessttrriicctteedd
              The shell becomes restricted (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).			              The shell becomes restricted (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).

       ----vveerrbboossee										       ----vveerrbboossee
              Equivalent to  --vv.							      |	              Equivalent to --vv.

       ----vveerrssiioonn										       ----vveerrssiioonn
              Show  version information for this instance of bbaasshh on the stan-			              Show  version information for this instance of bbaasshh on the stan-
              dard output and exit successfully.						              dard output and exit successfully.

AARRGGUUMMEENNTTSS											AARRGGUUMMEENNTTSS
       If arguments remain after option processing, and neither the --cc nor the			       If arguments remain after option processing, and neither the --cc nor the
       --ss  option  has  been supplied, the first argument is assumed to be the			       --ss  option  has  been supplied, the first argument is assumed to be the
       name of a file containing shell commands.  If bbaasshh is invoked  in  this			       name of a file containing shell commands.  If bbaasshh is invoked  in  this
       fashion,  $$00 is set to the name of the file, and the positional parame-			       fashion,  $$00 is set to the name of the file, and the positional parame-
       ters are set to the remaining arguments.  BBaasshh reads and executes  com-			       ters are set to the remaining arguments.  BBaasshh reads and executes  com-
       mands  from this file, then exits.  BBaasshh's exit status is the exit sta-			       mands  from this file, then exits.  BBaasshh's exit status is the exit sta-
       tus of the last command executed in the script.   If  no  commands  are			       tus of the last command executed in the script.   If  no  commands  are
       executed,  the  exit status is 0.  An attempt is first made to open the			       executed,  the  exit status is 0.  An attempt is first made to open the
       file in the current directory, and, if no file is found, then the shell			       file in the current directory, and, if no file is found, then the shell
       searches the directories in PPAATTHH for the script.						       searches the directories in PPAATTHH for the script.

IINNVVOOCCAATTIIOONN											IINNVVOOCCAATTIIOONN
       A  _l_o_g_i_n _s_h_e_l_l is one whose first character of argument zero is a --, or			       A  _l_o_g_i_n _s_h_e_l_l is one whose first character of argument zero is a --, or
       one started with the ----llooggiinn option.							       one started with the ----llooggiinn option.

       An _i_n_t_e_r_a_c_t_i_v_e shell is one started without  non-option  arguments  and		      |	       An _i_n_t_e_r_a_c_t_i_v_e  shell  is  one  started  without  non-option  arguments
       without the --cc option whose standard input and error are both connected		      |	       (unless --ss is specified) and without the --cc option whose standard input
       to terminals (as determined by _i_s_a_t_t_y(3)), or one started with  the  --ii		      |	       and error are both connected to terminals (as determined by _i_s_a_t_t_y(3)),
       option.   PPSS11 is set and $$-- includes ii if bbaasshh is interactive, allowing		      |	       or  one  started  with  the --ii option.  PPSS11 is set and $$-- includes ii if
       a shell script or a startup file to test this state.				      |	       bbaasshh is interactive, allowing a shell script or a startup file to  test
											      |	       this state.
       The following paragraphs describe how bbaasshh executes its startup  files.		      |
       If  any  of  the files exist but cannot be read, bbaasshh reports an error.		      |	       The  following paragraphs describe how bbaasshh executes its startup files.
       Tildes are expanded in file names as described below under TTiillddee EExxppaann--		      |	       If any of the files exist but cannot be read, bbaasshh  reports  an  error.
											      >	       Tildes  are expanded in filenames as described below under TTiillddee EExxppaann--
       ssiioonn in the EEXXPPAANNSSIIOONN section.								       ssiioonn in the EEXXPPAANNSSIIOONN section.

       When  bbaasshh is invoked as an interactive login shell, or as a non-inter-		      |	       When bbaasshh is invoked as an interactive login shell, or as a  non-inter-
       active shell with the ----llooggiinn option, it first reads and executes  com-		      |	       active  shell with the ----llooggiinn option, it first reads and executes com-
       mands  from  the file _/_e_t_c_/_p_r_o_f_i_l_e, if that file exists.  After reading		      |	       mands from the file _/_e_t_c_/_p_r_o_f_i_l_e, if that file exists.   After  reading
       that file, it looks for _~_/_._b_a_s_h___p_r_o_f_i_l_e, _~_/_._b_a_s_h___l_o_g_i_n, and _~_/_._p_r_o_f_i_l_e,			       that file, it looks for _~_/_._b_a_s_h___p_r_o_f_i_l_e, _~_/_._b_a_s_h___l_o_g_i_n, and _~_/_._p_r_o_f_i_l_e,
       in  that order, and reads and executes commands from the first one that		      |	       in that order, and reads and executes commands from the first one  that
       exists and is readable.  The ----nnoopprrooffiillee option may be  used  when  the		      |	       exists  and  is  readable.  The ----nnoopprrooffiillee option may be used when the
       shell is started to inhibit this behavior.						       shell is started to inhibit this behavior.

       When  a  login  shell  exits, bbaasshh reads and executes commands from the		      |	       When an interactive login shell exits, or a non-interactive login shell
       file _~_/_._b_a_s_h___l_o_g_o_u_t, if it exists.						      |	       executes  the  eexxiitt  builtin  command, bbaasshh reads and executes commands
											      >	       from the file _~_/_._b_a_s_h___l_o_g_o_u_t, if it exists.

       When an interactive shell that is not a login shell  is  started,  bbaasshh			       When an interactive shell that is not a login shell  is  started,  bbaasshh
       reads  and executes commands from _~_/_._b_a_s_h_r_c, if that file exists.  This			       reads  and executes commands from _~_/_._b_a_s_h_r_c, if that file exists.  This
       may be inhibited by using the ----nnoorrcc option.  The ----rrccffiillee _f_i_l_e  option			       may be inhibited by using the ----nnoorrcc option.  The ----rrccffiillee _f_i_l_e  option
       will  force  bbaasshh  to  read  and  execute commands from _f_i_l_e instead of			       will  force  bbaasshh  to  read  and  execute commands from _f_i_l_e instead of
       _~_/_._b_a_s_h_r_c.										       _~_/_._b_a_s_h_r_c.

       When bbaasshh is started non-interactively, to  run  a  shell  script,  for			       When bbaasshh is started non-interactively, to  run  a  shell  script,  for
       example, it looks for the variable BBAASSHH__EENNVV in the environment, expands			       example, it looks for the variable BBAASSHH__EENNVV in the environment, expands
       its value if it appears there, and uses the expanded value as the  name			       its value if it appears there, and uses the expanded value as the  name
       of  a  file to read and execute.  BBaasshh behaves as if the following com-			       of  a  file to read and execute.  BBaasshh behaves as if the following com-
       mand were executed:									       mand were executed:
              if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi					              if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi
       but the value of the PPAATTHH variable is not used to search for  the  file		      |	       but the value of the PPAATTHH variable is not used to search for the  file-
       name.											       name.

       If  bbaasshh  is  invoked  with  the name sshh, it tries to mimic the startup			       If  bbaasshh  is  invoked  with  the name sshh, it tries to mimic the startup
       behavior of historical versions of sshh as  closely  as  possible,  while			       behavior of historical versions of sshh as  closely  as  possible,  while
       conforming  to the POSIX standard as well.  When invoked as an interac-			       conforming  to the POSIX standard as well.  When invoked as an interac-
       tive login shell, or a non-interactive shell with the  ----llooggiinn  option,			       tive login shell, or a non-interactive shell with the  ----llooggiinn  option,
       it  first  attempts  to read and execute commands from _/_e_t_c_/_p_r_o_f_i_l_e and			       it  first  attempts  to read and execute commands from _/_e_t_c_/_p_r_o_f_i_l_e and
       _~_/_._p_r_o_f_i_l_e, in that order.  The  ----nnoopprrooffiillee  option  may  be  used  to			       _~_/_._p_r_o_f_i_l_e, in that order.  The  ----nnoopprrooffiillee  option  may  be  used  to
       inhibit  this  behavior.  When invoked as an interactive shell with the			       inhibit  this  behavior.  When invoked as an interactive shell with the
       name sshh, bbaasshh looks for the variable EENNVV, expands its value  if  it  is			       name sshh, bbaasshh looks for the variable EENNVV, expands its value  if  it  is
       defined,  and uses the expanded value as the name of a file to read and			       defined,  and uses the expanded value as the name of a file to read and
       execute.  Since a shell invoked as sshh does not attempt to read and exe-			       execute.  Since a shell invoked as sshh does not attempt to read and exe-
       cute  commands from any other startup files, the ----rrccffiillee option has no			       cute  commands from any other startup files, the ----rrccffiillee option has no
       effect.  A non-interactive shell invoked with  the  name  sshh  does  not			       effect.  A non-interactive shell invoked with  the  name  sshh  does  not
       attempt  to  read  any  other  startup files.  When invoked as sshh, bbaasshh			       attempt  to  read  any  other  startup files.  When invoked as sshh, bbaasshh
       enters _p_o_s_i_x mode after the startup files are read.					       enters _p_o_s_i_x mode after the startup files are read.

       When bbaasshh is started in _p_o_s_i_x mode, as with the  ----ppoossiixx  command  line			       When bbaasshh is started in _p_o_s_i_x mode, as with the  ----ppoossiixx  command  line
       option, it follows the POSIX standard for startup files.  In this mode,			       option, it follows the POSIX standard for startup files.  In this mode,
       interactive shells expand the EENNVV variable and commands  are  read  and			       interactive shells expand the EENNVV variable and commands  are  read  and
       executed  from  the  file  whose  name is the expanded value.  No other			       executed  from  the  file  whose  name is the expanded value.  No other
       startup files are read.									       startup files are read.

       BBaasshh attempts to determine when it is being run  by  the  remote  shell		      |	       BBaasshh attempts to determine when it is being run with its standard input
       daemon,  usually  _r_s_h_d.  If bbaasshh determines it is being run by _r_s_h_d, it		      |	       connected to a network connection, as when executed by the remote shell
       reads and executes commands from _~_/_._b_a_s_h_r_c, if that file exists and  is		      |	       daemon, usually _r_s_h_d, or the secure shell daemon _s_s_h_d.  If bbaasshh  deter-
       readable.  It will not do this if invoked as sshh.  The ----nnoorrcc option may		      |	       mines  it  is being run in this fashion, it reads and executes commands
       be used to inhibit this behavior, and the ----rrccffiillee option may  be  used		      |	       from _~_/_._b_a_s_h_r_c, if that file exists and is readable.  It  will  not  do
       to  force  another  file to be read, but _r_s_h_d does not generally invoke		      |	       this  if  invoked as sshh.  The ----nnoorrcc option may be used to inhibit this
       the shell with those options or allow them to be specified.			      |	       behavior, and the ----rrccffiillee option may be used to force another file  to
											      >	       be  read,  but  neither  _r_s_h_d  nor _s_s_h_d generally invoke the shell with
											      >	       those options or allow them to be specified.

       If the shell is started with the effective user (group) id not equal to			       If the shell is started with the effective user (group) id not equal to
       the real user (group) id, and the --pp option is not supplied, no startup			       the real user (group) id, and the --pp option is not supplied, no startup
       files are read, shell functions are not inherited from the environment,			       files are read, shell functions are not inherited from the environment,
       the  SSHHEELLLLOOPPTTSS  variable, if it appears in the environment, is ignored,		      |	       the  SSHHEELLLLOOPPTTSS,  BBAASSHHOOPPTTSS,  CCDDPPAATTHH,  and  GGLLOOBBIIGGNNOORREE variables, if they
       and the effective user id is set to the real user id.  If the --pp option		      |	       appear in the environment, are ignored, and the effective  user  id  is
       is  supplied  at  invocation, the startup behavior is the same, but the		      |	       set  to  the real user id.  If the --pp option is supplied at invocation,
       effective user id is not reset.							      |	       the startup behavior is the same, but the  effective  user  id  is  not
											      >	       reset.

DDEEFFIINNIITTIIOONNSS											DDEEFFIINNIITTIIOONNSS
       The following definitions are used throughout the rest  of  this  docu-		      |	       The  following  definitions  are used throughout the rest of this docu-
       ment.											       ment.
       bbllaannkk  A space or tab.									       bbllaannkk  A space or tab.
       wwoorrdd   A  sequence  of  characters  considered  as a single unit by the		      |	       wwoorrdd   A sequence of characters considered as  a  single  unit  by  the
              shell.  Also known as a ttookkeenn.							              shell.  Also known as a ttookkeenn.
       nnaammee   A _w_o_r_d consisting only of  alphanumeric  characters  and  under-		      |	       nnaammee   A  _w_o_r_d  consisting  only  of alphanumeric characters and under-
              scores,  and beginning with an alphabetic character or an under-		      |	              scores, and beginning with an alphabetic character or an  under-
              score.  Also referred to as an iiddeennttiiffiieerr.					              score.  Also referred to as an iiddeennttiiffiieerr.
       mmeettaacchhaarraacctteerr										       mmeettaacchhaarraacctteerr
              A character that, when unquoted, separates words.   One  of  the		      |	              A  character  that,  when unquoted, separates words.  One of the
              following:									              following:
              ||  && ;; (( )) << >> ssppaaccee ttaabb							      |	              ||  && ;; (( )) << >> ssppaaccee ttaabb nneewwlliinnee
       ccoonnttrrooll ooppeerraattoorr										       ccoonnttrrooll ooppeerraattoorr
              A _t_o_k_e_n that performs a control function.  It is one of the fol-			              A _t_o_k_e_n that performs a control function.  It is one of the fol-
              lowing symbols:									              lowing symbols:
              |||| && &&&& ;; ;;;; (( )) || <<nneewwlliinnee>>						      |	              |||| && &&&& ;; ;;;; ;;&& ;;;;&& (( )) || ||&& <<nneewwlliinnee>>

RREESSEERRVVEEDD WWOORRDDSS											RREESSEERRVVEEDD WWOORRDDSS
       _R_e_s_e_r_v_e_d _w_o_r_d_s are words that have a special meaning to the shell.  The			       _R_e_s_e_r_v_e_d _w_o_r_d_s are words that have a special meaning to the shell.  The
       following words are recognized as reserved when unquoted and either the			       following words are recognized as reserved when unquoted and either the
       first word of a simple command (see SSHHEELLLL GGRRAAMMMMAARR below) or  the  third		      |	       first  word  of a simple command (see SSHHEELLLL GGRRAAMMMMAARR below) or the third
       word of a ccaassee or ffoorr command:								       word of a ccaassee or ffoorr command:

       !!  ccaassee  ddoo ddoonnee eelliiff eellssee eessaacc ffii ffoorr ffuunnccttiioonn iiff iinn sseelleecctt tthheenn uunnttiill		      |	       !! ccaassee  ccoopprroocc  ddoo ddoonnee eelliiff eellssee eessaacc ffii ffoorr  ffuunnccttiioonn  iiff  iinn  sseelleecctt
       wwhhiillee {{ }} ttiimmee [[[[ ]]]]								      |	       tthheenn uunnttiill wwhhiillee {{ }} ttiimmee [[[[ ]]]]

SSHHEELLLL GGRRAAMMMMAARR											SSHHEELLLL GGRRAAMMMMAARR
   SSiimmppllee CCoommmmaannddss										   SSiimmppllee CCoommmmaannddss
       A _s_i_m_p_l_e _c_o_m_m_a_n_d is a sequence of optional  variable  assignments  fol-		      |	       A  _s_i_m_p_l_e  _c_o_m_m_a_n_d  is a sequence of optional variable assignments fol-
       lowed  by  bbllaannkk-separated  words and redirections, and terminated by a		      |	       lowed by bbllaannkk-separated words and redirections, and  terminated  by  a
       _c_o_n_t_r_o_l _o_p_e_r_a_t_o_r.  The first word specifies the command to be executed,			       _c_o_n_t_r_o_l _o_p_e_r_a_t_o_r.  The first word specifies the command to be executed,
       and  is  passed  as  argument  zero.  The remaining words are passed as		      |	       and is passed as argument zero.  The  remaining  words  are  passed  as
       arguments to the invoked command.							       arguments to the invoked command.

       The return value of a _s_i_m_p_l_e _c_o_m_m_a_n_d is its exit status,  or  128+_n  if		      |	       The  return  value  of a _s_i_m_p_l_e _c_o_m_m_a_n_d is its exit status, or 128+_n if
       the command is terminated by signal _n.							       the command is terminated by signal _n.

   PPiippeelliinneess											   PPiippeelliinneess
       A _p_i_p_e_l_i_n_e is a sequence of one or more commands separated by the char-		      |	       A _p_i_p_e_l_i_n_e is a sequence of one or more commands separated  by  one  of
       acter ||.  The format for a pipeline is:						      |	       the control operators || or ||&&.  The format for a pipeline is:

              [ttiimmee [--pp]] [ ! ] _c_o_m_m_a_n_d [ || _c_o_m_m_a_n_d_2 ... ]				      |	              [ttiimmee [--pp]] [ ! ] _c_o_m_m_a_n_d [ [|||||&&] _c_o_m_m_a_n_d_2 ... ]

       The standard output of _c_o_m_m_a_n_d is connected via a pipe to the  standard		      |	       The  standard output of _c_o_m_m_a_n_d is connected via a pipe to the standard
       input  of  _c_o_m_m_a_n_d_2.   This connection is performed before any redirec-		      |	       input of _c_o_m_m_a_n_d_2.  This connection is performed  before  any  redirec-
       tions specified by the command (see RREEDDIIRREECCTTIIOONN below).				      |	       tions specified by the command (see RREEDDIIRREECCTTIIOONN below).  If ||&& is used,
											      >	       _c_o_m_m_a_n_d's standard error, in addition to its standard output,  is  con-
											      >	       nected  to  _c_o_m_m_a_n_d_2's standard input through the pipe; it is shorthand
											      >	       for 22>>&&11 ||.  This implicit redirection of the  standard  error  to  the
											      >	       standard  output  is  performed after any redirections specified by the
											      >	       command.

       The return status of a pipeline is the exit status of the last command,			       The return status of a pipeline is the exit status of the last command,
       unless  the  ppiippeeffaaiill  option  is enabled.  If ppiippeeffaaiill is enabled, the			       unless  the  ppiippeeffaaiill  option  is enabled.  If ppiippeeffaaiill is enabled, the
       pipeline's return status is the value of the last  (rightmost)  command			       pipeline's return status is the value of the last  (rightmost)  command
       to  exit  with a non-zero status, or zero if all commands exit success-			       to  exit  with a non-zero status, or zero if all commands exit success-
       fully.  If the reserved word !!  precedes a pipeline, the exit status of			       fully.  If the reserved word !!  precedes a pipeline, the exit status of
       that  pipeline  is the logical negation of the exit status as described			       that  pipeline  is the logical negation of the exit status as described
       above.  The shell waits for all commands in the pipeline  to  terminate			       above.  The shell waits for all commands in the pipeline  to  terminate
       before returning a value.								       before returning a value.

       If  the  ttiimmee reserved word precedes a pipeline, the elapsed as well as			       If  the  ttiimmee reserved word precedes a pipeline, the elapsed as well as
       user and system time consumed by its execution are  reported  when  the			       user and system time consumed by its execution are  reported  when  the
       pipeline  terminates.   The --pp option changes the output format to that			       pipeline  terminates.   The --pp option changes the output format to that
       specified by POSIX.  The TTIIMMEEFFOORRMMAATT variable may be  set  to  a  format		      |	       specified by POSIX.  When the shell is in _p_o_s_i_x _m_o_d_e, it does not  rec-
       string  that  specifies how the timing information should be displayed;		      |	       ognize  ttiimmee  as  a  reserved word if the next token begins with a `-'.
       see the description of TTIIMMEEFFOORRMMAATT under SShheellll VVaarriiaabblleess below.			      |	       The TTIIMMEEFFOORRMMAATT variable may be set to a format  string  that  specifies
											      |	       how  the timing information should be displayed; see the description of
       Each command in a pipeline is executed as a separate process (i.e.,  in		      |	       TTIIMMEEFFOORRMMAATT under SShheellll VVaarriiaabblleess below.
       a subshell).									      |
											      >	       When the shell is in _p_o_s_i_x _m_o_d_e, ttiimmee may be followed by a newline.  In
											      >	       this  case,  the shell displays the total user and system time consumed
											      >	       by the shell and its children.  The TTIIMMEEFFOORRMMAATT variable may be used  to
											      >	       specify the format of the time information.
											      >
											      >	       Each  command in a pipeline is executed as a separate process (i.e., in
											      >	       a subshell).  See CCOOMMMMAANNDD EEXXEECCUUTTIIOONN EENNVVIIRROONNMMEENNTT for a description of  a
											      >	       subshell  environment.   If  the  llaassttppiippee  option is enabled using the
											      >	       sshhoopptt builtin (see the description of sshhoopptt below), the last element of
											      >	       a pipeline may be run by the shell process.

   LLiissttss											   LLiissttss
       A  _l_i_s_t  is a sequence of one or more pipelines separated by one of the			       A  _l_i_s_t  is a sequence of one or more pipelines separated by one of the
       operators ;;, &&, &&&&, or ||||, and optionally terminated by one of ;;, &&, or			       operators ;;, &&, &&&&, or ||||, and optionally terminated by one of ;;, &&, or
       <<nneewwlliinnee>>.										       <<nneewwlliinnee>>.

       Of these list operators, &&&& and |||| have equal precedence, followed by ;;			       Of these list operators, &&&& and |||| have equal precedence, followed by ;;
       and &&,, which have equal precedence.						      |	       and &&, which have equal precedence.

       A sequence of one or more newlines may appear in a _l_i_s_t  instead  of  a			       A sequence of one or more newlines may appear in a _l_i_s_t  instead  of  a
       semicolon to delimit commands.								       semicolon to delimit commands.

       If  a  command  is terminated by the control operator &&, the shell exe-			       If  a  command  is terminated by the control operator &&, the shell exe-
       cutes the command in the _b_a_c_k_g_r_o_u_n_d in a subshell.  The shell does  not			       cutes the command in the _b_a_c_k_g_r_o_u_n_d in a subshell.  The shell does  not
       wait  for  the command to finish, and the return status is 0.  Commands		      |	       wait  for the command to finish, and the return status is 0.  These are
       separated by a ;; are executed sequentially; the shell  waits  for  each		      |	       referred to as _a_s_y_n_c_h_r_o_n_o_u_s commands.  Commands separated by  a  ;;  are
       command  to terminate in turn.  The return status is the exit status of		      |	       executed sequentially; the shell waits for each command to terminate in
       the last command executed.							      |	       turn.  The return status is the exit status of the  last  command  exe-
											      |	       cuted.
       The control operators &&&& and |||| denote AND lists and OR lists,  respec-		      |
       tively.  An AND list has the form						      |	       AND  and  OR  lists are sequences of one or more pipelines separated by
											      >	       the &&&& and |||| control operators, respectively.  AND and  OR  lists  are
											      >	       executed with left associativity.  An AND list has the form

              _c_o_m_m_a_n_d_1 &&&& _c_o_m_m_a_n_d_2								              _c_o_m_m_a_n_d_1 &&&& _c_o_m_m_a_n_d_2

       _c_o_m_m_a_n_d_2  is  executed if, and only if, _c_o_m_m_a_n_d_1 returns an exit status			       _c_o_m_m_a_n_d_2  is  executed if, and only if, _c_o_m_m_a_n_d_1 returns an exit status
       of zero.										      |	       of zero (success).

       An OR list has the form									       An OR list has the form

              _c_o_m_m_a_n_d_1 |||| _c_o_m_m_a_n_d_2								              _c_o_m_m_a_n_d_1 |||| _c_o_m_m_a_n_d_2


       _c_o_m_m_a_n_d_2 is executed if and only if _c_o_m_m_a_n_d_1 returns  a  non-zero  exit		      |	       _c_o_m_m_a_n_d_2 is executed if, and only if, _c_o_m_m_a_n_d_1 returns a non-zero  exit
       status.   The  return  status of AND and OR lists is the exit status of			       status.   The  return  status of AND and OR lists is the exit status of
       the last command executed in the list.							       the last command executed in the list.

   CCoommppoouunndd CCoommmmaannddss										   CCoommppoouunndd CCoommmmaannddss
       A _c_o_m_p_o_u_n_d _c_o_m_m_a_n_d is one of the following:					      |	       A _c_o_m_p_o_u_n_d _c_o_m_m_a_n_d is one of the following.  In most cases a _l_i_s_t in  a
											      |	       command's  description may be separated from the rest of the command by
       (_l_i_s_t) _l_i_s_t is executed in a subshell environment (see  CCOOMMMMAANNDD  EEXXEECCUU--		      |	       one or more newlines, and may be followed by a newline in  place  of  a
              TTIIOONN  EENNVVIIRROONNMMEENNTT below).  Variable assignments and builtin com-		      |	       semicolon.
              mands that affect the  shell's  environment  do  not  remain  in		      |
              effect  after  the  command completes.  The return status is the		      |	       (_l_i_s_t) _l_i_s_t  is  executed in a subshell environment (see CCOOMMMMAANNDD EEXXEECCUU--
											      >	              TTIIOONN EENNVVIIRROONNMMEENNTT below).  Variable assignments and builtin  com-
											      >	              mands  that  affect  the  shell's  environment  do not remain in
											      >	              effect after the command completes.  The return  status  is  the
              exit status of _l_i_s_t.								              exit status of _l_i_s_t.

       { _l_i_s_t; }										       { _l_i_s_t; }
              _l_i_s_t is simply executed in the current shell environment.   _l_i_s_t		      |	              _l_i_s_t  is simply executed in the current shell environment.  _l_i_s_t
              must  be  terminated with a newline or semicolon.  This is known		      |	              must be terminated with a newline or semicolon.  This  is  known
              as a _g_r_o_u_p _c_o_m_m_a_n_d.  The return status is  the  exit  status  of		      |	              as  a  _g_r_o_u_p  _c_o_m_m_a_n_d.   The return status is the exit status of
              _l_i_s_t.   Note that unlike the metacharacters (( and )), {{ and }} are		      |	              _l_i_s_t.  Note that unlike the metacharacters (( and )), {{ and }}  are
              _r_e_s_e_r_v_e_d _w_o_r_d_s and must occur where a reserved word is permitted			              _r_e_s_e_r_v_e_d _w_o_r_d_s and must occur where a reserved word is permitted
              to  be  recognized.   Since they do not cause a word break, they		      |	              to be recognized.  Since they do not cause a  word  break,  they
              must be separated from _l_i_s_t by whitespace.				      |	              must  be  separated  from  _l_i_s_t  by  whitespace or another shell
											      >	              metacharacter.

       ((_e_x_p_r_e_s_s_i_o_n))										       ((_e_x_p_r_e_s_s_i_o_n))
              The _e_x_p_r_e_s_s_i_o_n is evaluated according  to  the  rules  described			              The _e_x_p_r_e_s_s_i_o_n is evaluated according  to  the  rules  described
              below  under AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN.  If the value of the expres-			              below  under AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN.  If the value of the expres-
              sion is non-zero, the return status is 0; otherwise  the  return			              sion is non-zero, the return status is 0; otherwise  the  return
              status is 1.  This is exactly equivalent to lleett ""_e_x_p_r_e_s_s_i_o_n"".			              status is 1.  This is exactly equivalent to lleett ""_e_x_p_r_e_s_s_i_o_n"".

       [[[[ _e_x_p_r_e_s_s_i_o_n ]]]]										       [[[[ _e_x_p_r_e_s_s_i_o_n ]]]]
              Return  a  status  of  0 or 1 depending on the evaluation of the			              Return  a  status  of  0 or 1 depending on the evaluation of the
              conditional expression _e_x_p_r_e_s_s_i_o_n.  Expressions are composed  of			              conditional expression _e_x_p_r_e_s_s_i_o_n.  Expressions are composed  of
              the  primaries  described  below  under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS.			              the  primaries  described  below  under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS.
              Word splitting and pathname expansion are not performed  on  the			              Word splitting and pathname expansion are not performed  on  the
              words  between  the  [[[[  and  ]]]]; tilde expansion, parameter and			              words  between  the  [[[[  and  ]]]]; tilde expansion, parameter and
              variable expansion, arithmetic expansion, command  substitution,			              variable expansion, arithmetic expansion, command  substitution,
              process  substitution,  and quote removal are performed.  Condi-			              process  substitution,  and quote removal are performed.  Condi-
              tional operators such as --ff must be unquoted to be recognized as			              tional operators such as --ff must be unquoted to be recognized as
              primaries.									              primaries.

              When  the  ==== and !!== operators are used, the string to the right		      |	              When  used with [[[[, the << and >> operators sort lexicographically
											      >	              using the current locale.
											      >
											      >	              When the ==== and !!== operators are used, the string to  the  right
              of the operator is considered a pattern and matched according to			              of the operator is considered a pattern and matched according to
              the  rules described below under PPaatttteerrnn MMaattcchhiinngg.  If the shell		      |	              the rules described below under PPaatttteerrnn MMaattcchhiinngg, as if the eexxtt--
              option nnooccaasseemmaattcchh is enabled, the match  is  performed  without		      |	              gglloobb shell option were enabled.  The == operator is equivalent to
              regard  to  the case of alphabetic characters.  The return value		      |	              ====.  If the nnooccaasseemmaattcchh shell option is enabled,  the  match  is
              is 0 if the string matches (====) or does not match (!!==) the  pat-		      |	              performed  without  regard to the case of alphabetic characters.
              tern, and 1 otherwise.  Any part of the pattern may be quoted to		      |	              The return value is 0 if the string matches  (====)  or  does  not
              force it to be matched as a string.					      |	              match  (!!==)  the pattern, and 1 otherwise.  Any part of the pat-
											      |	              tern may be quoted to force the quoted portion to be matched  as
              An additional binary operator, ==~~, is available, with  the  same		      |	              a string.
              precedence  as  ====  and  !!==.  When it is used, the string to the		      |
              right of the operator is considered an extended regular  expres-		      |	              An  additional  binary operator, ==~~, is available, with the same
              sion and matched accordingly (as in _r_e_g_e_x(3)).  The return value		      |	              precedence as ==== and !!==.  When it is used,  the  string  to  the
              is 0 if the string matches the pattern, and 1 otherwise.  If the		      |	              right  of  the  operator  is considered a POSIX extended regular
              regular  expression  is syntactically incorrect, the conditional		      |	              expression and matched accordingly (as in _r_e_g_e_x(3)).  The return
              expression's return value is 2.  If the shell option nnooccaasseemmaattcchh		      |	              value  is  0 if the string matches the pattern, and 1 otherwise.
              is enabled, the match is performed without regard to the case of		      |	              If the regular expression is syntactically incorrect, the condi-
              alphabetic  characters.   Substrings  matched  by  parenthesized		      |	              tional expression's return value is 2.  If the nnooccaasseemmaattcchh shell
              subexpressions  within  the  regular expression are saved in the		      |	              option is enabled, the match is performed without regard to  the
              array variable BBAASSHH__RREEMMAATTCCHH.  The element of  BBAASSHH__RREEMMAATTCCHH  with		      |	              case  of  alphabetic characters.  Any part of the pattern may be
              index 0 is the portion of the string matching the entire regular		      |	              quoted to force the quoted portion to be matched  as  a  string.
              expression.  The element of BBAASSHH__RREEMMAATTCCHH with  index  _n  is  the		      |	              Bracket expressions in regular expressions must be treated care-
              portion  of the string matching the _nth parenthesized subexpres-		      |	              fully, since  normal  quoting  characters  lose  their  meanings
              sion.									      |	              between brackets.  If the pattern is stored in a shell variable,
											      >	              quoting the variable expansion forces the entire pattern  to  be
											      >	              matched as a string.  Substrings matched by parenthesized subex-
											      >	              pressions within the regular expression are saved in  the  array
											      >	              variable BBAASSHH__RREEMMAATTCCHH.  The element of BBAASSHH__RREEMMAATTCCHH with index 0
											      >	              is the portion of the string matching the entire regular expres-
											      >	              sion.   The  element of BBAASSHH__RREEMMAATTCCHH with index _n is the portion
											      >	              of the string matching the _nth parenthesized subexpression.

              Expressions may  be  combined  using  the  following  operators,			              Expressions may  be  combined  using  the  following  operators,
              listed in decreasing order of precedence:						              listed in decreasing order of precedence:

              (( _e_x_p_r_e_s_s_i_o_n ))									              (( _e_x_p_r_e_s_s_i_o_n ))
                     Returns  the  value  of  _e_x_p_r_e_s_s_i_o_n.  This may be used to			                     Returns  the  value  of  _e_x_p_r_e_s_s_i_o_n.  This may be used to
                     override the normal precedence of operators.				                     override the normal precedence of operators.
              !! _e_x_p_r_e_s_s_i_o_n									              !! _e_x_p_r_e_s_s_i_o_n
                     True if _e_x_p_r_e_s_s_i_o_n is false.						                     True if _e_x_p_r_e_s_s_i_o_n is false.
              _e_x_p_r_e_s_s_i_o_n_1 &&&& _e_x_p_r_e_s_s_i_o_n_2							              _e_x_p_r_e_s_s_i_o_n_1 &&&& _e_x_p_r_e_s_s_i_o_n_2
                     True if both _e_x_p_r_e_s_s_i_o_n_1 and _e_x_p_r_e_s_s_i_o_n_2 are true.				                     True if both _e_x_p_r_e_s_s_i_o_n_1 and _e_x_p_r_e_s_s_i_o_n_2 are true.
              _e_x_p_r_e_s_s_i_o_n_1 |||| _e_x_p_r_e_s_s_i_o_n_2							              _e_x_p_r_e_s_s_i_o_n_1 |||| _e_x_p_r_e_s_s_i_o_n_2
                     True if either _e_x_p_r_e_s_s_i_o_n_1 or _e_x_p_r_e_s_s_i_o_n_2 is true.				                     True if either _e_x_p_r_e_s_s_i_o_n_1 or _e_x_p_r_e_s_s_i_o_n_2 is true.

              The &&&& and |||| operators do not evaluate _e_x_p_r_e_s_s_i_o_n_2 if the value			              The &&&& and |||| operators do not evaluate _e_x_p_r_e_s_s_i_o_n_2 if the value
              of  _e_x_p_r_e_s_s_i_o_n_1  is  sufficient to determine the return value of			              of  _e_x_p_r_e_s_s_i_o_n_1  is  sufficient to determine the return value of
              the entire conditional expression.						              the entire conditional expression.

       ffoorr _n_a_m_e [ iinn _w_o_r_d ] ; ddoo _l_i_s_t ; ddoonnee						      |	       ffoorr _n_a_m_e [ [ iinn [ _w_o_r_d _._._. ] ] ; ] ddoo _l_i_s_t ; ddoonnee
              The list of words following iinn is expanded, generating a list of			              The list of words following iinn is expanded, generating a list of
              items.  The variable _n_a_m_e is set to each element of this list in			              items.  The variable _n_a_m_e is set to each element of this list in
              turn, and _l_i_s_t is executed each time.  If the iinn _w_o_r_d  is  omit-			              turn, and _l_i_s_t is executed each time.  If the iinn _w_o_r_d  is  omit-
              ted,  the  ffoorr  command  executes  _l_i_s_t once for each positional			              ted,  the  ffoorr  command  executes  _l_i_s_t once for each positional
              parameter that is set (see PPAARRAAMMEETTEERRSS below).  The return status			              parameter that is set (see PPAARRAAMMEETTEERRSS below).  The return status
              is  the  exit  status of the last command that executes.  If the			              is  the  exit  status of the last command that executes.  If the
              expansion of the items following iinn results in an empty list, no			              expansion of the items following iinn results in an empty list, no
              commands are executed, and the return status is 0.				              commands are executed, and the return status is 0.

       ffoorr (( _e_x_p_r_1 ; _e_x_p_r_2 ; _e_x_p_r_3 )) ; ddoo _l_i_s_t ; ddoonnee						       ffoorr (( _e_x_p_r_1 ; _e_x_p_r_2 ; _e_x_p_r_3 )) ; ddoo _l_i_s_t ; ddoonnee
              First, the arithmetic expression _e_x_p_r_1 is evaluated according to			              First, the arithmetic expression _e_x_p_r_1 is evaluated according to
              the rules described  below  under  AARRIITTHHMMEETTIICC  EEVVAALLUUAATTIIOONN.   The			              the rules described  below  under  AARRIITTHHMMEETTIICC  EEVVAALLUUAATTIIOONN.   The
              arithmetic  expression  _e_x_p_r_2 is then evaluated repeatedly until			              arithmetic  expression  _e_x_p_r_2 is then evaluated repeatedly until
              it evaluates to zero.  Each time _e_x_p_r_2 evaluates to  a  non-zero			              it evaluates to zero.  Each time _e_x_p_r_2 evaluates to  a  non-zero
              value,  _l_i_s_t  is executed and the arithmetic expression _e_x_p_r_3 is			              value,  _l_i_s_t  is executed and the arithmetic expression _e_x_p_r_3 is
              evaluated.  If any expression is omitted, it behaves  as  if  it			              evaluated.  If any expression is omitted, it behaves  as  if  it
              evaluates to 1.  The return value is the exit status of the last			              evaluates to 1.  The return value is the exit status of the last
              command in _l_i_s_t that is executed, or false if any of the expres-			              command in _l_i_s_t that is executed, or false if any of the expres-
              sions is invalid.									              sions is invalid.

       sseelleecctt _n_a_m_e [ iinn _w_o_r_d ] ; ddoo _l_i_s_t ; ddoonnee							       sseelleecctt _n_a_m_e [ iinn _w_o_r_d ] ; ddoo _l_i_s_t ; ddoonnee
              The list of words following iinn is expanded, generating a list of			              The list of words following iinn is expanded, generating a list of
              items.  The set of expanded words is  printed  on  the  standard			              items.  The set of expanded words is  printed  on  the  standard
              error,  each  preceded  by a number.  If the iinn _w_o_r_d is omitted,			              error,  each  preceded  by a number.  If the iinn _w_o_r_d is omitted,
              the positional parameters are printed  (see  PPAARRAAMMEETTEERRSS  below).			              the positional parameters are printed  (see  PPAARRAAMMEETTEERRSS  below).
              The  PPSS33 prompt is then displayed and a line read from the stan-			              The  PPSS33 prompt is then displayed and a line read from the stan-
              dard input.  If the line consists of a number  corresponding  to			              dard input.  If the line consists of a number  corresponding  to
              one  of  the  displayed  words, then the value of _n_a_m_e is set to			              one  of  the  displayed  words, then the value of _n_a_m_e is set to
              that word.  If the line is empty, the words and prompt are  dis-			              that word.  If the line is empty, the words and prompt are  dis-
              played again.  If EOF is read, the command completes.  Any other			              played again.  If EOF is read, the command completes.  Any other
              value read causes _n_a_m_e to be set to  null.   The  line  read  is			              value read causes _n_a_m_e to be set to  null.   The  line  read  is
              saved  in  the  variable RREEPPLLYY.  The _l_i_s_t is executed after each			              saved  in  the  variable RREEPPLLYY.  The _l_i_s_t is executed after each
              selection until a bbrreeaakk command is executed.  The exit status of			              selection until a bbrreeaakk command is executed.  The exit status of
              sseelleecctt  is the exit status of the last command executed in _l_i_s_t,			              sseelleecctt  is the exit status of the last command executed in _l_i_s_t,
              or zero if no commands were executed.						              or zero if no commands were executed.

       ccaassee _w_o_r_d iinn [ [(] _p_a_t_t_e_r_n [ || _p_a_t_t_e_r_n ] ... ) _l_i_s_t ;; ] ... eessaacc			       ccaassee _w_o_r_d iinn [ [(] _p_a_t_t_e_r_n [ || _p_a_t_t_e_r_n ] ... ) _l_i_s_t ;; ] ... eessaacc
              A ccaassee command first expands _w_o_r_d, and tries to match it against			              A ccaassee command first expands _w_o_r_d, and tries to match it against
              each _p_a_t_t_e_r_n in turn, using the same matching rules as for path-		      |	              each  _p_a_t_t_e_r_n  in turn, using the matching rules described under
              name expansion (see PPaatthhnnaammee  EExxppaannssiioonn  below).   The  _w_o_r_d  is		      |	              PPaatttteerrnn MMaattcchhiinngg below.  The _w_o_r_d is expanded using tilde expan-
              expanded  using  tilde  expansion, parameter and variable expan-		      |	              sion,  parameter  and  variable expansion, arithmetic expansion,
              sion, arithmetic  substitution,  command  substitution,  process		      |	              command substitution, process substitution  and  quote  removal.
              substitution  and  quote  removal.   Each  _p_a_t_t_e_r_n  examined  is		      |	              Each _p_a_t_t_e_r_n examined is expanded using tilde expansion, parame-
              expanded using tilde expansion, parameter  and  variable  expan-		      |	              ter and variable expansion, arithmetic expansion,  command  sub-
              sion, arithmetic substitution, command substitution, and process		      |	              stitution,  and  process substitution.  If the nnooccaasseemmaattcchh shell
              substitution.  If the shell option nnooccaasseemmaattcchh is  enabled,  the		      |	              option is enabled, the match is performed without regard to  the
              match  is  performed  without  regard  to the case of alphabetic		      |	              case  of alphabetic characters.  When a match is found, the cor-
              characters.  When a match is found, the  corresponding  _l_i_s_t  is		      |	              responding _l_i_s_t is executed.  If the ;;;;  operator  is  used,  no
              executed.   After  the  first  match,  no subsequent matches are		      |	              subsequent  matches are attempted after the first pattern match.
              attempted.  The exit status is zero if no pattern matches.  Oth-		      |	              Using ;;&& in place of ;;;; causes execution to  continue  with  the
              erwise,  it  is  the exit status of the last command executed in		      |	              _l_i_s_t  associated  with  the  next set of patterns.  Using ;;;;&& in
											      >	              place of ;;;; causes the shell to test the next  pattern  list  in
											      >	              the statement, if any, and execute any associated _l_i_s_t on a suc-
											      >	              cessful match.  The exit status is zero if no  pattern  matches.
											      >	              Otherwise, it is the exit status of the last command executed in
              _l_i_s_t.										              _l_i_s_t.

       iiff _l_i_s_t; tthheenn _l_i_s_t_; [ eelliiff _l_i_s_t; tthheenn _l_i_s_t; ] ... [ eellssee _l_i_s_t; ] ffii		      |	       iiff _l_i_s_t; tthheenn _l_i_s_t; [ eelliiff _l_i_s_t; tthheenn _l_i_s_t; ] ... [ eellssee _l_i_s_t; ] ffii
              The iiff _l_i_s_t is executed.  If its exit status is zero,  the  tthheenn			              The iiff _l_i_s_t is executed.  If its exit status is zero,  the  tthheenn
              _l_i_s_t  is  executed.   Otherwise,  each  eelliiff _l_i_s_t is executed in			              _l_i_s_t  is  executed.   Otherwise,  each  eelliiff _l_i_s_t is executed in
              turn, and if its exit status is  zero,  the  corresponding  tthheenn			              turn, and if its exit status is  zero,  the  corresponding  tthheenn
              _l_i_s_t is executed and the command completes.  Otherwise, the eellssee			              _l_i_s_t is executed and the command completes.  Otherwise, the eellssee
              _l_i_s_t is executed, if present.  The exit status is the exit  sta-			              _l_i_s_t is executed, if present.  The exit status is the exit  sta-
              tus of the last command executed, or zero if no condition tested			              tus of the last command executed, or zero if no condition tested
              true.										              true.

       wwhhiillee _l_i_s_t; ddoo _l_i_s_t; ddoonnee							      |	       wwhhiillee _l_i_s_t_-_1; ddoo _l_i_s_t_-_2; ddoonnee
       uunnttiill _l_i_s_t; ddoo _l_i_s_t; ddoonnee							      |	       uunnttiill _l_i_s_t_-_1; ddoo _l_i_s_t_-_2; ddoonnee
              The wwhhiillee command continuously executes the ddoo _l_i_s_t as  long  as		      |	              The wwhhiillee command continuously executes the list _l_i_s_t_-_2 as  long
              the  last  command  in _l_i_s_t returns an exit status of zero.  The		      |	              as the last command in the list _l_i_s_t_-_1 returns an exit status of
              uunnttiill command is identical to the wwhhiillee command, except that the		      |	              zero.  The uunnttiill command is  identical  to  the  wwhhiillee  command,
              test  is  negated;  the  ddoo _l_i_s_t is executed as long as the last		      |	              except  that  the test is negated: _l_i_s_t_-_2 is executed as long as
              command in _l_i_s_t returns a non-zero exit status.  The exit status		      |	              the last command in _l_i_s_t_-_1 returns a non-zero exit status.   The
              of  the  wwhhiillee and uunnttiill commands is the exit status of the last		      |	              exit  status  of the wwhhiillee and uunnttiill commands is the exit status
              ddoo _l_i_s_t command executed, or zero if none was executed.			      |	              of the last command executed in _l_i_s_t_-_2, or zero if none was exe-
											      >	              cuted.
											      >
											      >	   CCoopprroocceesssseess
											      >	       A _c_o_p_r_o_c_e_s_s is a shell command preceded by the ccoopprroocc reserved word.  A
											      >	       coprocess is executed asynchronously in a subshell, as if  the  command
											      >	       had  been  terminated  with the && control operator, with a two-way pipe
											      >	       established between the executing shell and the coprocess.
											      >
											      >	       The format for a coprocess is:
											      >
											      >	              ccoopprroocc [_N_A_M_E] _c_o_m_m_a_n_d [_r_e_d_i_r_e_c_t_i_o_n_s]
											      >
											      >	       This creates a coprocess named _N_A_M_E.  If  _N_A_M_E  is  not  supplied,  the
											      >	       default name is CCOOPPRROOCC.  _N_A_M_E must not be supplied if _c_o_m_m_a_n_d is a _s_i_m_-
											      >	       _p_l_e _c_o_m_m_a_n_d (see above); otherwise, it is interpreted as the first word
											      >	       of  the simple command.  When the coprocess is executed, the shell cre-
											      >	       ates an array variable (see AArrrraayyss below) named _N_A_M_E in the context  of
											      >	       the executing shell.  The standard output of _c_o_m_m_a_n_d is connected via a
											      >	       pipe to a file  descriptor  in  the  executing  shell,  and  that  file
											      >	       descriptor  is  assigned  to _N_A_M_E[0].  The standard input of _c_o_m_m_a_n_d is
											      >	       connected via a pipe to a file descriptor in the executing  shell,  and
											      >	       that  file descriptor is assigned to _N_A_M_E[1].  This pipe is established
											      >	       before any redirections  specified  by  the  command  (see  RREEDDIIRREECCTTIIOONN
											      >	       below).   The  file  descriptors  can be utilized as arguments to shell
											      >	       commands and redirections using standard word expansions.   Other  than
											      >	       those  created  to  execute command and process substitutions, the file
											      >	       descriptors are not available in subshells.   The  process  ID  of  the
											      >	       shell spawned to execute the coprocess is available as the value of the
											      >	       variable _N_A_M_E_PID.  The wwaaiitt builtin command may be used  to  wait  for
											      >	       the coprocess to terminate.
											      >
											      >	       Since  the  coprocess is created as an asynchronous command, the ccoopprroocc
											      >	       command always returns success.  The return status of  a  coprocess  is
											      >	       the exit status of _c_o_m_m_a_n_d.

   SShheellll FFuunnccttiioonn DDeeffiinniittiioonnss									   SShheellll FFuunnccttiioonn DDeeffiinniittiioonnss
       A shell function is an object that is called like a simple command  and		      |	       A  shell function is an object that is called like a simple command and
       executes  a  compound  command with a new set of positional parameters.		      |	       executes a compound command with a new set  of  positional  parameters.
       Shell functions are declared as follows:							       Shell functions are declared as follows:

       [ ffuunnccttiioonn ] _n_a_m_e () _c_o_m_p_o_u_n_d_-_c_o_m_m_a_n_d [_r_e_d_i_r_e_c_t_i_o_n]				      |	       _n_a_m_e () _c_o_m_p_o_u_n_d_-_c_o_m_m_a_n_d [_r_e_d_i_r_e_c_t_i_o_n]
              This defines a function named _n_a_m_e.  The reserved word  ffuunnccttiioonn		      |	       ffuunnccttiioonn _n_a_m_e [()] _c_o_m_p_o_u_n_d_-_c_o_m_m_a_n_d [_r_e_d_i_r_e_c_t_i_o_n]
              is  optional.   If  the  ffuunnccttiioonn reserved word is supplied, the		      |	              This  defines a function named _n_a_m_e.  The reserved word ffuunnccttiioonn
              parentheses are optional.  The _b_o_d_y of the function is the  com-		      |	              is optional.  If the ffuunnccttiioonn reserved  word  is  supplied,  the
              pound  command  _c_o_m_p_o_u_n_d_-_c_o_m_m_a_n_d  (see CCoommppoouunndd CCoommmmaannddss above).		      |	              parentheses  are optional.  The _b_o_d_y of the function is the com-
              That command is usually a _l_i_s_t of commands between { and },  but		      |	              pound command _c_o_m_p_o_u_n_d_-_c_o_m_m_a_n_d (see  CCoommppoouunndd  CCoommmmaannddss  above).
              may  be  any command listed under CCoommppoouunndd CCoommmmaannddss above.  _c_o_m_-		      |	              That  command is usually a _l_i_s_t of commands between { and }, but
											      >	              may be any command listed under CCoommppoouunndd  CCoommmmaannddss  above,  with
											      >	              one  exception:  If  the ffuunnccttiioonn reserved word is used, but the
											      >	              parentheses are not supplied, the  braces  are  required.   _c_o_m_-
              _p_o_u_n_d_-_c_o_m_m_a_n_d is executed whenever _n_a_m_e is specified as the name			              _p_o_u_n_d_-_c_o_m_m_a_n_d is executed whenever _n_a_m_e is specified as the name
              of  a  simple command.  Any redirections (see RREEDDIIRREECCTTIIOONN below)		      |	              of a simple command.  When in _p_o_s_i_x _m_o_d_e, _n_a_m_e may  not  be  the
              specified when a function is  defined  are  performed  when  the		      |	              name  of  one  of  the POSIX _s_p_e_c_i_a_l _b_u_i_l_t_i_n_s.  Any redirections
              function  is executed.  The exit status of a function definition		      |	              (see RREEDDIIRREECCTTIIOONN below) specified when a function is defined are
              is zero unless a syntax error occurs or a readonly function with		      |	              performed  when  the function is executed.  The exit status of a
              the same name already exists.  When executed, the exit status of		      |	              function definition is zero unless a syntax error  occurs  or  a
              a function is the exit status of the last  command  executed  in		      |	              readonly  function with the same name already exists.  When exe-
              the body.  (See FFUUNNCCTTIIOONNSS below.)						      |	              cuted, the exit status of a function is the exit status  of  the
											      >	              last command executed in the body.  (See FFUUNNCCTTIIOONNSS below.)

CCOOMMMMEENNTTSS											CCOOMMMMEENNTTSS
       In a non-interactive shell, or an interactive shell in which the iinntteerr--			       In a non-interactive shell, or an interactive shell in which the iinntteerr--
       aaccttiivvee__ccoommmmeennttss option to the  sshhoopptt  builtin  is  enabled  (see  SSHHEELLLL			       aaccttiivvee__ccoommmmeennttss option to the  sshhoopptt  builtin  is  enabled  (see  SSHHEELLLL
       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below), a word beginning with ## causes that word and			       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below), a word beginning with ## causes that word and
       all remaining characters on that line to be  ignored.   An  interactive			       all remaining characters on that line to be  ignored.   An  interactive
       shell  without  the  iinntteerraaccttiivvee__ccoommmmeennttss option enabled does not allow			       shell  without  the  iinntteerraaccttiivvee__ccoommmmeennttss option enabled does not allow
       comments.  The iinntteerraaccttiivvee__ccoommmmeennttss option is on by default in interac-			       comments.  The iinntteerraaccttiivvee__ccoommmmeennttss option is on by default in interac-
       tive shells.										       tive shells.

QQUUOOTTIINNGG												QQUUOOTTIINNGG
       _Q_u_o_t_i_n_g  is used to remove the special meaning of certain characters or			       _Q_u_o_t_i_n_g  is used to remove the special meaning of certain characters or
       words to the shell.  Quoting can be used to disable  special  treatment			       words to the shell.  Quoting can be used to disable  special  treatment
       for special characters, to prevent reserved words from being recognized			       for special characters, to prevent reserved words from being recognized
       as such, and to prevent parameter expansion.						       as such, and to prevent parameter expansion.

       Each of the _m_e_t_a_c_h_a_r_a_c_t_e_r_s listed above under DDEEFFIINNIITTIIOONNSS  has  special			       Each of the _m_e_t_a_c_h_a_r_a_c_t_e_r_s listed above under DDEEFFIINNIITTIIOONNSS  has  special
       meaning to the shell and must be quoted if it is to represent itself.			       meaning to the shell and must be quoted if it is to represent itself.

       When  the command history expansion facilities are being used (see HHIISS--			       When  the command history expansion facilities are being used (see HHIISS--
       TTOORRYY EEXXPPAANNSSIIOONN below), the _h_i_s_t_o_r_y _e_x_p_a_n_s_i_o_n character, usually !!, must			       TTOORRYY EEXXPPAANNSSIIOONN below), the _h_i_s_t_o_r_y _e_x_p_a_n_s_i_o_n character, usually !!, must
       be quoted to prevent history expansion.							       be quoted to prevent history expansion.

       There  are  three  quoting  mechanisms:  the  _e_s_c_a_p_e  _c_h_a_r_a_c_t_e_r, single			       There  are  three  quoting  mechanisms:  the  _e_s_c_a_p_e  _c_h_a_r_a_c_t_e_r, single
       quotes, and double quotes.								       quotes, and double quotes.

       A non-quoted backslash (\\) is the _e_s_c_a_p_e _c_h_a_r_a_c_t_e_r.  It  preserves  the			       A non-quoted backslash (\\) is the _e_s_c_a_p_e _c_h_a_r_a_c_t_e_r.  It  preserves  the
       literal value of the next character that follows, with the exception of			       literal value of the next character that follows, with the exception of
       <newline>.  If a \\<newline> pair appears,  and  the  backslash  is  not			       <newline>.  If a \\<newline> pair appears,  and  the  backslash  is  not
       itself  quoted,  the \\<newline> is treated as a line continuation (that			       itself  quoted,  the \\<newline> is treated as a line continuation (that
       is, it is removed from the input stream and effectively ignored).			       is, it is removed from the input stream and effectively ignored).

       Enclosing characters in single quotes preserves the  literal  value  of			       Enclosing characters in single quotes preserves the  literal  value  of
       each character within the quotes.  A single quote may not occur between			       each character within the quotes.  A single quote may not occur between
       single quotes, even when preceded by a backslash.					       single quotes, even when preceded by a backslash.

       Enclosing characters in double quotes preserves the  literal  value  of			       Enclosing characters in double quotes preserves the  literal  value  of
       all  characters  within the quotes, with the exception of $$, ``, \\, and,			       all  characters  within the quotes, with the exception of $$, ``, \\, and,
       when history expansion is enabled, !!.  The characters $$  and  ``  retain		      |	       when history expansion is enabled, !!.  When the shell is in _p_o_s_i_x _m_o_d_e,
       their  special meaning within double quotes.  The backslash retains its		      |	       the  !!  has  no special meaning within double quotes, even when history
       special meaning only when followed by one of the following  characters:		      |	       expansion is enabled.  The characters $$  and  ``  retain  their  special
       $$,  ``,  "", \\, or <<nneewwlliinnee>>.  A double quote may be quoted within double		      |	       meaning  within double quotes.  The backslash retains its special mean-
       quotes by preceding it with a backslash.  If enabled, history expansion		      |	       ing only when followed by one of the following characters: $$, ``, "",  \\,
       will  be  performed  unless an !!  appearing in double quotes is escaped		      |	       or  <<nneewwlliinnee>>.   A  double  quote may be quoted within double quotes by
       using a backslash.  The backslash preceding the !!  is not removed.		      |	       preceding it with a backslash.  If enabled, history expansion  will  be
											      >	       performed  unless  an  !!  appearing in double quotes is escaped using a
											      >	       backslash.  The backslash preceding the !!  is not removed.

       The special parameters ** and @@ have  special  meaning  when  in  double			       The special parameters ** and @@ have  special  meaning  when  in  double
       quotes (see PPAARRAAMMEETTEERRSS below).								       quotes (see PPAARRAAMMEETTEERRSS below).

       Words of the form $$'_s_t_r_i_n_g' are treated specially.  The word expands to			       Words of the form $$'_s_t_r_i_n_g' are treated specially.  The word expands to
       _s_t_r_i_n_g, with backslash-escaped characters replaced as specified by  the			       _s_t_r_i_n_g, with backslash-escaped characters replaced as specified by  the
       ANSI  C  standard.  Backslash escape sequences, if present, are decoded			       ANSI  C  standard.  Backslash escape sequences, if present, are decoded
       as follows:										       as follows:
              \\aa     alert (bell)								              \\aa     alert (bell)
              \\bb     backspace									              \\bb     backspace
              \\ee     an escape character						      |	              \\ee
											      >	              \\EE     an escape character
              \\ff     form feed									              \\ff     form feed
              \\nn     new line									              \\nn     new line
              \\rr     carriage return								              \\rr     carriage return
              \\tt     horizontal tab								              \\tt     horizontal tab
              \\vv     vertical tab								              \\vv     vertical tab
              \\\\     backslash									              \\\\     backslash
              \\''     single quote								              \\''     single quote
											      >	              \\""     double quote
											      >	              \\??     question mark
              \\_n_n_n   the eight-bit character whose value is  the  octal  value			              \\_n_n_n   the eight-bit character whose value is  the  octal  value
                     _n_n_n (one to three digits)						      |	                     _n_n_n (one to three octal digits)
              \\xx_H_H   the  eight-bit  character  whose value is the hexadecimal			              \\xx_H_H   the  eight-bit  character  whose value is the hexadecimal
                     value _H_H (one or two hex digits)						                     value _H_H (one or two hex digits)
											      >	              \\uu_H_H_H_H the Unicode (ISO/IEC 10646) character whose value is  the
											      >	                     hexadecimal value _H_H_H_H (one to four hex digits)
											      >	              \\UU_H_H_H_H_H_H_H_H
											      >	                     the  Unicode (ISO/IEC 10646) character whose value is the
											      >	                     hexadecimal value _H_H_H_H_H_H_H_H (one to eight hex digits)
              \\cc_x    a control-_x character							              \\cc_x    a control-_x character

       The expanded result is single-quoted, as if the  dollar  sign  had  not			       The expanded result is single-quoted, as if the  dollar  sign  had  not
       been present.										       been present.

       A  double-quoted  string  preceded  by a dollar sign ($$) will cause the		      |	       A double-quoted string preceded by a dollar sign ($$"_s_t_r_i_n_g") will cause
       string to be translated according to the current locale.  If  the  cur-		      |	       the string to be translated according to the current  locale.   If  the
       rent  locale  is CC or PPOOSSIIXX, the dollar sign is ignored.  If the string		      |	       current  locale  is  CC  or  PPOOSSIIXX,  the dollar sign is ignored.  If the
       is translated and replaced, the replacement is double-quoted.			      |	       string is translated and replaced, the replacement is double-quoted.

PPAARRAAMMEETTEERRSS											PPAARRAAMMEETTEERRSS
       A _p_a_r_a_m_e_t_e_r is an entity that stores values.  It can be a _n_a_m_e, a  num-			       A _p_a_r_a_m_e_t_e_r is an entity that stores values.  It can be a _n_a_m_e, a  num-
       ber, or one of the special characters listed below under SSppeecciiaall PPaarraamm--			       ber, or one of the special characters listed below under SSppeecciiaall PPaarraamm--
       eetteerrss.  A _v_a_r_i_a_b_l_e is a parameter denoted by a _n_a_m_e.  A variable has  a			       eetteerrss.  A _v_a_r_i_a_b_l_e is a parameter denoted by a _n_a_m_e.  A variable has  a
       _v_a_l_u_e  and  zero or more _a_t_t_r_i_b_u_t_e_s.  Attributes are assigned using the			       _v_a_l_u_e  and  zero or more _a_t_t_r_i_b_u_t_e_s.  Attributes are assigned using the
       ddeeccllaarree builtin command (see ddeeccllaarree below in SSHHEELLLL BBUUIILLTTIINN  CCOOMMMMAANNDDSS).			       ddeeccllaarree builtin command (see ddeeccllaarree below in SSHHEELLLL BBUUIILLTTIINN  CCOOMMMMAANNDDSS).

       A parameter is set if it has been assigned a value.  The null string is			       A parameter is set if it has been assigned a value.  The null string is
       a valid value.  Once a variable is set, it may be unset only  by  using			       a valid value.  Once a variable is set, it may be unset only  by  using
       the uunnsseett builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).				       the uunnsseett builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).

       A _v_a_r_i_a_b_l_e may be assigned to by a statement of the form					       A _v_a_r_i_a_b_l_e may be assigned to by a statement of the form

              _n_a_m_e=[_v_a_l_u_e]									              _n_a_m_e=[_v_a_l_u_e]

       If  _v_a_l_u_e  is not given, the variable is assigned the null string.  All			       If  _v_a_l_u_e  is not given, the variable is assigned the null string.  All
       _v_a_l_u_e_s undergo tilde expansion, parameter and variable expansion,  com-			       _v_a_l_u_e_s undergo tilde expansion, parameter and variable expansion,  com-
       mand  substitution, arithmetic expansion, and quote removal (see EEXXPPAANN--			       mand  substitution, arithmetic expansion, and quote removal (see EEXXPPAANN--
       SSIIOONN below).  If the variable has its iinntteeggeerr attribute set, then _v_a_l_u_e			       SSIIOONN below).  If the variable has its iinntteeggeerr attribute set, then _v_a_l_u_e
       is evaluated as an arithmetic expression even if the $((...)) expansion			       is evaluated as an arithmetic expression even if the $((...)) expansion
       is not used (see AArriitthhmmeettiicc EExxppaannssiioonn below).  Word  splitting  is  not			       is not used (see AArriitthhmmeettiicc EExxppaannssiioonn below).  Word  splitting  is  not
       performed,  with the exception of ""$$@@"" as explained below under SSppeecciiaall			       performed,  with the exception of ""$$@@"" as explained below under SSppeecciiaall
       PPaarraammeetteerrss.  Pathname expansion is not  performed.   Assignment  state-			       PPaarraammeetteerrss.  Pathname expansion is not  performed.   Assignment  state-
       ments  may  also  appear  as  arguments to the aalliiaass, ddeeccllaarree, ttyyppeesseett,			       ments  may  also  appear  as  arguments to the aalliiaass, ddeeccllaarree, ttyyppeesseett,
       eexxppoorrtt, rreeaaddoonnllyy, and llooccaall builtin commands.					      |	       eexxppoorrtt, rreeaaddoonnllyy, and llooccaall builtin  commands  (_d_e_c_l_a_r_a_t_i_o_n  commands).
											      >	       When in _p_o_s_i_x _m_o_d_e, these builtins may appear in a command after one or
											      >	       more instances of the  ccoommmmaanndd  builtin  and  retain  these  assignment
											      >	       statement properties.

       In the context where an assignment statement is assigning a value to  a		      |	       In  the context where an assignment statement is assigning a value to a
       shell variable or array index, the += operator can be used to append to			       shell variable or array index, the += operator can be used to append to
       or add to the variable's previous value.  When += is applied to a vari-		      |	       or  add  to  the variable's previous value.  This includes arguments to
       able  for  which the integer attribute has been set, _v_a_l_u_e is evaluated		      |	       builtin commands such as  ddeeccllaarree  that  accept  assignment  statements
       as an arithmetic expression and added to the variable's current  value,		      |	       (_d_e_c_l_a_r_a_t_i_o_n commands).  When += is applied to a variable for which the
       which is also evaluated.  When += is applied to an array variable using		      |	       _i_n_t_e_g_e_r attribute has been set, _v_a_l_u_e is  evaluated  as  an  arithmetic
       compound assignment (see AArrrraayyss below), the  variable's  value  is  not		      |	       expression  and  added  to  the variable's current value, which is also
       unset (as it is when using =), and new values are appended to the array		      |	       evaluated.  When += is applied to  an  array  variable  using  compound
       beginning at one greater than the array's maximum index.  When  applied		      |	       assignment (see AArrrraayyss below), the variable's value is not unset (as it
       to  a  string-valued  variable,  _v_a_l_u_e  is expanded and appended to the		      |	       is when using =), and new values are appended to the array beginning at
       variable's value.								      |	       one  greater  than  the  array's  maximum index (for indexed arrays) or
											      >	       added as additional key-value pairs  in  an  associative  array.   When
											      >	       applied  to a string-valued variable, _v_a_l_u_e is expanded and appended to
											      >	       the variable's value.
											      >
											      >	       A variable can be assigned the _n_a_m_e_r_e_f attribute using the --nn option to
											      >	       the  ddeeccllaarree or llooccaall builtin commands (see the descriptions of ddeeccllaarree
											      >	       and llooccaall below) to create a _n_a_m_e_r_e_f, or a reference to  another  vari-
											      >	       able.   This  allows  variables to be manipulated indirectly.  Whenever
											      >	       the nameref variable is referenced, assigned  to,  unset,  or  has  its
											      >	       attributes modified (other than using or changing the _n_a_m_e_r_e_f attribute
											      >	       itself), the operation is actually performed on the variable  specified
											      >	       by  the  nameref  variable's  value.  A nameref is commonly used within
											      >	       shell functions to refer to a variable whose name is passed as an argu-
											      >	       ment  to the function.  For instance, if a variable name is passed to a
											      >	       shell function as its first argument, running
											      >	              declare -n ref=$1
											      >	       inside the function creates a nameref variable rreeff whose value  is  the
											      >	       variable name passed as the first argument.  References and assignments
											      >	       to rreeff, and changes to  its  attributes,  are  treated  as  references,
											      >	       assignments, and attribute modifications to the variable whose name was
											      >	       passed as $$11.  If the control variable in a ffoorr loop  has  the  nameref
											      >	       attribute,  the  list  of words can be a list of shell variables, and a
											      >	       name reference will be established for each word in the list, in  turn,
											      >	       when the loop is executed.  Array variables cannot be given the nnaammeerreeff
											      >	       attribute.  However, nameref variables can  reference  array  variables
											      >	       and  subscripted  array  variables.  Namerefs can be unset using the --nn
											      >	       option to the uunnsseett builtin.  Otherwise, if uunnsseett is executed with  the
											      >	       name  of  a nameref variable as an argument, the variable referenced by
											      >	       the nameref variable will be unset.

   PPoossiittiioonnaall PPaarraammeetteerrss									   PPoossiittiioonnaall PPaarraammeetteerrss
       A _p_o_s_i_t_i_o_n_a_l _p_a_r_a_m_e_t_e_r is a parameter denoted by one  or  more  digits,			       A _p_o_s_i_t_i_o_n_a_l _p_a_r_a_m_e_t_e_r is a parameter denoted by one  or  more  digits,
       other than the single digit 0.  Positional parameters are assigned from			       other than the single digit 0.  Positional parameters are assigned from
       the shell's arguments when it is invoked, and may be  reassigned  using			       the shell's arguments when it is invoked, and may be  reassigned  using
       the  sseett builtin command.  Positional parameters may not be assigned to			       the  sseett builtin command.  Positional parameters may not be assigned to
       with assignment statements.  The positional parameters are  temporarily			       with assignment statements.  The positional parameters are  temporarily
       replaced when a shell function is executed (see FFUUNNCCTTIIOONNSS below).			       replaced when a shell function is executed (see FFUUNNCCTTIIOONNSS below).

       When  a  positional parameter consisting of more than a single digit is			       When  a  positional parameter consisting of more than a single digit is
       expanded, it must be enclosed in braces (see EEXXPPAANNSSIIOONN below).				       expanded, it must be enclosed in braces (see EEXXPPAANNSSIIOONN below).

   SSppeecciiaall PPaarraammeetteerrss										   SSppeecciiaall PPaarraammeetteerrss
       The shell treats several parameters specially.   These  parameters  may			       The shell treats several parameters specially.   These  parameters  may
       only be referenced; assignment to them is not allowed.					       only be referenced; assignment to them is not allowed.
       **      Expands  to  the positional parameters, starting from one.  When			       **      Expands  to  the positional parameters, starting from one.  When
              the expansion occurs within double quotes, it expands to a  sin-		      |	              the expansion is  not  within  double  quotes,  each  positional
              gle word with the value of each parameter separated by the first		      |	              parameter  expands  to a separate word.  In contexts where it is
              character of the IIFFSS special variable.  That is, "$$**" is equiva-		      |	              performed, those words are subject to further word splitting and
              lent to "$$11_c$$22_c......", where _c is the first character of the value		      |	              pathname  expansion.   When  the  expansion occurs within double
              of the IIFFSS variable.  If IIFFSS is unset, the parameters are  sepa-		      |	              quotes, it expands to a single  word  with  the  value  of  each
              rated  by  spaces.   If  IIFFSS  is null, the parameters are joined		      |	              parameter  separated  by  the first character of the IIFFSS special
              without intervening separators.						      |	              variable.  That is, "$$**" is equivalent to "$$11_c$$22_c......",  where  _c
       @@      Expands to the positional parameters, starting from  one.   When		      |	              is the first character of the value of the IIFFSS variable.  If IIFFSS
											      >	              is unset, the parameters are separated by  spaces.   If  IIFFSS  is
											      >	              null,  the parameters are joined without intervening separators.
											      >	       @@      Expands to the positional parameters,  starting  from  one.   In
											      >	              contexts  where  word  splitting is performed, this expands each
											      >	              positional parameter to a separate word; if  not  within  double
											      >	              quotes,  these words are subject to word splitting.  In contexts
											      >	              where word splitting is not performed, this expands to a  single
											      >	              word  with each positional parameter separated by a space.  When
              the  expansion  occurs  within  double  quotes,  each  parameter			              the  expansion  occurs  within  double  quotes,  each  parameter
              expands to a separate word.  That is, "$$@@" is equivalent to "$$11"			              expands to a separate word.  That is, "$$@@" is equivalent to "$$11"
              "$$22"  ...   If the double-quoted expansion occurs within a word,		      |	              "$$22" ...  If the double-quoted expansion occurs within  a  word,
              the expansion of the first parameter is joined with  the  begin-		      |	              the  expansion  of the first parameter is joined with the begin-
              ning  part  of  the original word, and the expansion of the last		      |	              ning part of the original word, and the expansion  of  the  last
              parameter is joined with the last part  of  the  original  word.		      |	              parameter  is  joined  with  the last part of the original word.
              When  there  are no positional parameters, "$$@@" and $$@@ expand to		      |	              When there are no positional parameters, "$$@@" and $$@@  expand  to
              nothing (i.e., they are removed).							              nothing (i.e., they are removed).
       ##      Expands to the number of positional parameters in decimal.			       ##      Expands to the number of positional parameters in decimal.
       ??      Expands to the status of the most recently  executed  foreground		      |	       ??      Expands  to  the exit status of the most recently executed fore-
              pipeline.									      |	              ground pipeline.
       --      Expands  to  the  current option flags as specified upon invoca-		      |	       --      Expands to the current option flags as  specified  upon  invoca-
              tion, by the sseett builtin command, or  those  set  by  the  shell		      |	              tion,  by  the  sseett  builtin  command, or those set by the shell
              itself (such as the --ii option).							              itself (such as the --ii option).
       $$      Expands  to  the  process ID of the shell.  In a () subshell, it		      |	       $$      Expands to the process ID of the shell.  In a  ()  subshell,  it
              expands to the process ID of the current  shell,  not  the  sub-		      |	              expands  to  the  process  ID of the current shell, not the sub-
              shell.										              shell.
       !!      Expands  to  the  process ID of the most recently executed back-		      |	       !!      Expands to the process ID of the job most recently  placed  into
              ground (asynchronous) command.						      |	              the  background,  whether executed as an asynchronous command or
											      >	              using the bbgg builtin (see JJOOBB CCOONNTTRROOLL below).
       00      Expands to the name of the shell or shell script.  This  is  set			       00      Expands to the name of the shell or shell script.  This  is  set
              at shell initialization.  If bbaasshh is invoked with a file of com-			              at shell initialization.  If bbaasshh is invoked with a file of com-
              mands, $$00 is set to the name of that file.  If bbaasshh  is  started			              mands, $$00 is set to the name of that file.  If bbaasshh  is  started
              with  the  --cc option, then $$00 is set to the first argument after			              with  the  --cc option, then $$00 is set to the first argument after
              the string to be executed, if one is present.  Otherwise, it  is			              the string to be executed, if one is present.  Otherwise, it  is
              set  to  the file name used to invoke bbaasshh, as given by argument		      |	              set  to  the  filename used to invoke bbaasshh, as given by argument
              zero.										              zero.
       __      At shell startup, set to the absolute pathname  used  to  invoke			       __      At shell startup, set to the absolute pathname  used  to  invoke
              the  shell or shell script being executed as passed in the envi-			              the  shell or shell script being executed as passed in the envi-
              ronment or argument list.  Subsequently,  expands  to  the  last			              ronment or argument list.  Subsequently,  expands  to  the  last
              argument  to the previous command, after expansion.  Also set to		      |	              argument  to  the  previous simple command executed in the fore-
              the full pathname used  to  invoke  each  command  executed  and		      |	              ground, after expansion.  Also set to the full pathname used  to
              placed in the environment exported to that command.  When check-		      |	              invoke  each  command  executed  and  placed  in the environment
              ing mail, this parameter holds the name of the  mail  file  cur-		      |	              exported to that command.  When checking  mail,  this  parameter
              rently being checked.							      |	              holds the name of the mail file currently being checked.

   SShheellll VVaarriiaabblleess										   SShheellll VVaarriiaabblleess
       The following variables are set by the shell:						       The following variables are set by the shell:

       BBAASSHH   Expands  to  the  full file name used to invoke this instance of		      |	       BBAASSHH   Expands  to  the  full  filename used to invoke this instance of
              bbaasshh.										              bbaasshh.
											      >	       BBAASSHHOOPPTTSS
											      >	              A colon-separated list of enabled shell options.  Each  word  in
											      >	              the  list  is  a  valid  argument for the --ss option to the sshhoopptt
											      >	              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  The options
											      >	              appearing  in  BBAASSHHOOPPTTSS  are  those reported as _o_n by sshhoopptt.  If
											      >	              this variable is in the environment when bbaasshh  starts  up,  each
											      >	              shell  option  in  the  list  will be enabled before reading any
											      >	              startup files.  This variable is read-only.
											      >	       BBAASSHHPPIIDD
											      >	              Expands to the process ID of the  current  bbaasshh  process.   This
											      >	              differs  from  $$$$ under certain circumstances, such as subshells
											      >	              that do not require bbaasshh to be re-initialized.   Assignments  to
											      >	              BBAASSHHPPIIDD  have no effect.  If BBAASSHHPPIIDD is unset, it loses its spe-
											      >	              cial properties, even if it is subsequently reset.
											      >	       BBAASSHH__AALLIIAASSEESS
											      >	              An associative array variable whose members  correspond  to  the
											      >	              internal  list  of  aliases  as maintained by the aalliiaass builtin.
											      >	              Elements added to this array appear in the alias list;  however,
											      >	              unsetting  array elements currently does not cause aliases to be
											      >	              removed from the alias list.  If BBAASSHH__AALLIIAASSEESS is unset, it loses
											      >	              its special properties, even if it is subsequently reset.
       BBAASSHH__AARRGGCC										       BBAASSHH__AARRGGCC
              An array variable whose values are the number of  parameters  in		      |	              An  array  variable whose values are the number of parameters in
              each frame of the current bash execution call stack.  The number		      |	              each frame of the current bbaasshh execution call stack.  The number
              of parameters to  the  current  subroutine  (shell  function  or		      |	              of  parameters  to  the  current  subroutine  (shell function or
              script  executed  with  .. or ssoouurrccee) is at the top of the stack.		      |	              script executed with .. or ssoouurrccee) is at the top  of  the  stack.
              When a subroutine is executed, the number of  parameters  passed		      |	              When  a  subroutine is executed, the number of parameters passed
              is pushed onto BBAASSHH__AARRGGCC.  The shell sets BBAASSHH__AARRGGCC only when in			              is pushed onto BBAASSHH__AARRGGCC.  The shell sets BBAASSHH__AARRGGCC only when in
              extended debugging mode (see the  description  of  the  eexxttddeebbuugg		      |	              extended  debugging  mode  (see  the description of the eexxttddeebbuugg
              option to the sshhoopptt builtin below)					      |	              option to the sshhoopptt builtin below).  Setting eexxttddeebbuugg after  the
											      >	              shell has started to execute a script, or referencing this vari-
											      >	              able when eexxttddeebbuugg is not set, may result in  inconsistent  val-
											      >	              ues.
       BBAASSHH__AARRGGVV										       BBAASSHH__AARRGGVV
              An  array  variable containing all of the parameters in the cur-			              An  array  variable containing all of the parameters in the cur-
              rent bash execution call stack.  The final parameter of the last		      |	              rent bbaasshh execution call stack.  The final parameter of the last
              subroutine  call is at the top of the stack; the first parameter			              subroutine  call is at the top of the stack; the first parameter
              of the initial call is at the bottom.  When a subroutine is exe-			              of the initial call is at the bottom.  When a subroutine is exe-
              cuted,  the  parameters supplied are pushed onto BBAASSHH__AARRGGVV.  The			              cuted,  the  parameters supplied are pushed onto BBAASSHH__AARRGGVV.  The
              shell sets BBAASSHH__AARRGGVV only when in extended debugging  mode  (see			              shell sets BBAASSHH__AARRGGVV only when in extended debugging  mode  (see
              the  description  of  the  eexxttddeebbuugg  option to the sshhoopptt builtin			              the  description  of  the  eexxttddeebbuugg  option to the sshhoopptt builtin
              below)									      |	              below).  Setting eexxttddeebbuugg after the shell has started to execute
											      >	              a script, or referencing this variable when eexxttddeebbuugg is not set,
											      >	              may result in inconsistent values.
											      >	       BBAASSHH__AARRGGVV00
											      >	              When referenced, this variable expands to the name of the  shell
											      >	              or shell script (identical to $$00; see the description of special
											      >	              parameter 0 above).  Assignment to BBAASSHH__AARRGGVV00 causes  the  value
											      >	              assigned  to also be assigned to $$00.  If BBAASSHH__AARRGGVV00 is unset, it
											      >	              loses its special properties, even if it is subsequently  reset.
											      >	       BBAASSHH__CCMMDDSS
											      >	              An  associative  array  variable whose members correspond to the
											      >	              internal hash table  of  commands  as  maintained  by  the  hhaasshh
											      >	              builtin.  Elements added to this array appear in the hash table;
											      >	              however, unsetting array elements currently does not cause  com-
											      >	              mand  names  to be removed from the hash table.  If BBAASSHH__CCMMDDSS is
											      >	              unset, it loses its special properties, even  if  it  is  subse-
											      >	              quently reset.
       BBAASSHH__CCOOMMMMAANNDD										       BBAASSHH__CCOOMMMMAANNDD
              The command currently being executed or about  to  be  executed,		      |	              The  command  currently  being executed or about to be executed,
              unless the shell is executing a command as the result of a trap,			              unless the shell is executing a command as the result of a trap,
              in which case it is the command executing at  the  time  of  the		      |	              in  which  case  it  is the command executing at the time of the
              trap.										              trap.
       BBAASSHH__EEXXEECCUUTTIIOONN__SSTTRRIINNGG									       BBAASSHH__EEXXEECCUUTTIIOONN__SSTTRRIINNGG
              The command argument to the --cc invocation option.					              The command argument to the --cc invocation option.
       BBAASSHH__LLIINNEENNOO										       BBAASSHH__LLIINNEENNOO
              An  array  variable whose members are the line numbers in source		      |	              An array variable whose members are the line numbers  in  source
              files   corresponding    to    each    member    of    FFUUNNCCNNAAMMEE.		      |	              files  where  each corresponding member of FFUUNNCCNNAAMMEE was invoked.
              $${{BBAASSHH__LLIINNEENNOO[[_$_i]]}}  is  the line number in the source file where		      |	              $${{BBAASSHH__LLIINNEENNOO[[_$_i]]}}  is  the  line  number  in  the  source  file
              $${{FFUUNNCCNNAAMMEE[[_$_i_f_P]]}} _w_a_s _c_a_l_l_e_d_.   _T_h_e  _c_o_r_r_e_s_p_o_n_d_i_n_g  _s_o_u_r_c_e  _f_i_l_e		      |	              ($${{BBAASSHH__SSOOUURRCCEE[[_$_i_+_1]]}})  where  $${{FFUUNNCCNNAAMMEE[[_$_i]]}}  was  called  (or
              _n_a_m_e  _i_s  $${{BBAASSHH__SSOOUURRCCEE[[_$_i]]}}..   UUssee LLIINNEENNOO ttoo oobbttaaiinn tthhee ccuurrrreenntt		      |	              $${{BBAASSHH__LLIINNEENNOO[[_$_i_-_1]]}} if referenced within  another  shell  func-
              lliinnee nnuummbbeerr..								      |	              tion).  Use LLIINNEENNOO to obtain the current line number.
											      >	       BBAASSHH__LLOOAADDAABBLLEESS__PPAATTHH
											      >	              A  colon-separated  list of directories in which the shell looks
											      >	              for dynamically loadable builtins specified by the  eennaabbllee  com-
											      >	              mand.
       BBAASSHH__RREEMMAATTCCHH										       BBAASSHH__RREEMMAATTCCHH
              An array variable whose members are assigned by  the  ==~~  binary		      |	              An  array  variable  whose members are assigned by the ==~~ binary
              operator  to the [[[[ conditional command.  The element with index		      |	              operator to the [[[[ conditional command.  The element with  index
              0 is the portion of  the  string  matching  the  entire  regular		      |	              0  is  the  portion  of  the  string matching the entire regular
              expression.   The  element  with  index  _n is the portion of the		      |	              expression.  The element with index _n  is  the  portion  of  the
              string matching the _nth parenthesized subexpression.  This vari-			              string matching the _nth parenthesized subexpression.  This vari-
              able is read-only.								              able is read-only.
       BBAASSHH__SSOOUURRCCEE										       BBAASSHH__SSOOUURRCCEE
              An  array variable whose members are the source filenames corre-		      |	              An array variable whose members are the source  filenames  where
              sponding to the elements in the FFUUNNCCNNAAMMEE array variable.			      |	              the  corresponding  shell  function  names in the FFUUNNCCNNAAMMEE array
											      >	              variable are defined.  The  shell  function  $${{FFUUNNCCNNAAMMEE[[_$_i]]}}  is
											      >	              defined   in   the   file  $${{BBAASSHH__SSOOUURRCCEE[[_$_i]]}}  and  called  from
											      >	              $${{BBAASSHH__SSOOUURRCCEE[[_$_i_+_1]]}}.
       BBAASSHH__SSUUBBSSHHEELLLL										       BBAASSHH__SSUUBBSSHHEELLLL
              Incremented by one each time a subshell or subshell  environment		      |	              Incremented by one within each subshell or subshell  environment
              is spawned.  The initial value is 0.					      |	              when  the  shell begins executing in that environment.  The ini-
											      >	              tial value is 0.
       BBAASSHH__VVEERRSSIINNFFOO										       BBAASSHH__VVEERRSSIINNFFOO
              A readonly array variable whose members hold version information			              A readonly array variable whose members hold version information
              for this instance of bbaasshh.  The values  assigned  to  the  array		      |	              for  this  instance  of  bbaasshh.  The values assigned to the array
              members are as follows:								              members are as follows:
              BBAASSHH__VVEERRSSIINNFFOO[[0]]        The  major version number (the _r_e_l_e_a_s_e).		      |	              BBAASSHH__VVEERRSSIINNFFOO[[0]]        The major version number (the  _r_e_l_e_a_s_e).
              BBAASSHH__VVEERRSSIINNFFOO[[1]]        The minor version number (the  _v_e_r_s_i_o_n).		      |	              BBAASSHH__VVEERRSSIINNFFOO[[1]]        The  minor version number (the _v_e_r_s_i_o_n).
              BBAASSHH__VVEERRSSIINNFFOO[[2]]        The patch level.						              BBAASSHH__VVEERRSSIINNFFOO[[2]]        The patch level.
              BBAASSHH__VVEERRSSIINNFFOO[[3]]        The build version.					              BBAASSHH__VVEERRSSIINNFFOO[[3]]        The build version.
              BBAASSHH__VVEERRSSIINNFFOO[[4]]        The release status (e.g., _b_e_t_a_1).				              BBAASSHH__VVEERRSSIINNFFOO[[4]]        The release status (e.g., _b_e_t_a_1).
              BBAASSHH__VVEERRSSIINNFFOO[[5]]        The value of MMAACCHHTTYYPPEE.					              BBAASSHH__VVEERRSSIINNFFOO[[5]]        The value of MMAACCHHTTYYPPEE.
											      <
       BBAASSHH__VVEERRSSIIOONN										       BBAASSHH__VVEERRSSIIOONN
              Expands  to  a string describing the version of this instance of		      |	              Expands to a string describing the version of this  instance  of
              bbaasshh.										              bbaasshh.
											      <
       CCOOMMPP__CCWWOORRDD										       CCOOMMPP__CCWWOORRDD
              An index into $${{CCOOMMPP__WWOORRDDSS}} of the word containing  the  current		      |	              An  index  into $${{CCOOMMPP__WWOORRDDSS}} of the word containing the current
              cursor position.  This variable is available only in shell func-			              cursor position.  This variable is available only in shell func-
              tions invoked by the  programmable  completion  facilities  (see		      |	              tions  invoked  by  the  programmable completion facilities (see
              PPrrooggrraammmmaabbllee CCoommpplleettiioonn below).							              PPrrooggrraammmmaabbllee CCoommpplleettiioonn below).
											      |	       CCOOMMPP__KKEEYY
											      >	              The key (or final key of a key sequence) used to invoke the cur-
											      >	              rent completion function.
       CCOOMMPP__LLIINNEE										       CCOOMMPP__LLIINNEE
              The  current  command  line.  This variable is available only in			              The  current  command  line.  This variable is available only in
              shell functions  and  external  commands  invoked  by  the  pro-			              shell functions  and  external  commands  invoked  by  the  pro-
              grammable  completion  facilities  (see  PPrrooggrraammmmaabbllee CCoommpplleettiioonn			              grammable  completion  facilities  (see  PPrrooggrraammmmaabbllee CCoommpplleettiioonn
              below).										              below).
											      <
       CCOOMMPP__PPOOIINNTT										       CCOOMMPP__PPOOIINNTT
              The index of the current cursor position relative to the  begin-			              The index of the current cursor position relative to the  begin-
              ning  of the current command.  If the current cursor position is			              ning  of the current command.  If the current cursor position is
              at the end of the current command, the value of this variable is			              at the end of the current command, the value of this variable is
              equal  to  $${{##CCOOMMPP__LLIINNEE}}.   This  variable  is available only in			              equal  to  $${{##CCOOMMPP__LLIINNEE}}.   This  variable  is available only in
              shell functions  and  external  commands  invoked  by  the  pro-			              shell functions  and  external  commands  invoked  by  the  pro-
              grammable  completion  facilities  (see  PPrrooggrraammmmaabbllee CCoommpplleettiioonn			              grammable  completion  facilities  (see  PPrrooggrraammmmaabbllee CCoommpplleettiioonn
              below).										              below).
											      |	       CCOOMMPP__TTYYPPEE
											      >	              Set to an integer value corresponding to the type of  completion
											      >	              attempted  that  caused a completion function to be called: _T_A_B,
											      >	              for normal completion, _?, for listing completions after  succes-
											      >	              sive  tabs,  _!, for listing alternatives on partial word comple-
											      >	              tion, _@, to list completions if the word is not  unmodified,  or
											      >	              _%,  for  menu  completion.   This  variable is available only in
											      >	              shell functions  and  external  commands  invoked  by  the  pro-
											      >	              grammable  completion  facilities  (see  PPrrooggrraammmmaabbllee CCoommpplleettiioonn
											      >	              below).
       CCOOMMPP__WWOORRDDBBRREEAAKKSS										       CCOOMMPP__WWOORRDDBBRREEAAKKSS
              The set of characters that the Readline library treats  as  word		      |	              The set of characters that the rreeaaddlliinnee library treats  as  word
              separators  when performing word completion.  If CCOOMMPP__WWOORRDDBBRREEAAKKSS			              separators  when performing word completion.  If CCOOMMPP__WWOORRDDBBRREEAAKKSS
              is unset, it loses its special properties, even if it is  subse-			              is unset, it loses its special properties, even if it is  subse-
              quently reset.									              quently reset.
											      <
       CCOOMMPP__WWOORRDDSS										       CCOOMMPP__WWOORRDDSS
              An  array variable (see AArrrraayyss below) consisting of the individ-			              An  array variable (see AArrrraayyss below) consisting of the individ-
              ual words in the current command line.  The words are  split  on		      |	              ual words in the current command line.  The line is  split  into
              shell  metacharacters  as  the shell parser would separate them.		      |	              words  as  rreeaaddlliinnee  would  split  it,  using CCOOMMPP__WWOORRDDBBRREEAAKKSS as
              This variable is available only in shell  functions  invoked  by		      |	              described above.  This variable is available only in shell func-
              the programmable completion facilities (see PPrrooggrraammmmaabbllee CCoommppllee--		      |	              tions  invoked  by  the  programmable completion facilities (see
              ttiioonn below).								      |	              PPrrooggrraammmmaabbllee CCoommpplleettiioonn below).
											      |	       CCOOPPRROOCC An array variable (see AArrrraayyss below) created to  hold  the  file
											      >	              descriptors  for  output  from and input to an unnamed coprocess
											      >	              (see CCoopprroocceesssseess above).
       DDIIRRSSTTAACCKK											       DDIIRRSSTTAACCKK
              An array variable (see AArrrraayyss below) containing the current con-			              An array variable (see AArrrraayyss below) containing the current con-
              tents  of  the directory stack.  Directories appear in the stack			              tents  of  the directory stack.  Directories appear in the stack
              in the order they are displayed by the ddiirrss builtin.   Assigning			              in the order they are displayed by the ddiirrss builtin.   Assigning
              to members of this array variable may be used to modify directo-			              to members of this array variable may be used to modify directo-
              ries already in the stack, but the ppuusshhdd and ppooppdd builtins  must			              ries already in the stack, but the ppuusshhdd and ppooppdd builtins  must
              be used to add and remove directories.  Assignment to this vari-			              be used to add and remove directories.  Assignment to this vari-
              able will not change the  current  directory.   If  DDIIRRSSTTAACCKK  is			              able will not change the  current  directory.   If  DDIIRRSSTTAACCKK  is
              unset,  it  loses  its  special properties, even if it is subse-			              unset,  it  loses  its  special properties, even if it is subse-
              quently reset.									              quently reset.
											      |	       EEPPOOCCHHRREEAALLTTIIMMEE
       EEUUIIDD   Expands to the effective user ID of the current  user,  initial-		      |	              Each time this parameter is referenced, it expands to the number
											      >	              of  seconds  since  the  Unix  Epoch (see _t_i_m_e(3)) as a floating
											      >	              point  value  with  micro-second  granularity.   Assignments  to
											      >	              EEPPOOCCHHRREEAALLTTIIMMEE  are ignored.  If EEPPOOCCHHRREEAALLTTIIMMEE is unset, it loses
											      >	              its special properties, even if it is subsequently reset.
											      >	       EEPPOOCCHHSSEECCOONNDDSS
											      >	              Each time this parameter is referenced, it expands to the number
											      >	              of  seconds  since the Unix Epoch (see _t_i_m_e(3)).  Assignments to
											      >	              EEPPOOCCHHSSEECCOONNDDSS are ignored.  If EEPPOOCCHHSSEECCOONNDDSS is  unset,  it  loses
											      >	              its special properties, even if it is subsequently reset.
											      >	       EEUUIIDD   Expands  to  the effective user ID of the current user, initial-
              ized at shell startup.  This variable is readonly.				              ized at shell startup.  This variable is readonly.
											      <
       FFUUNNCCNNAAMMEE											       FFUUNNCCNNAAMMEE
              An  array  variable  containing the names of all shell functions		      |	              An array variable containing the names of  all  shell  functions
              currently in the execution call stack.  The element with index 0			              currently in the execution call stack.  The element with index 0
              is the name of any currently-executing shell function.  The bot-			              is the name of any currently-executing shell function.  The bot-
              tom-most element is "main".  This variable exists  only  when  a		      |	              tom-most  element  (the  one  with the highest index) is "main".
              shell  function  is  executing.  Assignments to FFUUNNCCNNAAMMEE have no		      |	              This variable exists only when a shell  function  is  executing.
              effect and return an error status.  If  FFUUNNCCNNAAMMEE  is  unset,  it		      |	              Assignments  to  FFUUNNCCNNAAMMEE have no effect.  If FFUUNNCCNNAAMMEE is unset,
              loses  its special properties, even if it is subsequently reset.		      |	              it loses its special properties,  even  if  it  is  subsequently
											      |	              reset.
       GGRROOUUPPSS An array variable containing the list of  groups  of  which  the		      <
              current  user is a member.  Assignments to GGRROOUUPPSS have no effect		      <
              and return an error status.  If GGRROOUUPPSS is unset,  it  loses  its		      <
              special properties, even if it is subsequently reset.			      <

											      >	              This  variable  can  be  used  with BBAASSHH__LLIINNEENNOO and BBAASSHH__SSOOUURRCCEE.
											      >	              Each  element  of  FFUUNNCCNNAAMMEE  has   corresponding   elements   in
											      >	              BBAASSHH__LLIINNEENNOO  and  BBAASSHH__SSOOUURRCCEE  to  describe the call stack.  For
											      >	              instance,   $${{FFUUNNCCNNAAMMEE[[_$_i]]}}   was   called   from    the    file
											      >	              $${{BBAASSHH__SSOOUURRCCEE[[_$_i_+_1]]}}  at  line  number  $${{BBAASSHH__LLIINNEENNOO[[_$_i]]}}.  The
											      >	              ccaalllleerr builtin displays the current call stack using this infor-
											      >	              mation.
											      >	       GGRROOUUPPSS An  array  variable  containing  the list of groups of which the
											      >	              current user is a member.  Assignments to GGRROOUUPPSS have no effect.
											      >	              If  GGRROOUUPPSS is unset, it loses its special properties, even if it
											      >	              is subsequently reset.
       HHIISSTTCCMMDD											       HHIISSTTCCMMDD
              The history number, or index in the history list, of the current			              The history number, or index in the history list, of the current
              command.  If HHIISSTTCCMMDD is unset, it loses its special  properties,		      |	              command.   If HHIISSTTCCMMDD is unset, it loses its special properties,
              even if it is subsequently reset.							              even if it is subsequently reset.
											      <
       HHOOSSTTNNAAMMEE											       HHOOSSTTNNAAMMEE
              Automatically set to the name of the current host.				              Automatically set to the name of the current host.
											      <
       HHOOSSTTTTYYPPEE											       HHOOSSTTTTYYPPEE
              Automatically  set  to a string that uniquely describes the type		      |	              Automatically set to a string that uniquely describes  the  type
              of machine on which bbaasshh is executing.  The default  is  system-		      |	              of  machine  on which bbaasshh is executing.  The default is system-
              dependent.									              dependent.
											      |	       LLIINNEENNOO Each time this parameter is referenced, the shell substitutes  a
       LLIINNEENNOO Each  time this parameter is referenced, the shell substitutes a		      |	              decimal  number  representing the current sequential line number
              decimal number representing the current sequential  line  number		      |	              (starting with 1) within a script or function.  When  not  in  a
              (starting  with  1)  within a script or function.  When not in a		      |	              script  or  function, the value substituted is not guaranteed to
              script or function, the value substituted is not  guaranteed  to		      <
              be meaningful.  If LLIINNEENNOO is unset, it loses its special proper-			              be meaningful.  If LLIINNEENNOO is unset, it loses its special proper-
              ties, even if it is subsequently reset.						              ties, even if it is subsequently reset.
											      <
       MMAACCHHTTYYPPEE											       MMAACCHHTTYYPPEE
              Automatically set to a string that fully  describes  the  system		      |	              Automatically  set  to  a string that fully describes the system
              type  on  which  bbaasshh is executing, in the standard GNU _c_p_u_-_c_o_m_-		      |	              type on which bbaasshh is executing, in the  standard  GNU  _c_p_u_-_c_o_m_-
              _p_a_n_y_-_s_y_s_t_e_m format.  The default is system-dependent.				              _p_a_n_y_-_s_y_s_t_e_m format.  The default is system-dependent.
											      |	       MMAAPPFFIILLEE
											      >	              An  array  variable  (see AArrrraayyss below) created to hold the text
											      >	              read by the mmaappffiillee builtin when no variable name is supplied.
       OOLLDDPPWWDD The previous working directory as set by the ccdd command.				       OOLLDDPPWWDD The previous working directory as set by the ccdd command.
											      <
       OOPPTTAARRGG The value of the last option argument processed by  the  ggeettooppttss			       OOPPTTAARRGG The value of the last option argument processed by  the  ggeettooppttss
              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).				              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).
											      <
       OOPPTTIINNDD The  index  of  the next argument to be processed by the ggeettooppttss			       OOPPTTIINNDD The  index  of  the next argument to be processed by the ggeettooppttss
              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).				              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).
											      <
       OOSSTTYYPPEE Automatically set to a string that describes the operating  sys-			       OOSSTTYYPPEE Automatically set to a string that describes the operating  sys-
              tem  on  which  bbaasshh is executing.  The default is system-depen-			              tem  on  which  bbaasshh is executing.  The default is system-depen-
              dent.										              dent.
											      <
       PPIIPPEESSTTAATTUUSS										       PPIIPPEESSTTAATTUUSS
              An array variable (see AArrrraayyss below) containing a list  of  exit			              An array variable (see AArrrraayyss below) containing a list  of  exit
              status  values  from the processes in the most-recently-executed			              status  values  from the processes in the most-recently-executed
              foreground pipeline (which may contain only a single command).			              foreground pipeline (which may contain only a single command).
											      <
       PPPPIIDD   The process ID of the shell's parent.  This  variable  is  read-			       PPPPIIDD   The process ID of the shell's parent.  This  variable  is  read-
              only.										              only.
											      <
       PPWWDD    The current working directory as set by the ccdd command.				       PPWWDD    The current working directory as set by the ccdd command.
											      <
       RRAANNDDOOMM Each time this parameter is referenced, a random integer between			       RRAANNDDOOMM Each time this parameter is referenced, a random integer between
              0 and 32767 is generated.  The sequence of random numbers may be			              0 and 32767 is generated.  The sequence of random numbers may be
              initialized by assigning a value to RRAANNDDOOMM.  If RRAANNDDOOMM is unset,			              initialized by assigning a value to RRAANNDDOOMM.  If RRAANNDDOOMM is unset,
              it loses its special properties,  even  if  it  is  subsequently			              it loses its special properties,  even  if  it  is  subsequently
              reset.										              reset.
											      |	       RREEAADDLLIINNEE__LLIINNEE
											      >	              The contents of the rreeaaddlliinnee line buffer, for use with "bind -x"
											      >	              (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).
											      >	       RREEAADDLLIINNEE__PPOOIINNTT
											      >	              The position of the insertion point in the rreeaaddlliinnee line buffer,
											      >	              for use with "bind -x" (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).
       RREEPPLLYY  Set  to  the line of input read by the rreeaadd builtin command when			       RREEPPLLYY  Set  to  the line of input read by the rreeaadd builtin command when
              no arguments are supplied.							              no arguments are supplied.
											      <
       SSEECCOONNDDSS											       SSEECCOONNDDSS
              Each time this parameter is referenced, the  number  of  seconds			              Each time this parameter is referenced, the  number  of  seconds
              since  shell  invocation is returned.  If a value is assigned to			              since  shell  invocation is returned.  If a value is assigned to
              SSEECCOONNDDSS, the value returned upon subsequent  references  is  the			              SSEECCOONNDDSS, the value returned upon subsequent  references  is  the
              number  of seconds since the assignment plus the value assigned.			              number  of seconds since the assignment plus the value assigned.
              If SSEECCOONNDDSS is unset, it loses its special properties, even if it			              If SSEECCOONNDDSS is unset, it loses its special properties, even if it
              is subsequently reset.								              is subsequently reset.
											      <
       SSHHEELLLLOOPPTTSS										       SSHHEELLLLOOPPTTSS
              A  colon-separated  list of enabled shell options.  Each word in			              A  colon-separated  list of enabled shell options.  Each word in
              the list is a valid argument  for  the  --oo  option  to  the  sseett			              the list is a valid argument  for  the  --oo  option  to  the  sseett
              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  The options			              builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  The options
              appearing in SSHHEELLLLOOPPTTSS are those reported as _o_n by sseett  --oo.   If			              appearing in SSHHEELLLLOOPPTTSS are those reported as _o_n by sseett  --oo.   If
              this  variable  is  in the environment when bbaasshh starts up, each			              this  variable  is  in the environment when bbaasshh starts up, each
              shell option in the list will  be  enabled  before  reading  any			              shell option in the list will  be  enabled  before  reading  any
              startup files.  This variable is read-only.					              startup files.  This variable is read-only.
											      <
       SSHHLLVVLL  Incremented by one each time an instance of bbaasshh is started.			       SSHHLLVVLL  Incremented by one each time an instance of bbaasshh is started.
											      <
       UUIIDD    Expands to the user ID of the current user, initialized at shell			       UUIIDD    Expands to the user ID of the current user, initialized at shell
              startup.  This variable is readonly.						              startup.  This variable is readonly.

       The following variables are used by the shell.   In  some  cases,  bbaasshh			       The following variables are used by the shell.   In  some  cases,  bbaasshh
       assigns a default value to a variable; these cases are noted below.			       assigns a default value to a variable; these cases are noted below.

											      >	       BBAASSHH__CCOOMMPPAATT
											      >	              The  value  is used to set the shell's compatibility level.  See
											      >	              the description of the sshhoopptt builtin below under  SSHHEELLLL  BBUUIILLTTIINN
											      >	              CCOOMMMMAANNDDSS  for  a description of the various compatibility levels
											      >	              and their effects.  The value may be  a  decimal  number  (e.g.,
											      >	              4.2)  or an integer (e.g., 42) corresponding to the desired com-
											      >	              patibility level.  If BBAASSHH__CCOOMMPPAATT is unset or set to  the  empty
											      >	              string,  the  compatibility  level is set to the default for the
											      >	              current version.  If BBAASSHH__CCOOMMPPAATT is set to a value that  is  not
											      >	              one of the valid compatibility levels, the shell prints an error
											      >	              message and sets the compatibility level to the default for  the
											      >	              current  version.   The valid compatibility levels correspond to
											      >	              the  compatibility  options  accepted  by  the   sshhoopptt   builtin
											      >	              described below (for example, ccoommppaatt4422 means that 4.2 and 42 are
											      >	              valid values).  The current version is also a valid value.
       BBAASSHH__EENNVV											       BBAASSHH__EENNVV
              If  this parameter is set when bbaasshh is executing a shell script,		      |	              If this parameter is set when bbaasshh is executing a shell  script,
              its value is interpreted as a filename  containing  commands  to		      |	              its  value  is  interpreted as a filename containing commands to
              initialize the shell, as in _~_/_._b_a_s_h_r_c.  The value of BBAASSHH__EENNVV is			              initialize the shell, as in _~_/_._b_a_s_h_r_c.  The value of BBAASSHH__EENNVV is
              subjected to  parameter  expansion,  command  substitution,  and		      |	              subjected  to  parameter  expansion,  command  substitution, and
              arithmetic  expansion  before  being interpreted as a file name.		      |	              arithmetic expansion before being  interpreted  as  a  filename.
              PPAATTHH is not used to search for the resultant file name.			      |	              PPAATTHH is not used to search for the resultant filename.
											      >	       BBAASSHH__XXTTRRAACCEEFFDD
											      >	              If  set  to an integer corresponding to a valid file descriptor,
											      >	              bbaasshh will write the  trace  output  generated  when  _s_e_t  _-_x  is
											      >	              enabled  to that file descriptor.  The file descriptor is closed
											      >	              when BBAASSHH__XXTTRRAACCEEFFDD is unset or assigned a new value.   Unsetting
											      >	              BBAASSHH__XXTTRRAACCEEFFDD  or assigning it the empty string causes the trace
											      >	              output to be sent to the  standard  error.   Note  that  setting
											      >	              BBAASSHH__XXTTRRAACCEEFFDD to 2 (the standard error file descriptor) and then
											      >	              unsetting it will result in the standard error being closed.
       CCDDPPAATTHH The search path for the ccdd command.  This is  a  colon-separated			       CCDDPPAATTHH The search path for the ccdd command.  This is  a  colon-separated
              list  of  directories  in  which the shell looks for destination			              list  of  directories  in  which the shell looks for destination
              directories specified by the ccdd  command.   A  sample  value  is			              directories specified by the ccdd  command.   A  sample  value  is
              ".:~:/usr".									              ".:~:/usr".
											      >	       CCHHIILLDD__MMAAXX
											      >	              Set  the  number  of exited child status values for the shell to
											      >	              remember.  Bash will not allow this value to be decreased  below
											      >	              a  POSIX-mandated  minimum,  and  there is a maximum value (cur-
											      >	              rently 8192) that this may not exceed.   The  minimum  value  is
											      >	              system-dependent.
       CCOOLLUUMMNNSS											       CCOOLLUUMMNNSS
              Used  by  the  sseelleecctt  builtin command to determine the terminal		      |	              Used  by  the  sseelleecctt compound command to determine the terminal
              width when printing selection  lists.   Automatically  set  upon		      |	              width when printing selection lists.  Automatically set  if  the
              receipt of a SIGWINCH.							      |	              cchheecckkwwiinnssiizzee  option  is enabled or in an interactive shell upon
											      >	              receipt of a SSIIGGWWIINNCCHH.
       CCOOMMPPRREEPPLLYY										       CCOOMMPPRREEPPLLYY
              An array variable from which bbaasshh reads the possible completions			              An array variable from which bbaasshh reads the possible completions
              generated by a shell function invoked by the  programmable  com-		      |	              generated  by  a shell function invoked by the programmable com-
              pletion facility (see PPrrooggrraammmmaabbllee CCoommpplleettiioonn below).			      |	              pletion facility  (see  PPrrooggrraammmmaabbllee  CCoommpplleettiioonn  below).   Each
											      >	              array element contains one possible completion.
       EEMMAACCSS  If  bbaasshh  finds  this variable in the environment when the shell			       EEMMAACCSS  If  bbaasshh  finds  this variable in the environment when the shell
              starts with value "t", it assumes that the shell is  running  in			              starts with value "t", it assumes that the shell is  running  in
              an emacs shell buffer and disables line editing.				      |	              an Emacs shell buffer and disables line editing.
											      >	       EENNVV    Similar  to  BBAASSHH__EENNVV;  used  when the shell is invoked in _p_o_s_i_x
											      >	              _m_o_d_e.
											      >	       EEXXEECCIIGGNNOORREE
											      >	              A colon-separated list of shell patterns (see PPaatttteerrnn  MMaattcchhiinngg)
											      >	              defining  the  list of filenames to be ignored by command search
											      >	              using PPAATTHH.  Files whose full pathnames match one of these  pat-
											      >	              terns  are  not  considered executable files for the purposes of
											      >	              completion and command execution via PPAATTHH lookup.  This does not
											      >	              affect the behavior of the [[, tteesstt, and [[[[ commands.  Full path-
											      >	              names in the command hash table are not subject  to  EEXXEECCIIGGNNOORREE.
											      >	              Use  this  variable to ignore shared library files that have the
											      >	              executable bit set, but are not executable files.   The  pattern
											      >	              matching honors the setting of the eexxttgglloobb shell option.
       FFCCEEDDIITT The default editor for the ffcc builtin command.					       FFCCEEDDIITT The default editor for the ffcc builtin command.
       FFIIGGNNOORREE											       FFIIGGNNOORREE
              A  colon-separated  list  of  suffixes to ignore when performing			              A  colon-separated  list  of  suffixes to ignore when performing
              filename completion (see RREEAADDLLIINNEE below).  A filename whose suf-			              filename completion (see RREEAADDLLIINNEE below).  A filename whose suf-
              fix  matches  one of the entries in FFIIGGNNOORREE is excluded from the			              fix  matches  one of the entries in FFIIGGNNOORREE is excluded from the
              list of matched filenames.  A sample value is ".o:~".				              list of matched filenames.  A sample value is ".o:~".
											      >	       FFUUNNCCNNEESSTT
											      >	              If set to a numeric value greater  than  0,  defines  a  maximum
											      >	              function  nesting  level.  Function invocations that exceed this
											      >	              nesting level will cause the current command to abort.
       GGLLOOBBIIGGNNOORREE										       GGLLOOBBIIGGNNOORREE
              A colon-separated list of patterns defining the set of filenames		      |	              A colon-separated list of patterns  defining  the  set  of  file
              to be ignored by pathname expansion.  If a filename matched by a		      |	              names  to  be  ignored  by  pathname  expansion.  If a file name
              pathname expansion pattern also matches one of the  patterns  in		      |	              matched by a pathname expansion pattern also matches one of  the
              GGLLOOBBIIGGNNOORREE, it is removed from the list of matches.			      |	              patterns  in GGLLOOBBIIGGNNOORREE, it is removed from the list of matches.
       HHIISSTTCCOONNTTRROOLL										       HHIISSTTCCOONNTTRROOLL
              A  colon-separated  list  of values controlling how commands are		      |	              A colon-separated list of values controlling  how  commands  are
              saved on the history list.   If  the  list  of  values  includes		      |	              saved  on  the  history  list.   If  the list of values includes
              _i_g_n_o_r_e_s_p_a_c_e,  lines  which  begin with a ssppaaccee character are not		      |	              _i_g_n_o_r_e_s_p_a_c_e, lines which begin with a ssppaaccee  character  are  not
              saved in the history list.  A value of _i_g_n_o_r_e_d_u_p_s  causes  lines		      |	              saved  in  the history list.  A value of _i_g_n_o_r_e_d_u_p_s causes lines
              matching the previous history entry to not be saved.  A value of			              matching the previous history entry to not be saved.  A value of
              _i_g_n_o_r_e_b_o_t_h is shorthand for _i_g_n_o_r_e_s_p_a_c_e and _i_g_n_o_r_e_d_u_p_s.  A value			              _i_g_n_o_r_e_b_o_t_h is shorthand for _i_g_n_o_r_e_s_p_a_c_e and _i_g_n_o_r_e_d_u_p_s.  A value
              of _e_r_a_s_e_d_u_p_s causes all previous lines matching the current line			              of _e_r_a_s_e_d_u_p_s causes all previous lines matching the current line
              to be removed from the history list before that line  is  saved.		      |	              to  be  removed from the history list before that line is saved.
              Any  value  not in the above list is ignored.  If HHIISSTTCCOONNTTRROOLL is		      |	              Any value not in the above list is ignored.  If  HHIISSTTCCOONNTTRROOLL  is
              unset, or does not include a valid value, all lines read by  the		      |	              unset,  or does not include a valid value, all lines read by the
              shell parser are saved on the history list, subject to the value			              shell parser are saved on the history list, subject to the value
              of HHIISSTTIIGGNNOORREE.  The second and subsequent lines of a  multi-line		      |	              of  HHIISSTTIIGGNNOORREE.  The second and subsequent lines of a multi-line
              compound  command  are  not tested, and are added to the history		      |	              compound command are not tested, and are added  to  the  history
              regardless of the value of HHIISSTTCCOONNTTRROOLL.						              regardless of the value of HHIISSTTCCOONNTTRROOLL.
       HHIISSTTFFIILLEE											       HHIISSTTFFIILLEE
              The name of the file in which command history is saved (see HHIISS--			              The name of the file in which command history is saved (see HHIISS--
              TTOORRYY  below).   The default value is _~_/_._b_a_s_h___h_i_s_t_o_r_y.  If unset,		      |	              TTOORRYY below).  The default value is _~_/_._b_a_s_h___h_i_s_t_o_r_y.   If  unset,
              the command history is  not  saved  when  an  interactive  shell		      |	              the command history is not saved when a shell exits.
              exits.									      <
       HHIISSTTFFIILLEESSIIZZEE										       HHIISSTTFFIILLEESSIIZZEE
              The maximum number of lines contained in the history file.  When			              The maximum number of lines contained in the history file.  When
              this variable is assigned a value, the  history  file  is  trun-			              this variable is assigned a value, the  history  file  is  trun-
              cated,  if necessary, by removing the oldest entries, to contain		      |	              cated,  if  necessary,  to  contain  no more than that number of
              no more than that number of lines.  The default  value  is  500.		      |	              lines by removing the oldest entries.  The history file is  also
              The history file is also truncated to this size after writing it		      |	              truncated  to this size after writing it when a shell exits.  If
              when an interactive shell exits.						      |	              the value is 0, the history file  is  truncated  to  zero  size.
											      >	              Non-numeric  values  and  numeric  values less than zero inhibit
											      >	              truncation.  The shell sets the default value to  the  value  of
											      >	              HHIISSTTSSIIZZEE after reading any startup files.
       HHIISSTTIIGGNNOORREE										       HHIISSTTIIGGNNOORREE
              A colon-separated list of patterns used to decide which  command		      |	              A  colon-separated list of patterns used to decide which command
              lines  should  be  saved  on  the history list.  Each pattern is		      |	              lines should be saved on the  history  list.   Each  pattern  is
              anchored at the beginning of the line and must  match  the  com-		      |	              anchored  at  the  beginning of the line and must match the com-
              plete  line  (no  implicit  `**'  is  appended).  Each pattern is		      |	              plete line (no implicit  `**'  is  appended).   Each  pattern  is
              tested against the line after the checks specified  by  HHIISSTTCCOONN--		      |	              tested  against  the line after the checks specified by HHIISSTTCCOONN--
              TTRROOLL  are  applied.   In  addition  to  the normal shell pattern		      |	              TTRROOLL are applied.  In  addition  to  the  normal  shell  pattern
              matching characters, `&&' matches the previous history line.  `&&'			              matching characters, `&&' matches the previous history line.  `&&'
              may  be  escaped  using  a  backslash;  the backslash is removed		      |	              may be escaped using  a  backslash;  the  backslash  is  removed
              before attempting a match.  The second and subsequent lines of a			              before attempting a match.  The second and subsequent lines of a
              multi-line compound command are not tested, and are added to the			              multi-line compound command are not tested, and are added to the
              history regardless of the value of HHIISSTTIIGGNNOORREE.				      |	              history  regardless  of  the  value  of HHIISSTTIIGGNNOORREE.  The pattern
											      >	              matching honors the setting of the eexxttgglloobb shell option.
       HHIISSTTSSIIZZEE											       HHIISSTTSSIIZZEE
              The number of commands to remember in the command  history  (see			              The number of commands to remember in the command  history  (see
              HHIISSTTOORRYY below).  The default value is 500.				      |	              HHIISSTTOORRYY  below).   If  the value is 0, commands are not saved in
											      >	              the history list.  Numeric values less than zero result in every
											      >	              command  being  saved  on  the history list (there is no limit).
											      >	              The shell sets the  default  value  to  500  after  reading  any
											      >	              startup files.
       HHIISSTTTTIIMMEEFFOORRMMAATT										       HHIISSTTTTIIMMEEFFOORRMMAATT
              If  this  variable  is  set and not null, its value is used as a			              If  this  variable  is  set and not null, its value is used as a
              format string for _s_t_r_f_t_i_m_e(3) to print the time stamp associated			              format string for _s_t_r_f_t_i_m_e(3) to print the time stamp associated
              with  each  history  entry displayed by the hhiissttoorryy builtin.  If			              with  each  history  entry displayed by the hhiissttoorryy builtin.  If
              this variable is set, time stamps are  written  to  the  history			              this variable is set, time stamps are  written  to  the  history
              file so they may be preserved across shell sessions.			      |	              file  so they may be preserved across shell sessions.  This uses
											      >	              the history comment character  to  distinguish  timestamps  from
											      >	              other history lines.
       HHOOMMEE   The home directory of the current user; the default argument for			       HHOOMMEE   The home directory of the current user; the default argument for
              the ccdd builtin command.  The value of this variable is also used			              the ccdd builtin command.  The value of this variable is also used
              when performing tilde expansion.							              when performing tilde expansion.
       HHOOSSTTFFIILLEE											       HHOOSSTTFFIILLEE
              Contains  the  name  of  a file in the same format as _/_e_t_c_/_h_o_s_t_s			              Contains  the  name  of  a file in the same format as _/_e_t_c_/_h_o_s_t_s
              that should be read when the shell needs to complete a hostname.			              that should be read when the shell needs to complete a hostname.
              The  list  of possible hostname completions may be changed while			              The  list  of possible hostname completions may be changed while
              the shell is running;  the  next  time  hostname  completion  is			              the shell is running;  the  next  time  hostname  completion  is
              attempted  after the value is changed, bbaasshh adds the contents of			              attempted  after the value is changed, bbaasshh adds the contents of
              the new file to the existing list.  If HHOOSSTTFFIILLEE is set, but  has			              the new file to the existing list.  If HHOOSSTTFFIILLEE is set, but  has
              no value, bbaasshh attempts to read _/_e_t_c_/_h_o_s_t_s to obtain the list of		      |	              no  value,  or  does  not name a readable file, bbaasshh attempts to
              possible hostname completions.   When  HHOOSSTTFFIILLEE  is  unset,  the		      |	              read _/_e_t_c_/_h_o_s_t_s to obtain the list of possible hostname  comple-
              hostname list is cleared.							      |	              tions.  When HHOOSSTTFFIILLEE is unset, the hostname list is cleared.
       IIFFSS    The  _I_n_t_e_r_n_a_l  _F_i_e_l_d  _S_e_p_a_r_a_t_o_r  that is used for word splitting			       IIFFSS    The  _I_n_t_e_r_n_a_l  _F_i_e_l_d  _S_e_p_a_r_a_t_o_r  that is used for word splitting
              after expansion and to split lines  into  words  with  the  rreeaadd			              after expansion and to split lines  into  words  with  the  rreeaadd
              builtin  command.   The  default  value  is  ``<space><tab><new-			              builtin  command.   The  default  value  is  ``<space><tab><new-
              line>''.										              line>''.
       IIGGNNOORREEEEOOFF										       IIGGNNOORREEEEOOFF
              Controls the action of an interactive shell on receipt of an EEOOFF			              Controls the action of an interactive shell on receipt of an EEOOFF
              character as the sole input.  If set, the value is the number of			              character as the sole input.  If set, the value is the number of
              consecutive EEOOFF characters which must  be  typed  as  the  first			              consecutive EEOOFF characters which must  be  typed  as  the  first
              characters  on an input line before bbaasshh exits.  If the variable			              characters  on an input line before bbaasshh exits.  If the variable
              exists but does not have a numeric value, or has no  value,  the			              exists but does not have a numeric value, or has no  value,  the
              default  value  is  10.  If it does not exist, EEOOFF signifies the			              default  value  is  10.  If it does not exist, EEOOFF signifies the
              end of input to the shell.							              end of input to the shell.
       IINNPPUUTTRRCC											       IINNPPUUTTRRCC
              The filename for  the  rreeaaddlliinnee  startup  file,  overriding  the			              The filename for  the  rreeaaddlliinnee  startup  file,  overriding  the
              default of _~_/_._i_n_p_u_t_r_c (see RREEAADDLLIINNEE below).					              default of _~_/_._i_n_p_u_t_r_c (see RREEAADDLLIINNEE below).
       LLAANNGG   Used  to  determine  the  locale  category  for any category not		      |	       IINNSSIIDDEE__EEMMAACCSS
											      >	              If  this  variable  appears  in  the  environment when the shell
											      >	              starts, bbaasshh assumes that it is running inside  an  Emacs  shell
											      >	              buffer  and  may disable line editing, depending on the value of
											      >	              TTEERRMM.
											      >	       LLAANNGG   Used to determine the  locale  category  for  any  category  not
              specifically selected with a variable starting with LLCC__.				              specifically selected with a variable starting with LLCC__.
       LLCC__AALLLL This variable overrides the value of  LLAANNGG  and  any  other  LLCC__		      |	       LLCC__AALLLL This  variable  overrides  the  value  of LLAANNGG and any other LLCC__
              variable specifying a locale category.						              variable specifying a locale category.
       LLCC__CCOOLLLLAATTEE										       LLCC__CCOOLLLLAATTEE
              This  variable  determines the collation order used when sorting		      |	              This variable determines the collation order used  when  sorting
              the results of pathname expansion, and determines  the  behavior		      |	              the  results  of pathname expansion, and determines the behavior
              of   range   expressions,  equivalence  classes,  and  collating		      |	              of  range  expressions,  equivalence  classes,   and   collating
              sequences within pathname expansion and pattern matching.				              sequences within pathname expansion and pattern matching.
       LLCC__CCTTYYPPEE											       LLCC__CCTTYYPPEE
              This variable determines the interpretation  of  characters  and		      |	              This  variable  determines  the interpretation of characters and
              the  behavior of character classes within pathname expansion and		      |	              the behavior of character classes within pathname expansion  and
              pattern matching.									              pattern matching.
       LLCC__MMEESSSSAAGGEESS										       LLCC__MMEESSSSAAGGEESS
              This variable determines the locale used  to  translate  double-		      |	              This  variable  determines  the locale used to translate double-
              quoted strings preceded by a $$.							              quoted strings preceded by a $$.
       LLCC__NNUUMMEERRIICC										       LLCC__NNUUMMEERRIICC
              This  variable  determines  the  locale category used for number		      |	              This variable determines the locale  category  used  for  number
              formatting.									              formatting.
       LLIINNEESS  Used by the sseelleecctt  builtin  command  to  determine  the  column		      |	       LLCC__TTIIMMEE
              length  for  printing  selection  lists.  Automatically set upon		      |	              This  variable  determines the locale category used for data and
              receipt of a SIGWINCH.							      |	              time formatting.
       MMAAIILL   If this parameter is set to a file name and the  MMAAIILLPPAATTHH  vari-		      |	       LLIINNEESS  Used by the sseelleecctt compound  command  to  determine  the  column
              able is not set, bbaasshh informs the user of the arrival of mail in		      |	              length  for  printing selection lists.  Automatically set if the
              the specified file.							      |	              cchheecckkwwiinnssiizzee option is enabled or in an interactive  shell  upon
											      >	              receipt of a SSIIGGWWIINNCCHH.
											      >	       MMAAIILL   If  this  parameter  is  set to a file or directory name and the
											      >	              MMAAIILLPPAATTHH variable is not set,  bbaasshh  informs  the  user  of  the
											      >	              arrival  of  mail in the specified file or Maildir-format direc-
											      >	              tory.
       MMAAIILLCCHHEECCKK										       MMAAIILLCCHHEECCKK
              Specifies how often (in seconds)  bbaasshh  checks  for  mail.   The			              Specifies how often (in seconds)  bbaasshh  checks  for  mail.   The
              default  is  60 seconds.  When it is time to check for mail, the			              default  is  60 seconds.  When it is time to check for mail, the
              shell does so before displaying the  primary  prompt.   If  this			              shell does so before displaying the  primary  prompt.   If  this
              variable  is  unset,  or  set  to  a  value that is not a number			              variable  is  unset,  or  set  to  a  value that is not a number
              greater than or equal to zero, the shell disables mail checking.			              greater than or equal to zero, the shell disables mail checking.
       MMAAIILLPPAATTHH											       MMAAIILLPPAATTHH
              A  colon-separated  list  of  file names to be checked for mail.		      |	              A colon-separated list of filenames to be checked for mail.  The
              The message to be printed when mail arrives in a particular file		      |	              message to be printed when mail arrives in a particular file may
              may  be  specified  by separating the file name from the message		      |	              be  specified by separating the filename from the message with a
              with a `?'.  When used in the text of the message, $$__ expands to		      |	              `?'.  When used in the text of the message, $$__  expands  to  the
              the name of the current mailfile.  Example:				      |	              name of the current mailfile.  Example:
              MMAAIILLPPAATTHH='/var/mail/bfox?"You  have  mail":~/shell-mail?"$_  has			              MMAAIILLPPAATTHH='/var/mail/bfox?"You  have  mail":~/shell-mail?"$_  has
              mail!"'										              mail!"'
              BBaasshh supplies a default value for this variable, but  the  loca-		      |	              BBaasshh can be configured to supply a default value for this  vari-
              tion  of  the  user  mail files that it uses is system dependent		      |	              able  (there  is  no  value by default), but the location of the
              (e.g., /var/mail/$$UUSSEERR).							      |	              user  mail  files  that  it  uses  is  system  dependent  (e.g.,
											      >	              /var/mail/$$UUSSEERR).
       OOPPTTEERRRR If set to the value 1, bbaasshh displays error messages generated by			       OOPPTTEERRRR If set to the value 1, bbaasshh displays error messages generated by
              the  ggeettooppttss builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).		      |	              the ggeettooppttss builtin command (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS  below).
              OOPPTTEERRRR is initialized to 1 each time the shell is invoked  or  a		      |	              OOPPTTEERRRR  is  initialized to 1 each time the shell is invoked or a
              shell script is executed.								              shell script is executed.
       PPAATTHH   The  search  path for commands.  It is a colon-separated list of		      |	       PPAATTHH   The search path for commands.  It is a colon-separated  list  of
              directories in which the shell looks for commands  (see  CCOOMMMMAANNDD		      |	              directories  in  which the shell looks for commands (see CCOOMMMMAANNDD
              EEXXEECCUUTTIIOONN  below).   A  zero-length (null) directory name in the		      |	              EEXXEECCUUTTIIOONN below).  A zero-length (null) directory  name  in  the
              value of PPAATTHH indicates the current directory.  A null directory			              value of PPAATTHH indicates the current directory.  A null directory
              name  may  appear  as  two  adjacent colons, or as an initial or		      |	              name may appear as two adjacent colons,  or  as  an  initial  or
              trailing colon.  The default path is  system-dependent,  and  is		      |	              trailing  colon.   The  default path is system-dependent, and is
              set  by  the administrator who installs bbaasshh.  A common value is		      |	              set by the administrator who installs bbaasshh.  A common value is
              ``/usr/gnu/bin:/usr/local/bin:/usr/ucb:/bin:/usr/bin''.			      |	              ``/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin''.
       PPOOSSIIXXLLYY__CCOORRRREECCTT										       PPOOSSIIXXLLYY__CCOORRRREECCTT
              If this variable is in the environment  when  bbaasshh  starts,  the			              If this variable is in the environment  when  bbaasshh  starts,  the
              shell  enters _p_o_s_i_x _m_o_d_e before reading the startup files, as if			              shell  enters _p_o_s_i_x _m_o_d_e before reading the startup files, as if
              the ----ppoossiixx invocation option had been supplied.  If it  is  set			              the ----ppoossiixx invocation option had been supplied.  If it  is  set
              while  the  shell is running, bbaasshh enables _p_o_s_i_x _m_o_d_e, as if the			              while  the  shell is running, bbaasshh enables _p_o_s_i_x _m_o_d_e, as if the
              command _s_e_t _-_o _p_o_s_i_x had been executed.					      |	              command _s_e_t _-_o _p_o_s_i_x had been executed.  When the  shell  enters
											      >	              _p_o_s_i_x _m_o_d_e, it sets this variable if it was not already set.
       PPRROOMMPPTT__CCOOMMMMAANNDD										       PPRROOMMPPTT__CCOOMMMMAANNDD
              If set, the value is executed as a command prior to issuing each			              If set, the value is executed as a command prior to issuing each
              primary prompt.									              primary prompt.
											      >	       PPRROOMMPPTT__DDIIRRTTRRIIMM
											      >	              If set to a number greater than zero, the value is used  as  the
											      >	              number of trailing directory components to retain when expanding
											      >	              the \\ww and \\WW  prompt  string  escapes  (see  PPRROOMMPPTTIINNGG  below).
											      >	              Characters removed are replaced with an ellipsis.
											      >	       PPSS00    The  value  of  this parameter is expanded (see PPRROOMMPPTTIINNGG below)
											      >	              and displayed by interactive shells after reading a command  and
											      >	              before the command is executed.
       PPSS11    The  value  of  this parameter is expanded (see PPRROOMMPPTTIINNGG below)			       PPSS11    The  value  of  this parameter is expanded (see PPRROOMMPPTTIINNGG below)
              and used as the primary prompt string.   The  default  value  is			              and used as the primary prompt string.   The  default  value  is
              ``\\ss--\\vv\\$$ ''.									              ``\\ss--\\vv\\$$ ''.
       PPSS22    The  value of this parameter is expanded as with PPSS11 and used as			       PPSS22    The  value of this parameter is expanded as with PPSS11 and used as
              the secondary prompt string.  The default is ``>> ''.				              the secondary prompt string.  The default is ``>> ''.
       PPSS33    The value of this parameter is used as the prompt for the sseelleecctt			       PPSS33    The value of this parameter is used as the prompt for the sseelleecctt
              command (see SSHHEELLLL GGRRAAMMMMAARR above).						              command (see SSHHEELLLL GGRRAAMMMMAARR above).
       PPSS44    The  value  of  this  parameter  is expanded as with PPSS11 and the			       PPSS44    The  value  of  this  parameter  is expanded as with PPSS11 and the
              value is printed before each command  bbaasshh  displays  during  an			              value is printed before each command  bbaasshh  displays  during  an
              execution  trace.  The first character of PPSS44 is replicated mul-		      |	              execution  trace.   The first character of the expanded value of
              tiple times, as necessary, to indicate multiple levels of  indi-		      |	              PPSS44 is replicated multiple times, as necessary, to indicate mul-
              rection.  The default is ``++ ''.						      |	              tiple levels of indirection.  The default is ``++ ''.
       SSHHEELLLL  The full pathname to the shell is kept in this environment vari-			       SSHHEELLLL  The full pathname to the shell is kept in this environment vari-
              able.  If it is not set when the shell starts, bbaasshh  assigns  to			              able.  If it is not set when the shell starts, bbaasshh  assigns  to
              it the full pathname of the current user's login shell.				              it the full pathname of the current user's login shell.
       TTIIMMEEFFOORRMMAATT										       TTIIMMEEFFOORRMMAATT
              The  value of this parameter is used as a format string specify-			              The  value of this parameter is used as a format string specify-
              ing how the timing information for pipelines prefixed  with  the			              ing how the timing information for pipelines prefixed  with  the
              ttiimmee  reserved word should be displayed.  The %% character intro-			              ttiimmee  reserved word should be displayed.  The %% character intro-
              duces an escape sequence that is expanded to  a  time  value  or			              duces an escape sequence that is expanded to  a  time  value  or
              other  information.  The escape sequences and their meanings are			              other  information.  The escape sequences and their meanings are
              as follows; the braces denote optional portions.					              as follows; the braces denote optional portions.
              %%%%        A literal %%.								              %%%%        A literal %%.
              %%[[_p]][[ll]]RR  The elapsed time in seconds.						              %%[[_p]][[ll]]RR  The elapsed time in seconds.
              %%[[_p]][[ll]]UU  The number of CPU seconds spent in user mode.				              %%[[_p]][[ll]]UU  The number of CPU seconds spent in user mode.
              %%[[_p]][[ll]]SS  The number of CPU seconds spent in system mode.				              %%[[_p]][[ll]]SS  The number of CPU seconds spent in system mode.
              %%PP        The CPU percentage, computed as (%U + %S) / %R.				              %%PP        The CPU percentage, computed as (%U + %S) / %R.

              The optional _p is a digit specifying the _p_r_e_c_i_s_i_o_n,  the  number			              The optional _p is a digit specifying the _p_r_e_c_i_s_i_o_n,  the  number
              of fractional digits after a decimal point.  A value of 0 causes			              of fractional digits after a decimal point.  A value of 0 causes
              no decimal point or fraction to be output.  At most three places			              no decimal point or fraction to be output.  At most three places
              after  the  decimal  point may be specified; values of _p greater			              after  the  decimal  point may be specified; values of _p greater
              than 3 are changed to 3.  If _p is not specified, the value 3  is			              than 3 are changed to 3.  If _p is not specified, the value 3  is
              used.										              used.

              The  optional ll specifies a longer format, including minutes, of			              The  optional ll specifies a longer format, including minutes, of
              the form _M_Mm_S_S._F_Fs.  The value of _p determines  whether  or  not			              the form _M_Mm_S_S._F_Fs.  The value of _p determines  whether  or  not
              the fraction is included.								              the fraction is included.

              If  this  variable  is not set, bbaasshh acts as if it had the value			              If  this  variable  is not set, bbaasshh acts as if it had the value
              $$''\\nnrreeaall\\tt%%33llRR\\nnuusseerr\\tt%%33llUU\\nnssyyss%%33llSS''.  If the value is null,  no		      |	              $$''\\nnrreeaall\\tt%%33llRR\\nnuusseerr\\tt%%33llUU\\nnssyyss\\tt%%33llSS''.  If the value  is  null,
              timing  information  is  displayed.  A trailing newline is added		      |	              no timing information is displayed.  A trailing newline is added
              when the format string is displayed.						              when the format string is displayed.
											      <
       TTMMOOUUTT  If set to a value greater than zero, TTMMOOUUTT  is  treated  as  the			       TTMMOOUUTT  If set to a value greater than zero, TTMMOOUUTT  is  treated  as  the
              default timeout for the rreeaadd builtin.  The sseelleecctt command termi-			              default timeout for the rreeaadd builtin.  The sseelleecctt command termi-
              nates if input does not arrive after TTMMOOUUTT seconds when input is			              nates if input does not arrive after TTMMOOUUTT seconds when input is
              coming  from  a terminal.  In an interactive shell, the value is			              coming  from  a terminal.  In an interactive shell, the value is
              interpreted as the number of seconds to  wait  for  input  after		      |	              interpreted as the number of seconds to wait for a line of input
              issuing  the  primary prompt.  BBaasshh terminates after waiting for		      |	              after issuing the primary prompt.  BBaasshh terminates after waiting
              that number of seconds if input does not arrive.				      |	              for that number of seconds if a complete line of input does  not
											      |	              arrive.
       TTMMPPDDIIRR If set, BBaasshh uses its value as the name of a directory in  which		      |	       TTMMPPDDIIRR If  set, bbaasshh uses its value as the name of a directory in which
              BBaasshh creates temporary files for the shell's use.				      |	              bbaasshh creates temporary files for the shell's use.
											      <
       aauuttoo__rreessuummee										       aauuttoo__rreessuummee
              This variable controls how the shell interacts with the user and			              This variable controls how the shell interacts with the user and
              job control.  If this variable is set, single word  simple  com-		      |	              job  control.   If this variable is set, single word simple com-
              mands without redirections are treated as candidates for resump-			              mands without redirections are treated as candidates for resump-
              tion of an existing stopped job.  There is no ambiguity allowed;			              tion of an existing stopped job.  There is no ambiguity allowed;
              if  there  is more than one job beginning with the string typed,		      |	              if there is more than one job beginning with the  string  typed,
              the job most recently accessed  is  selected.   The  _n_a_m_e  of  a		      |	              the  job  most  recently  accessed  is  selected.  The _n_a_m_e of a
              stopped  job, in this context, is the command line used to start		      |	              stopped job, in this context, is the command line used to  start
              it.  If set to the value _e_x_a_c_t, the string supplied  must  match		      |	              it.   If  set to the value _e_x_a_c_t, the string supplied must match
              the  name  of  a  stopped  job exactly; if set to _s_u_b_s_t_r_i_n_g, the		      |	              the name of a stopped job exactly;  if  set  to  _s_u_b_s_t_r_i_n_g,  the
              string supplied needs to match a substring  of  the  name  of  a		      |	              string  supplied  needs  to  match  a substring of the name of a
              stopped  job.  The _s_u_b_s_t_r_i_n_g value provides functionality analo-		      |	              stopped job.  The _s_u_b_s_t_r_i_n_g value provides functionality  analo-
              gous to the %%??  job identifier (see JJOOBB CCOONNTTRROOLL below).  If  set		      |	              gous  to the %%??  job identifier (see JJOOBB CCOONNTTRROOLL below).  If set
              to  any  other  value, the supplied string must be a prefix of a		      |	              to any other value, the supplied string must be a  prefix  of  a
              stopped job's name; this provides functionality analogous to the			              stopped job's name; this provides functionality analogous to the
              %%_s_t_r_i_n_g job identifier.								              %%_s_t_r_i_n_g job identifier.
											      <
       hhiissttcchhaarrss										       hhiissttcchhaarrss
              The  two or three characters which control history expansion and		      |	              The two or three characters which control history expansion  and
              tokenization (see HHIISSTTOORRYY EEXXPPAANNSSIIOONN below).  The first character			              tokenization (see HHIISSTTOORRYY EEXXPPAANNSSIIOONN below).  The first character
              is  the _h_i_s_t_o_r_y _e_x_p_a_n_s_i_o_n character, the character which signals		      |	              is the _h_i_s_t_o_r_y _e_x_p_a_n_s_i_o_n character, the character which  signals
              the start of a history  expansion,  normally  `!!'.   The  second		      |	              the  start  of  a  history  expansion, normally `!!'.  The second
              character  is the _q_u_i_c_k _s_u_b_s_t_i_t_u_t_i_o_n character, which is used as		      |	              character is the _q_u_i_c_k _s_u_b_s_t_i_t_u_t_i_o_n character, which is used  as
              shorthand for re-running the previous command  entered,  substi-		      |	              shorthand  for  re-running the previous command entered, substi-
              tuting  one  string  for another in the command.  The default is		      |	              tuting one string for another in the command.   The  default  is
              `^^'.  The optional third character is the character which  indi-		      |	              `^^'.   The optional third character is the character which indi-
              cates  that the remainder of the line is a comment when found as		      |	              cates that the remainder of the line is a comment when found  as
              the first character of a word, normally `##'.  The  history  com-		      |	              the  first  character of a word, normally `##'.  The history com-
              ment character causes history substitution to be skipped for the			              ment character causes history substitution to be skipped for the
              remaining words on the line.  It does not necessarily cause  the		      |	              remaining  words on the line.  It does not necessarily cause the
              shell parser to treat the rest of the line as a comment.				              shell parser to treat the rest of the line as a comment.

   AArrrraayyss											   AArrrraayyss
       BBaasshh  provides  one-dimensional  array  variables.  Any variable may be		      |	       BBaasshh provides one-dimensional indexed and associative array  variables.
       used as an array; the ddeeccllaarree builtin will explicitly declare an array.		      |	       Any  variable may be used as an indexed array; the ddeeccllaarree builtin will
       There  is no maximum limit on the size of an array, nor any requirement		      |	       explicitly declare an array.  There is no maximum limit on the size  of
       that members be indexed or assigned contiguously.  Arrays  are  indexed		      |	       an  array, nor any requirement that members be indexed or assigned con-
       using integers and are zero-based.						      |	       tiguously.  Indexed arrays are  referenced  using  integers  (including
											      |	       arithmetic expressions) and are zero-based; associative arrays are ref-
       An  array is created automatically if any variable is assigned to using		      |	       erenced using arbitrary strings.  Unless otherwise noted, indexed array
       the syntax _n_a_m_e[_s_u_b_s_c_r_i_p_t]=_v_a_l_u_e.   The  _s_u_b_s_c_r_i_p_t  is  treated  as  an		      |	       indices must be non-negative integers.
       arithmetic  expression  that  must evaluate to a number greater than or		      |
       equal to zero.  To explicitly declare an array,  use  ddeeccllaarree  --aa  _n_a_m_e		      |	       An  indexed  array is created automatically if any variable is assigned
       (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  ddeeccllaarree --aa _n_a_m_e[[_s_u_b_s_c_r_i_p_t]] is also		      |	       to using the syntax _n_a_m_e[_s_u_b_s_c_r_i_p_t]=_v_a_l_u_e.  The _s_u_b_s_c_r_i_p_t is treated as
       accepted; the _s_u_b_s_c_r_i_p_t is ignored.  Attributes may be specified for an		      |	       an arithmetic expression that must evaluate to a number.  To explicitly
       array variable using the ddeeccllaarree and rreeaaddoonnllyy builtins.  Each attribute		      |	       declare an indexed array, use ddeeccllaarree --aa _n_a_m_e (see SSHHEELLLL  BBUUIILLTTIINN  CCOOMM--
       applies to all members of an array.						      |	       MMAANNDDSS  below).   ddeeccllaarree  --aa _n_a_m_e[[_s_u_b_s_c_r_i_p_t]] is also accepted; the _s_u_b_-
											      >	       _s_c_r_i_p_t is ignored.
											      >
											      >	       Associative arrays are created using ddeeccllaarree --AA _n_a_m_e.
											      >
											      >	       Attributes may be specified for an array variable using the ddeeccllaarree and
											      >	       rreeaaddoonnllyy  builtins.  Each attribute applies to all members of an array.

       Arrays  are  assigned  to  using  compound  assignments  of  the   form			       Arrays  are  assigned  to  using  compound  assignments  of  the   form
       _n_a_m_e=((value_1  ...  value_n)),  where  each  _v_a_l_u_e  is  of  the form [_s_u_b_-			       _n_a_m_e=((value_1  ...  value_n)),  where  each  _v_a_l_u_e  is  of  the form [_s_u_b_-
       _s_c_r_i_p_t]=_s_t_r_i_n_g.  Only _s_t_r_i_n_g is required.  If the optional brackets and		      |	       _s_c_r_i_p_t]=_s_t_r_i_n_g.  Indexed array assignments do not require anything  but
       subscript  are supplied, that index is assigned to; otherwise the index		      |	       _s_t_r_i_n_g.  When assigning to indexed arrays, if the optional brackets and
       of the element assigned is the last index assigned to by the  statement		      |	       subscript are supplied, that index is assigned to; otherwise the  index
       plus  one.   Indexing  starts at zero.  This syntax is also accepted by		      |	       of  the element assigned is the last index assigned to by the statement
       the ddeeccllaarree builtin.  Individual array  elements  may  be  assigned  to		      |	       plus one.  Indexing starts at zero.
       using the _n_a_m_e[_s_u_b_s_c_r_i_p_t]=_v_a_l_u_e syntax introduced above.				      |
											      >	       When assigning to an associative array, the subscript is required.
											      >
											      >	       This syntax is also accepted by the ddeeccllaarree builtin.  Individual  array
											      >	       elements  may  be  assigned  to  using the _n_a_m_e[_s_u_b_s_c_r_i_p_t]=_v_a_l_u_e syntax
											      >	       introduced above.  When assigning to an indexed array, if _n_a_m_e is  sub-
											      >	       scripted  by  a negative number, that number is interpreted as relative
											      >	       to one greater than the maximum index  of  _n_a_m_e,  so  negative  indices
											      >	       count back from the end of the array, and an index of -1 references the
											      >	       last element.

       Any  element  of  an  array may be referenced using ${_n_a_m_e[_s_u_b_s_c_r_i_p_t]}.		      |	       Any element of an array may  be  referenced  using  ${_n_a_m_e[_s_u_b_s_c_r_i_p_t]}.
       The braces are required to avoid conflicts with pathname expansion.  If			       The braces are required to avoid conflicts with pathname expansion.  If
       _s_u_b_s_c_r_i_p_t  is  @@  or **, the word expands to all members of _n_a_m_e.  These		      |	       _s_u_b_s_c_r_i_p_t is @@ or **, the word expands to all members  of  _n_a_m_e.   These
       subscripts differ only when the word appears within double quotes.   If		      |	       subscripts  differ only when the word appears within double quotes.  If
       the word is double-quoted, ${_n_a_m_e[*]} expands to a single word with the			       the word is double-quoted, ${_n_a_m_e[*]} expands to a single word with the
       value of each array member separated by the first character of the  IIFFSS		      |	       value  of each array member separated by the first character of the IIFFSS
       special variable, and ${_n_a_m_e[@]} expands each element of _n_a_m_e to a sep-			       special variable, and ${_n_a_m_e[@]} expands each element of _n_a_m_e to a sep-
       arate word.  When there are no array  members,  ${_n_a_m_e[@]}  expands  to		      |	       arate  word.   When  there  are no array members, ${_n_a_m_e[@]} expands to
       nothing.   If  the  double-quoted  expansion  occurs within a word, the		      |	       nothing.  If the double-quoted expansion  occurs  within  a  word,  the
       expansion of the first parameter is joined with the beginning  part  of		      |	       expansion  of  the first parameter is joined with the beginning part of
       the  original  word,  and the expansion of the last parameter is joined		      |	       the original word, and the expansion of the last  parameter  is  joined
       with the last part of the original word.   This  is  analogous  to  the		      |	       with  the  last  part  of  the original word.  This is analogous to the
       expansion  of  the  special  parameters ** and @@ (see SSppeecciiaall PPaarraammeetteerrss		      |	       expansion of the special parameters ** and  @@  (see  SSppeecciiaall  PPaarraammeetteerrss
       above).  ${#_n_a_m_e[_s_u_b_s_c_r_i_p_t]}  expands  to  the  length  of  ${_n_a_m_e[_s_u_b_-		      |	       above).   ${#_n_a_m_e[_s_u_b_s_c_r_i_p_t]}  expands  to  the  length  of ${_n_a_m_e[_s_u_b_-
       _s_c_r_i_p_t]}.   If _s_u_b_s_c_r_i_p_t is ** or @@, the expansion is the number of ele-		      |	       _s_c_r_i_p_t]}.  If _s_u_b_s_c_r_i_p_t is ** or @@, the expansion is the number of  ele-
       ments in the array.  Referencing an array variable without a  subscript		      |	       ments  in  the array.  If the _s_u_b_s_c_r_i_p_t used to reference an element of
       is equivalent to referencing element zero.					      |	       an indexed array evaluates to a number less than  zero,  it  is  inter-
											      |	       preted  as relative to one greater than the maximum index of the array,
       The  uunnsseett  builtin  is  used to destroy arrays.  uunnsseett _n_a_m_e[_s_u_b_s_c_r_i_p_t]		      |	       so negative indices count back from the end of the array, and an  index
       destroys the array element at index _s_u_b_s_c_r_i_p_t.  Care must be  taken  to		      |	       of -1 references the last element.
       avoid unwanted side effects caused by filename generation.  uunnsseett _n_a_m_e,		      |
       where _n_a_m_e is an array, or uunnsseett _n_a_m_e[_s_u_b_s_c_r_i_p_t], where _s_u_b_s_c_r_i_p_t is  **		      |	       Referencing an array variable without a subscript is equivalent to ref-
       or @@, removes the entire array.							      |	       erencing the array with a subscript of 0.  Any reference to a  variable
											      >	       using a valid subscript is legal, and bbaasshh will create an array if nec-
											      >	       essary.
											      >
											      >	       An array variable is considered set if a subscript has been assigned  a
											      >	       value.  The null string is a valid value.
											      >
											      >	       It  is possible to obtain the keys (indices) of an array as well as the
											      >	       values.  ${!!_n_a_m_e[_@]} and ${!!_n_a_m_e[_*]} expand to the indices assigned  in
											      >	       array variable _n_a_m_e.  The treatment when in double quotes is similar to
											      >	       the expansion of the special parameters _@ and _* within double quotes.
											      >
											      >	       The uunnsseett builtin is used to  destroy  arrays.   uunnsseett  _n_a_m_e[_s_u_b_s_c_r_i_p_t]
											      >	       destroys  the  array  element  at index _s_u_b_s_c_r_i_p_t, for both indexed and
											      >	       associative arrays.  Negative subscripts to indexed arrays  are  inter-
											      >	       preted  as  described  above.   Unsetting  the last element of an array
											      >	       variable does not unset the variable.  uunnsseett _n_a_m_e,  where  _n_a_m_e  is  an
											      >	       array, or uunnsseett _n_a_m_e[_s_u_b_s_c_r_i_p_t], where _s_u_b_s_c_r_i_p_t is ** or @@, removes the
											      >	       entire array.
											      >
											      >	       When using a variable name with a subscript as an argument  to  a  com-
											      >	       mand,  such  as  with  uunnsseett,  without  using the word expansion syntax
											      >	       described above, the argument is subject  to  pathname  expansion.   If
											      >	       pathname expansion is not desired, the argument should be quoted.

       The  ddeeccllaarree,  llooccaall,  and rreeaaddoonnllyy builtins each accept a --aa option to			       The  ddeeccllaarree,  llooccaall,  and rreeaaddoonnllyy builtins each accept a --aa option to
       specify an array.  The rreeaadd builtin accepts a --aa  option  to  assign  a		      |	       specify an indexed array and a --AA  option  to  specify  an  associative
       list  of  words  read from the standard input to an array.  The sseett and		      |	       array.   If  both  options are supplied, --AA takes precedence.  The rreeaadd
       ddeeccllaarree builtins display array values in a way that allows them  to  be		      |	       builtin accepts a --aa option to assign a list of  words  read  from  the
       reused as assignments.								      |	       standard input to an array.  The sseett and ddeeccllaarree builtins display array
											      >	       values in a way that allows them to be reused as assignments.

EEXXPPAANNSSIIOONN											EEXXPPAANNSSIIOONN
       Expansion is performed on the command line after it has been split into			       Expansion is performed on the command line after it has been split into
       words.  There are seven kinds of expansion performed: _b_r_a_c_e  _e_x_p_a_n_s_i_o_n,		      |	       words.   There are seven kinds of expansion performed: _b_r_a_c_e _e_x_p_a_n_s_i_o_n,
       _t_i_l_d_e  _e_x_p_a_n_s_i_o_n,  _p_a_r_a_m_e_t_e_r  _a_n_d _v_a_r_i_a_b_l_e _e_x_p_a_n_s_i_o_n, _c_o_m_m_a_n_d _s_u_b_s_t_i_t_u_-		      |	       _t_i_l_d_e _e_x_p_a_n_s_i_o_n, _p_a_r_a_m_e_t_e_r _a_n_d _v_a_r_i_a_b_l_e  _e_x_p_a_n_s_i_o_n,  _c_o_m_m_a_n_d  _s_u_b_s_t_i_t_u_-
       _t_i_o_n, _a_r_i_t_h_m_e_t_i_c _e_x_p_a_n_s_i_o_n, _w_o_r_d _s_p_l_i_t_t_i_n_g, and _p_a_t_h_n_a_m_e _e_x_p_a_n_s_i_o_n.			       _t_i_o_n, _a_r_i_t_h_m_e_t_i_c _e_x_p_a_n_s_i_o_n, _w_o_r_d _s_p_l_i_t_t_i_n_g, and _p_a_t_h_n_a_m_e _e_x_p_a_n_s_i_o_n.

       The order of expansions is: brace expansion, tilde  expansion,  parame-		      |	       The order of expansions is: brace expansion; tilde expansion, parameter
       ter,  variable  and arithmetic expansion and command substitution (done		      |	       and variable expansion, arithmetic expansion, and command  substitution
       in a left-to-right fashion), word splitting, and pathname expansion.		      |	       (done  in a left-to-right fashion); word splitting; and pathname expan-
											      >	       sion.

       On systems that can support it, there is an additional expansion avail-			       On systems that can support it, there is an additional expansion avail-
       able: _p_r_o_c_e_s_s _s_u_b_s_t_i_t_u_t_i_o_n.							      |	       able:  _p_r_o_c_e_s_s  _s_u_b_s_t_i_t_u_t_i_o_n.   This  is  performed at the same time as
											      |	       tilde, parameter, variable, and arithmetic expansion and  command  sub-
       Only brace expansion, word splitting, and pathname expansion can change		      |	       stitution.
       the number of words of the expansion; other expansions expand a  single		      |
       word  to a single word.  The only exceptions to this are the expansions		      |	       After  these  expansions are performed, quote characters present in the
       of "$$@@" and "$${{_n_a_m_e[[@@]]}}" as explained above (see PPAARRAAMMEETTEERRSS).			      |	       original word are removed  unless  they  have  been  quoted  themselves
											      >	       (_q_u_o_t_e _r_e_m_o_v_a_l).
											      >
											      >	       Only  brace  expansion,  word  splitting,  and  pathname  expansion can
											      >	       increase the number of words of the expansion; other expansions  expand
											      >	       a  single  word  to a single word.  The only exceptions to this are the
											      >	       expansions of "$$@@"  and  "$${{_n_a_m_e[[@@]]}}",  and,  in  most  cases,  $$**  and
											      >	       $${{_n_a_m_e[[**]]}} as explained above (see PPAARRAAMMEETTEERRSS).

   BBrraaccee EExxppaannssiioonn										   BBrraaccee EExxppaannssiioonn
       _B_r_a_c_e _e_x_p_a_n_s_i_o_n is a mechanism by which arbitrary strings may be gener-			       _B_r_a_c_e _e_x_p_a_n_s_i_o_n is a mechanism by which arbitrary strings may be gener-
       ated.   This  mechanism is similar to _p_a_t_h_n_a_m_e _e_x_p_a_n_s_i_o_n, but the file-		      |	       ated.  This mechanism is similar to _p_a_t_h_n_a_m_e _e_x_p_a_n_s_i_o_n, but  the  file-
       names generated need not exist.  Patterns to be brace expanded take the			       names generated need not exist.  Patterns to be brace expanded take the
       form of an optional _p_r_e_a_m_b_l_e, followed by either a series of comma-sep-			       form of an optional _p_r_e_a_m_b_l_e, followed by either a series of comma-sep-
       arated strings or a sequence expression between a pair of braces,  fol-		      |	       arated  strings or a sequence expression between a pair of braces, fol-
       lowed  by  an  optional  _p_o_s_t_s_c_r_i_p_t.   The preamble is prefixed to each		      |	       lowed by an optional _p_o_s_t_s_c_r_i_p_t.  The  preamble  is  prefixed  to  each
       string contained within the braces, and the postscript is then appended			       string contained within the braces, and the postscript is then appended
       to each resulting string, expanding left to right.					       to each resulting string, expanding left to right.

       Brace  expansions  may  be nested.  The results of each expanded string		      |	       Brace expansions may be nested.  The results of  each  expanded  string
       are not sorted;  left  to  right  order  is  preserved.   For  example,		      |	       are  not  sorted;  left  to  right  order  is  preserved.  For example,
       a{{d,c,b}}e expands into `ade ace abe'.							       a{{d,c,b}}e expands into `ade ace abe'.

       A  sequence  expression takes the form {{_x...._y}}, where _x and _y are either		      |	       A sequence expression takes the form {{_x...._y[[...._i_n_c_r]]}}, where _x and _y  are
       integers or single characters.  When integers are supplied, the expres-		      |	       either  integers or single characters, and _i_n_c_r, an optional increment,
       sion  expands  to each number between _x and _y, inclusive.  When charac-		      |	       is an integer.  When integers are supplied, the expression  expands  to
       ters are supplied, the expression expands  to  each  character  lexico-		      |	       each  number between _x and _y, inclusive.  Supplied integers may be pre-
       graphically between _x and _y, inclusive.  Note that both _x and _y must be		      |	       fixed with _0 to force each term to have the same width.  When either  _x
       of the same type.								      |	       or  _y  begins  with  a  zero, the shell attempts to force all generated
											      >	       terms to contain the same number of digits, zero-padding  where  neces-
											      >	       sary.   When  characters  are  supplied, the expression expands to each
											      >	       character lexicographically between  _x  and  _y,  inclusive,  using  the
											      >	       default  C  locale.   Note  that both _x and _y must be of the same type.
											      >	       When the increment is supplied, it is used as  the  difference  between
											      >	       each term.  The default increment is 1 or -1 as appropriate.

       Brace expansion is performed before any other expansions, and any char-			       Brace expansion is performed before any other expansions, and any char-
       acters  special to other expansions are preserved in the result.  It is		      |	       acters special to other expansions are preserved in the result.  It  is
       strictly textual.  BBaasshh does not apply any syntactic interpretation  to		      |	       strictly  textual.  BBaasshh does not apply any syntactic interpretation to
       the context of the expansion or the text between the braces.				       the context of the expansion or the text between the braces.

       A  correctly-formed  brace  expansion must contain unquoted opening and		      |	       A correctly-formed brace expansion must contain  unquoted  opening  and
       closing braces, and at least one unquoted comma  or  a  valid  sequence		      |	       closing  braces,  and  at  least one unquoted comma or a valid sequence
       expression.   Any incorrectly formed brace expansion is left unchanged.		      |	       expression.  Any incorrectly formed brace expansion is left  unchanged.
       A {{ or ,, may be quoted with a backslash to prevent its being considered			       A {{ or ,, may be quoted with a backslash to prevent its being considered
       part  of  a brace expression.  To avoid conflicts with parameter expan-		      |	       part of a brace expression.  To avoid conflicts with  parameter  expan-
       sion, the string $${{ is not considered eligible for brace expansion.		      |	       sion, the string $${{ is not considered eligible for brace expansion, and
											      >	       inhibits brace expansion until the closing }}.

       This construct is typically used as shorthand when the common prefix of			       This construct is typically used as shorthand when the common prefix of
       the strings to be generated is longer than in the above example:				       the strings to be generated is longer than in the above example:

              mkdir /usr/local/src/bash/{old,new,dist,bugs}					              mkdir /usr/local/src/bash/{old,new,dist,bugs}
       or											       or
              chown root /usr/{ucb/{ex,edit},lib/{ex?.?*,how_ex}}				              chown root /usr/{ucb/{ex,edit},lib/{ex?.?*,how_ex}}

       Brace  expansion  introduces  a  slight incompatibility with historical			       Brace  expansion  introduces  a  slight incompatibility with historical
       versions of sshh.  sshh does not treat opening or closing braces  specially			       versions of sshh.  sshh does not treat opening or closing braces  specially
       when  they  appear as part of a word, and preserves them in the output.			       when  they  appear as part of a word, and preserves them in the output.
       BBaasshh removes braces from words as a  consequence  of  brace  expansion.			       BBaasshh removes braces from words as a  consequence  of  brace  expansion.
       For  example,  a word entered to sshh as _f_i_l_e_{_1_,_2_} appears identically in			       For  example,  a word entered to sshh as _f_i_l_e_{_1_,_2_} appears identically in
       the output.  The same word is output as _f_i_l_e_1 _f_i_l_e_2 after expansion  by			       the output.  The same word is output as _f_i_l_e_1 _f_i_l_e_2 after expansion  by
       bbaasshh.   If strict compatibility with sshh is desired, start bbaasshh with the			       bbaasshh.   If strict compatibility with sshh is desired, start bbaasshh with the
       ++BB option or disable brace expansion with the ++BB option to the sseett com-			       ++BB option or disable brace expansion with the ++BB option to the sseett com-
       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).							       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).

   TTiillddee EExxppaannssiioonn										   TTiillddee EExxppaannssiioonn
       If  a  word  begins  with an unquoted tilde character (`~~'), all of the			       If  a  word  begins  with an unquoted tilde character (`~~'), all of the
       characters preceding the first unquoted slash (or  all  characters,  if			       characters preceding the first unquoted slash (or  all  characters,  if
       there  is no unquoted slash) are considered a _t_i_l_d_e_-_p_r_e_f_i_x.  If none of			       there  is no unquoted slash) are considered a _t_i_l_d_e_-_p_r_e_f_i_x.  If none of
       the characters in the tilde-prefix are quoted, the  characters  in  the			       the characters in the tilde-prefix are quoted, the  characters  in  the
       tilde-prefix  following the tilde are treated as a possible _l_o_g_i_n _n_a_m_e.			       tilde-prefix  following the tilde are treated as a possible _l_o_g_i_n _n_a_m_e.
       If this login name is the null string, the tilde is replaced  with  the			       If this login name is the null string, the tilde is replaced  with  the
       value  of  the shell parameter HHOOMMEE.  If HHOOMMEE is unset, the home direc-			       value  of  the shell parameter HHOOMMEE.  If HHOOMMEE is unset, the home direc-
       tory of the user executing the shell is  substituted  instead.   Other-			       tory of the user executing the shell is  substituted  instead.   Other-
       wise,  the  tilde-prefix is replaced with the home directory associated			       wise,  the  tilde-prefix is replaced with the home directory associated
       with the specified login name.								       with the specified login name.

       If the tilde-prefix is a `~+', the value  of  the  shell  variable  PPWWDD			       If the tilde-prefix is a `~+', the value  of  the  shell  variable  PPWWDD
       replaces the tilde-prefix.  If the tilde-prefix is a `~-', the value of			       replaces the tilde-prefix.  If the tilde-prefix is a `~-', the value of
       the shell variable OOLLDDPPWWDD, if it is set, is substituted.  If the  char-			       the shell variable OOLLDDPPWWDD, if it is set, is substituted.  If the  char-
       acters  following  the tilde in the tilde-prefix consist of a number _N,			       acters  following  the tilde in the tilde-prefix consist of a number _N,
       optionally prefixed by a `+' or a `-',  the  tilde-prefix  is  replaced			       optionally prefixed by a `+' or a `-',  the  tilde-prefix  is  replaced
       with the corresponding element from the directory stack, as it would be			       with the corresponding element from the directory stack, as it would be
       displayed by the ddiirrss builtin invoked with the tilde-prefix as an argu-			       displayed by the ddiirrss builtin invoked with the tilde-prefix as an argu-
       ment.   If  the characters following the tilde in the tilde-prefix con-			       ment.   If  the characters following the tilde in the tilde-prefix con-
       sist of a number without a leading `+' or `-', `+' is assumed.				       sist of a number without a leading `+' or `-', `+' is assumed.

       If the login name is invalid, or the tilde expansion fails, the word is			       If the login name is invalid, or the tilde expansion fails, the word is
       unchanged.										       unchanged.

       Each variable assignment is checked for unquoted tilde-prefixes immedi-			       Each variable assignment is checked for unquoted tilde-prefixes immedi-
       ately following a :: or the first ==.  In these cases, tilde expansion is			       ately following a :: or the first ==.  In these cases, tilde expansion is
       also  performed.   Consequently,  one may use file names with tildes in		      |	       also  performed.   Consequently,  one  may use filenames with tildes in
       assignments to PPAATTHH, MMAAIILLPPAATTHH, and CCDDPPAATTHH, and the  shell  assigns  the			       assignments to PPAATTHH, MMAAIILLPPAATTHH, and CCDDPPAATTHH, and the  shell  assigns  the
       expanded value.										       expanded value.

											      >	       Bash  also  performs tilde expansion on words satisfying the conditions
											      >	       of variable assignments (as described above under PPAARRAAMMEETTEERRSS) when they
											      >	       appear  as arguments to simple commands.  Bash does not do this, except
											      >	       for the _d_e_c_l_a_r_a_t_i_o_n commands listed above, when in _p_o_s_i_x _m_o_d_e.
											      >
   PPaarraammeetteerr EExxppaannssiioonn										   PPaarraammeetteerr EExxppaannssiioonn
       The `$$' character introduces parameter expansion, command substitution,			       The `$$' character introduces parameter expansion, command substitution,
       or arithmetic expansion.  The parameter name or symbol to  be  expanded		      |	       or  arithmetic  expansion.  The parameter name or symbol to be expanded
       may  be enclosed in braces, which are optional but serve to protect the		      |	       may be enclosed in braces, which are optional but serve to protect  the
       variable to be expanded from characters immediately following it  which		      |	       variable  to be expanded from characters immediately following it which
       could be interpreted as part of the name.						       could be interpreted as part of the name.

       When  braces  are  used, the matching ending brace is the first `}}' not		      |	       When braces are used, the matching ending brace is the  first  `}}'  not
       escaped by a backslash or within a quoted string,  and  not  within  an		      |	       escaped  by  a  backslash  or within a quoted string, and not within an
       embedded  arithmetic  expansion,  command  substitution,  or  parameter			       embedded  arithmetic  expansion,  command  substitution,  or  parameter
       expansion.										       expansion.

       ${_p_a_r_a_m_e_t_e_r}										       ${_p_a_r_a_m_e_t_e_r}
              The value of _p_a_r_a_m_e_t_e_r is substituted.  The braces are  required		      |	              The  value of _p_a_r_a_m_e_t_e_r is substituted.  The braces are required
              when  _p_a_r_a_m_e_t_e_r  is  a  positional  parameter with more than one		      |	              when _p_a_r_a_m_e_t_e_r is a positional  parameter  with  more  than  one
              digit, or when _p_a_r_a_m_e_t_e_r is followed by a character which is not			              digit, or when _p_a_r_a_m_e_t_e_r is followed by a character which is not
              to be interpreted as part of its name.					      |	              to be interpreted as part of its name.  The _p_a_r_a_m_e_t_e_r is a shell
											      |	              parameter  as  described above PPAARRAAMMEETTEERRSS) or an array reference
       If the first character of _p_a_r_a_m_e_t_e_r is an exclamation point, a level of		      |	              (AArrrraayyss).
       variable indirection is introduced.  BBaasshh uses the value of  the  vari-		      |
       able  formed  from  the  rest of _p_a_r_a_m_e_t_e_r as the name of the variable;		      |	       If the first character of _p_a_r_a_m_e_t_e_r is an exclamation  point  (!!),  and
       this variable is then expanded and that value is used in  the  rest  of		      |	       _p_a_r_a_m_e_t_e_r is not a _n_a_m_e_r_e_f, it introduces a level of indirection.  BBaasshh
       the  substitution,  rather than the value of _p_a_r_a_m_e_t_e_r itself.  This is		      |	       uses the value formed by expanding the rest of  _p_a_r_a_m_e_t_e_r  as  the  new
       known as _i_n_d_i_r_e_c_t _e_x_p_a_n_s_i_o_n.  The exceptions to this are the expansions		      |	       _p_a_r_a_m_e_t_e_r;  this is then expanded and that value is used in the rest of
       of  ${!_p_r_e_f_i_x*} and ${!!_n_a_m_e[_@]} described below.  The exclamation point		      |	       the expansion, rather than the expansion  of  the  original  _p_a_r_a_m_e_t_e_r.
       must immediately follow the left brace in order to  introduce  indirec-		      |	       This  is  known  as  _i_n_d_i_r_e_c_t _e_x_p_a_n_s_i_o_n.  The value is subject to tilde
											      >	       expansion, parameter expansion, command  substitution,  and  arithmetic
											      >	       expansion.   If _p_a_r_a_m_e_t_e_r is a nameref, this expands to the name of the
											      >	       parameter referenced by _p_a_r_a_m_e_t_e_r instead of  performing  the  complete
											      >	       indirect  expansion.   The  exceptions  to  this  are the expansions of
											      >	       ${!!_p_r_e_f_i_x**} and ${!!_n_a_m_e[_@]} described  below.   The  exclamation  point
											      >	       must  immediately  follow the left brace in order to introduce indirec-
       tion.											       tion.

       In each of the cases below, _w_o_r_d is subject to tilde expansion, parame-			       In each of the cases below, _w_o_r_d is subject to tilde expansion, parame-
       ter expansion, command substitution, and  arithmetic  expansion.   When		      |	       ter expansion, command substitution, and arithmetic expansion.
       not  performing substring expansion, bbaasshh tests for a parameter that is		      |
       unset or null; omitting the colon results in a test only for a  parame-		      |	       When  not  performing  substring  expansion, using the forms documented
       ter that is unset.								      |	       below (e.g., ::--), bbaasshh tests for a parameter that  is  unset  or  null.
											      >	       Omitting  the  colon  results  in  a  test only for a parameter that is
											      >	       unset.

       ${_p_a_r_a_m_e_t_e_r::--_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r::--_w_o_r_d}
              UUssee  DDeeffaauulltt  VVaalluueess.  If _p_a_r_a_m_e_t_e_r is unset or null, the expan-		      |	              UUssee DDeeffaauulltt VVaalluueess.  If _p_a_r_a_m_e_t_e_r is unset or null,  the  expan-
              sion of _w_o_r_d is substituted.  Otherwise, the value of  _p_a_r_a_m_e_t_e_r		      |	              sion  of _w_o_r_d is substituted.  Otherwise, the value of _p_a_r_a_m_e_t_e_r
              is substituted.									              is substituted.
       ${_p_a_r_a_m_e_t_e_r::==_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r::==_w_o_r_d}
              AAssssiiggnn  DDeeffaauulltt  VVaalluueess.   If  _p_a_r_a_m_e_t_e_r  is  unset or null, the		      |	              AAssssiiggnn DDeeffaauulltt VVaalluueess.  If  _p_a_r_a_m_e_t_e_r  is  unset  or  null,  the
              expansion of _w_o_r_d is assigned to _p_a_r_a_m_e_t_e_r.  The value of _p_a_r_a_m_-			              expansion of _w_o_r_d is assigned to _p_a_r_a_m_e_t_e_r.  The value of _p_a_r_a_m_-
              _e_t_e_r  is  then  substituted.   Positional parameters and special		      |	              _e_t_e_r is then substituted.   Positional  parameters  and  special
              parameters may not be assigned to in this way.					              parameters may not be assigned to in this way.
       ${_p_a_r_a_m_e_t_e_r::??_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r::??_w_o_r_d}
              DDiissppllaayy EErrrroorr iiff NNuullll oorr UUnnsseett.  If _p_a_r_a_m_e_t_e_r is null or  unset,		      |	              DDiissppllaayy  EErrrroorr iiff NNuullll oorr UUnnsseett.  If _p_a_r_a_m_e_t_e_r is null or unset,
              the  expansion  of  _w_o_r_d (or a message to that effect if _w_o_r_d is		      |	              the expansion of _w_o_r_d (or a message to that effect  if  _w_o_r_d  is
              not present) is written to the standard error and the shell,  if		      |	              not  present) is written to the standard error and the shell, if
              it is not interactive, exits.  Otherwise, the value of _p_a_r_a_m_e_t_e_r			              it is not interactive, exits.  Otherwise, the value of _p_a_r_a_m_e_t_e_r
              is substituted.									              is substituted.
       ${_p_a_r_a_m_e_t_e_r::++_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r::++_w_o_r_d}
              UUssee AAlltteerrnnaattee VVaalluuee.  If _p_a_r_a_m_e_t_e_r is null or unset, nothing  is		      |	              UUssee  AAlltteerrnnaattee VVaalluuee.  If _p_a_r_a_m_e_t_e_r is null or unset, nothing is
              substituted, otherwise the expansion of _w_o_r_d is substituted.			              substituted, otherwise the expansion of _w_o_r_d is substituted.
       ${_p_a_r_a_m_e_t_e_r::_o_f_f_s_e_t}									       ${_p_a_r_a_m_e_t_e_r::_o_f_f_s_e_t}
       ${_p_a_r_a_m_e_t_e_r::_o_f_f_s_e_t::_l_e_n_g_t_h}								       ${_p_a_r_a_m_e_t_e_r::_o_f_f_s_e_t::_l_e_n_g_t_h}
              SSuubbssttrriinngg  EExxppaannssiioonn..   Expands  to  up  to _l_e_n_g_t_h characters of		      |	              SSuubbssttrriinngg EExxppaannssiioonn.  Expands to up to _l_e_n_g_t_h characters of  the
              _p_a_r_a_m_e_t_e_r starting at the character  specified  by  _o_f_f_s_e_t.   If		      |	              value  of  _p_a_r_a_m_e_t_e_r starting at the character specified by _o_f_f_-
              _l_e_n_g_t_h  is omitted, expands to the substring of _p_a_r_a_m_e_t_e_r start-		      |	              _s_e_t.  If _p_a_r_a_m_e_t_e_r is @@, an indexed array subscripted by @@ or **,
              ing at the character specified by _o_f_f_s_e_t.  _l_e_n_g_t_h and _o_f_f_s_e_t are		      |	              or  an  associative  array name, the results differ as described
              arithmetic   expressions   (see  AARRIITTHHMMEETTIICC  EEVVAALLUUAATTIIOONN  below).		      |	              below.  If _l_e_n_g_t_h is omitted, expands to the  substring  of  the
              _l_e_n_g_t_h must evaluate to a number greater than or equal to  zero.		      |	              value of _p_a_r_a_m_e_t_e_r starting at the character specified by _o_f_f_s_e_t
											      >	              and extending to the end of the value.  _l_e_n_g_t_h  and  _o_f_f_s_e_t  are
											      >	              arithmetic expressions (see AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN below).
											      >
              If  _o_f_f_s_e_t  evaluates  to  a number less than zero, the value is			              If  _o_f_f_s_e_t  evaluates  to  a number less than zero, the value is
              used as an offset from the end of the value  of  _p_a_r_a_m_e_t_e_r.   If		      |	              used as an offset in characters from the end  of  the  value  of
              _p_a_r_a_m_e_t_e_r  is  @@,  the  result  is  _l_e_n_g_t_h positional parameters		      |	              _p_a_r_a_m_e_t_e_r.   If  _l_e_n_g_t_h evaluates to a number less than zero, it
              beginning at _o_f_f_s_e_t.  If _p_a_r_a_m_e_t_e_r is an array name indexed by @		      |	              is interpreted as an offset in characters from the  end  of  the
              or  *,  the  result is the _l_e_n_g_t_h members of the array beginning		      |	              value  of  _p_a_r_a_m_e_t_e_r rather than a number of characters, and the
              with ${_p_a_r_a_m_e_t_e_r[_o_f_f_s_e_t]}.  A negative _o_f_f_s_e_t is taken  relative		      |	              expansion is the characters  between  _o_f_f_s_e_t  and  that  result.
              to  one  greater  than the maximum index of the specified array.		      |	              Note  that a negative offset must be separated from the colon by
              Note that a negative offset must be separated from the colon  by		      |	              at least one space to avoid being confused with  the  ::--  expan-
              at  least  one  space to avoid being confused with the :- expan-		      |	              sion.
              sion.  Substring indexing is zero-based  unless  the  positional		      |
              parameters are used, in which case the indexing starts at 1.		      |	              If  _p_a_r_a_m_e_t_e_r  is  @@, the result is _l_e_n_g_t_h positional parameters
											      >	              beginning at _o_f_f_s_e_t.  A negative _o_f_f_s_e_t is taken relative to one
											      >	              greater  than the greatest positional parameter, so an offset of
											      >	              -1 evaluates to the last positional parameter.  It is an  expan-
											      >	              sion error if _l_e_n_g_t_h evaluates to a number less than zero.
											      >
											      >	              If _p_a_r_a_m_e_t_e_r is an indexed array name subscripted by @ or *, the
											      >	              result is  the  _l_e_n_g_t_h  members  of  the  array  beginning  with
											      >	              ${_p_a_r_a_m_e_t_e_r[_o_f_f_s_e_t]}.   A  negative  _o_f_f_s_e_t is taken relative to
											      >	              one greater than the maximum index of the specified  array.   It
											      >	              is  an expansion error if _l_e_n_g_t_h evaluates to a number less than
											      >	              zero.
											      >
											      >	              Substring expansion applied to  an  associative  array  produces
											      >	              undefined results.
											      >
											      >	              Substring  indexing  is zero-based unless the positional parame-
											      >	              ters are used, in  which  case  the  indexing  starts  at  1  by
											      >	              default.   If  _o_f_f_s_e_t  is  0,  and the positional parameters are
											      >	              used, $$00 is prefixed to the list.

       ${!!_p_r_e_f_i_x**}										       ${!!_p_r_e_f_i_x**}
       ${!!_p_r_e_f_i_x@@}										       ${!!_p_r_e_f_i_x@@}
              Expands to the names of variables whose names begin with _p_r_e_f_i_x,		      |	              NNaammeess mmaattcchhiinngg pprreeffiixx.  Expands to the names of variables  whose
              separated by the first character of the IIFFSS special variable.		      |	              names begin with _p_r_e_f_i_x, separated by the first character of the
											      >	              IIFFSS special variable.  When _@ is used and the expansion  appears
											      >	              within  double  quotes, each variable name expands to a separate
											      >	              word.

       ${!!_n_a_m_e[_@]}										       ${!!_n_a_m_e[_@]}
       ${!!_n_a_m_e[_*]}										       ${!!_n_a_m_e[_*]}
              If _n_a_m_e is an array variable,  expands  to  the  list  of  array		      |	              LLiisstt ooff aarrrraayy kkeeyyss.  If _n_a_m_e is an array  variable,  expands  to
              indices  (keys)  assigned  in  _n_a_m_e.   If  _n_a_m_e is not an array,		      |	              the  list  of array indices (keys) assigned in _n_a_m_e.  If _n_a_m_e is
              expands to 0 if _n_a_m_e is set and null otherwise.  When _@ is  used		      |	              not an array, expands to 0 if _n_a_m_e is set  and  null  otherwise.
              and the expansion appears within double quotes, each key expands		      |	              When  _@  is used and the expansion appears within double quotes,
              to a separate word.							      |	              each key expands to a separate word.

       ${##_p_a_r_a_m_e_t_e_r}										       ${##_p_a_r_a_m_e_t_e_r}
              The length in characters of the value of  _p_a_r_a_m_e_t_e_r  is  substi-		      |	              PPaarraammeetteerr lleennggtthh.  The length in  characters  of  the  value  of
              tuted.   If  _p_a_r_a_m_e_t_e_r  is  ** or @@, the value substituted is the		      |	              _p_a_r_a_m_e_t_e_r  is  substituted.   If  _p_a_r_a_m_e_t_e_r is ** or @@, the value
              number of positional parameters.  If _p_a_r_a_m_e_t_e_r is an array  name		      |	              substituted is the number of positional parameters.  If  _p_a_r_a_m_e_-
              subscripted  by  **  or @@, the value substituted is the number of		      |	              _t_e_r  is  an  array name subscripted by ** or @@, the value substi-
              elements in the array.							      |	              tuted is the number of elements in the array.  If  _p_a_r_a_m_e_t_e_r  is
											      >	              an  indexed  array  name  subscripted by a negative number, that
											      >	              number is interpreted as relative to one greater than the  maxi-
											      >	              mum  index of _p_a_r_a_m_e_t_e_r, so negative indices count back from the
											      >	              end of the array, and an index of -1 references  the  last  ele-
											      >	              ment.

       ${_p_a_r_a_m_e_t_e_r##_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r##_w_o_r_d}
       ${_p_a_r_a_m_e_t_e_r####_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r####_w_o_r_d}
              The _w_o_r_d is expanded to produce a pattern just  as  in  pathname		      |	              RReemmoovvee mmaattcchhiinngg pprreeffiixx ppaatttteerrnn.  The _w_o_r_d is expanded to produce
              expansion.  If the pattern matches the beginning of the value of		      |	              a pattern just as in pathname expansion, and matched against the
              _p_a_r_a_m_e_t_e_r, then the result of  the  expansion  is  the  expanded		      |	              expanded value of _p_a_r_a_m_e_t_e_r using the rules described under PPaatt--
              value of _p_a_r_a_m_e_t_e_r with the shortest matching pattern (the ``##''		      |	              tteerrnn MMaattcchhiinngg below.  If the pattern matches  the  beginning  of
              case) or the longest matching pattern (the ``####'' case) deleted.		      |	              the  value of _p_a_r_a_m_e_t_e_r, then the result of the expansion is the
              If _p_a_r_a_m_e_t_e_r is @@ or **, the pattern removal operation is applied		      |	              expanded value of _p_a_r_a_m_e_t_e_r with the shortest  matching  pattern
              to each positional parameter in turn, and the expansion  is  the		      |	              (the  ``##''  case)  or  the longest matching pattern (the ``####''
              resultant  list.   If _p_a_r_a_m_e_t_e_r is an array variable subscripted		      |	              case) deleted.  If _p_a_r_a_m_e_t_e_r is @@  or  **,  the  pattern  removal
              with @@ or **, the pattern removal operation is  applied  to  each		      |	              operation  is  applied to each positional parameter in turn, and
              member  of the array in turn, and the expansion is the resultant		      |	              the expansion is the resultant list.  If _p_a_r_a_m_e_t_e_r is  an  array
              list.									      |	              variable  subscripted with @@ or **, the pattern removal operation
											      >	              is applied to each member of the array in turn, and  the  expan-
											      >	              sion is the resultant list.

       ${_p_a_r_a_m_e_t_e_r%%_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r%%_w_o_r_d}
       ${_p_a_r_a_m_e_t_e_r%%%%_w_o_r_d}									       ${_p_a_r_a_m_e_t_e_r%%%%_w_o_r_d}
              The _w_o_r_d is expanded to produce a pattern just  as  in  pathname		      |	              RReemmoovvee mmaattcchhiinngg ssuuffffiixx ppaatttteerrnn.  The _w_o_r_d is expanded to produce
              expansion.   If  the  pattern  matches a trailing portion of the		      |	              a pattern just as in pathname expansion, and matched against the
              expanded value of _p_a_r_a_m_e_t_e_r, then the result of the expansion is		      |	              expanded value of _p_a_r_a_m_e_t_e_r using the rules described under PPaatt--
              the  expanded value of _p_a_r_a_m_e_t_e_r with the shortest matching pat-		      |	              tteerrnn MMaattcchhiinngg below.  If the pattern matches a trailing  portion
              tern (the ``%%'' case)  or  the  longest  matching  pattern  (the		      |	              of  the  expanded  value  of  _p_a_r_a_m_e_t_e_r,  then the result of the
              ``%%%%''  case)  deleted.   If  _p_a_r_a_m_e_t_e_r  is  @@ or **, the pattern		      |	              expansion is the expanded value of _p_a_r_a_m_e_t_e_r with  the  shortest
              removal operation is applied to  each  positional  parameter  in		      |	              matching  pattern  (the ``%%'' case) or the longest matching pat-
              turn,  and the expansion is the resultant list.  If _p_a_r_a_m_e_t_e_r is		      |	              tern (the ``%%%%'' case) deleted.  If _p_a_r_a_m_e_t_e_r is  @@  or  **,  the
              an array variable subscripted with @@ or **, the  pattern  removal		      |	              pattern  removal operation is applied to each positional parame-
              operation  is  applied  to each member of the array in turn, and		      |	              ter in turn, and the expansion is the resultant list.  If _p_a_r_a_m_-
              the expansion is the resultant list.					      |	              _e_t_e_r  is  an array variable subscripted with @@ or **, the pattern
											      >	              removal operation is applied to each  member  of  the  array  in
											      >	              turn, and the expansion is the resultant list.

       ${_p_a_r_a_m_e_t_e_r//_p_a_t_t_e_r_n//_s_t_r_i_n_g}								       ${_p_a_r_a_m_e_t_e_r//_p_a_t_t_e_r_n//_s_t_r_i_n_g}
              The _p_a_t_t_e_r_n is expanded to produce a pattern just as in pathname		      |	              PPaatttteerrnn ssuubbssttiittuuttiioonn.  The _p_a_t_t_e_r_n is expanded to produce a pat-
              expansion.   _P_a_r_a_m_e_t_e_r is expanded and the longest match of _p_a_t_-		      |	              tern just as in pathname expansion, _P_a_r_a_m_e_t_e_r  is  expanded  and
              _t_e_r_n against its value is replaced  with  _s_t_r_i_n_g.   If  Ipattern		      |	              the  longest match of _p_a_t_t_e_r_n against its value is replaced with
              _b_e_g_i_n_s  _w_i_t_h //_, _a_l_l _m_a_t_c_h_e_s _o_f _p_a_t_t_e_r_n _a_r_e _r_e_p_l_a_c_e_d _w_i_t_h _s_t_r_i_n_g_.		      |	              _s_t_r_i_n_g.  The match is performed using the rules described  under
              _N_o_r_m_a_l_l_y _o_n_l_y _t_h_e _f_i_r_s_t _m_a_t_c_h _i_s _r_e_p_l_a_c_e_d_.   _I_f  _p_a_t_t_e_r_n  _b_e_g_i_n_s		      |	              PPaatttteerrnn  MMaattcchhiinngg  below.  If _p_a_t_t_e_r_n begins with //, all matches
              _w_i_t_h  ##_, _i_t _m_u_s_t _m_a_t_c_h _a_t _t_h_e _b_e_g_i_n_n_i_n_g _o_f _t_h_e _e_x_p_a_n_d_e_d _v_a_l_u_e _o_f		      |	              of _p_a_t_t_e_r_n are replaced with _s_t_r_i_n_g.  Normally  only  the  first
              _p_a_r_a_m_e_t_e_r_.  _I_f _p_a_t_t_e_r_n _b_e_g_i_n_s _w_i_t_h %%_, _i_t _m_u_s_t _m_a_t_c_h _a_t  _t_h_e  _e_n_d		      |	              match  is  replaced.  If _p_a_t_t_e_r_n begins with ##, it must match at
              _o_f  _t_h_e _e_x_p_a_n_d_e_d _v_a_l_u_e _o_f _p_a_r_a_m_e_t_e_r_.  _I_f _s_t_r_i_n_g _i_s _n_u_l_l_, _m_a_t_c_h_e_s		      |	              the beginning of the expanded value of  _p_a_r_a_m_e_t_e_r.   If  _p_a_t_t_e_r_n
              _o_f _p_a_t_t_e_r_n _a_r_e _d_e_l_e_t_e_d _a_n_d _t_h_e // _f_o_l_l_o_w_i_n_g _p_a_t_t_e_r_n _m_a_y _b_e  _o_m_i_t_-		      |	              begins with %%, it must match at the end of the expanded value of
              _t_e_d_.   _I_f  _p_a_r_a_m_e_t_e_r  is  @@  or **, the substitution operation is		      |	              _p_a_r_a_m_e_t_e_r.  If _s_t_r_i_n_g is null, matches of  _p_a_t_t_e_r_n  are  deleted
              applied to each positional parameter in turn, and the  expansion		      |	              and  the // following _p_a_t_t_e_r_n may be omitted.  If the nnooccaasseemmaattcchh
              is  the  resultant list.  If _p_a_r_a_m_e_t_e_r is an array variable sub-		      |	              shell option is enabled, the match is performed  without  regard
              scripted with @@ or **, the substitution operation is  applied  to		      |	              to  the  case of alphabetic characters.  If _p_a_r_a_m_e_t_e_r is @@ or **,
              each  member  of  the  array  in  turn, and the expansion is the		      |	              the substitution operation is applied to each positional parame-
											      >	              ter in turn, and the expansion is the resultant list.  If _p_a_r_a_m_-
											      >	              _e_t_e_r is an array variable subscripted with @@ or **, the substitu-
											      >	              tion  operation  is applied to each member of the array in turn,
											      >	              and the expansion is the resultant list.
											      >
											      >	       ${_p_a_r_a_m_e_t_e_r^^_p_a_t_t_e_r_n}
											      >	       ${_p_a_r_a_m_e_t_e_r^^^^_p_a_t_t_e_r_n}
											      >	       ${_p_a_r_a_m_e_t_e_r,,_p_a_t_t_e_r_n}
											      >	       ${_p_a_r_a_m_e_t_e_r,,,,_p_a_t_t_e_r_n}
											      >	              CCaassee mmooddiiffiiccaattiioonn.  This expansion modifies the case  of  alpha-
											      >	              betic  characters in _p_a_r_a_m_e_t_e_r.  The _p_a_t_t_e_r_n is expanded to pro-
											      >	              duce a pattern just as in pathname expansion.  Each character in
											      >	              the  expanded value of _p_a_r_a_m_e_t_e_r is tested against _p_a_t_t_e_r_n, and,
											      >	              if it matches the pattern, its case is converted.   The  pattern
											      >	              should  not  attempt  to  match  more than one character.  The ^^
											      >	              operator converts lowercase letters matching _p_a_t_t_e_r_n  to  upper-
											      >	              case; the ,, operator converts matching uppercase letters to low-
											      >	              ercase.  The ^^^^ and ,,,, expansions convert each matched character
											      >	              in  the expanded value; the ^^ and ,, expansions match and convert
											      >	              only the first character in the expanded value.  If  _p_a_t_t_e_r_n  is
											      >	              omitted,  it is treated like a ??, which matches every character.
											      >	              If _p_a_r_a_m_e_t_e_r is @@ or  **,  the  case  modification  operation  is
											      >	              applied  to each positional parameter in turn, and the expansion
											      >	              is the resultant list.  If _p_a_r_a_m_e_t_e_r is an array  variable  sub-
											      >	              scripted with @@ or **, the case modification operation is applied
											      >	              to each member of the array in turn, and the  expansion  is  the
              resultant list.									              resultant list.

											      >	       ${_p_a_r_a_m_e_t_e_r@@_o_p_e_r_a_t_o_r}
											      >	              PPaarraammeetteerr ttrraannssffoorrmmaattiioonn.  The expansion is either a transforma-
											      >	              tion of the value of _p_a_r_a_m_e_t_e_r or  information  about  _p_a_r_a_m_e_t_e_r
											      >	              itself,  depending on the value of _o_p_e_r_a_t_o_r.  Each _o_p_e_r_a_t_o_r is a
											      >	              single letter:
											      >
											      >	              QQ      The expansion is a string that is the value of  _p_a_r_a_m_e_t_e_r
											      >	                     quoted in a format that can be reused as input.
											      >	              EE      The  expansion is a string that is the value of _p_a_r_a_m_e_t_e_r
											      >	                     with backslash escape  sequences  expanded  as  with  the
											      >	                     $$''......'' quoting mechanism.
											      >	              PP      The expansion is a string that is the result of expanding
											      >	                     the value of _p_a_r_a_m_e_t_e_r as if it were a prompt string (see
											      >	                     PPRROOMMPPTTIINNGG below).
											      >	              AA      The  expansion  is  a string in the form of an assignment
											      >	                     statement or ddeeccllaarree command  that,  if  evaluated,  will
											      >	                     recreate _p_a_r_a_m_e_t_e_r with its attributes and value.
											      >	              aa      The  expansion is a string consisting of flag values rep-
											      >	                     resenting _p_a_r_a_m_e_t_e_r's attributes.
											      >
											      >	              If _p_a_r_a_m_e_t_e_r is @@ or **, the operation is applied to  each  posi-
											      >	              tional  parameter  in  turn,  and the expansion is the resultant
											      >	              list.  If _p_a_r_a_m_e_t_e_r is an array variable subscripted with  @@  or
											      >	              **, the operation is applied to each member of the array in turn,
											      >	              and the expansion is the resultant list.
											      >
											      >	              The result of the expansion is subject  to  word  splitting  and
											      >	              pathname expansion as described below.
											      >
   CCoommmmaanndd SSuubbssttiittuuttiioonn										   CCoommmmaanndd SSuubbssttiittuuttiioonn
       _C_o_m_m_a_n_d _s_u_b_s_t_i_t_u_t_i_o_n allows the output of a command to replace the com-			       _C_o_m_m_a_n_d _s_u_b_s_t_i_t_u_t_i_o_n allows the output of a command to replace the com-
       mand name.  There are two forms:								       mand name.  There are two forms:

											      <
              $$((_c_o_m_m_a_n_d))									              $$((_c_o_m_m_a_n_d))
       or											       or
              ``_c_o_m_m_a_n_d``										              ``_c_o_m_m_a_n_d``

       BBaasshh performs the expansion by executing _c_o_m_m_a_n_d and replacing the com-		      |	       BBaasshh performs the expansion by executing _c_o_m_m_a_n_d in a subshell environ-
       mand substitution with the standard output of  the  command,  with  any		      |	       ment and replacing the command substitution with the standard output of
       trailing newlines deleted.  Embedded newlines are not deleted, but they		      |	       the command, with any trailing newlines deleted.  Embedded newlines are
       may be removed during word splitting.  The command  substitution  $$((ccaatt		      |	       not  deleted,  but they may be removed during word splitting.  The com-
       _f_i_l_e)) can be replaced by the equivalent but faster $$((<< _f_i_l_e)).			      |	       mand substitution $$((ccaatt _f_i_l_e)) can be replaced  by  the  equivalent  but
											      >	       faster $$((<< _f_i_l_e)).

       When  the  old-style  backquote form of substitution is used, backslash			       When  the  old-style  backquote form of substitution is used, backslash
       retains its literal meaning except when followed by $$, ``,  or  \\.   The			       retains its literal meaning except when followed by $$, ``,  or  \\.   The
       first backquote not preceded by a backslash terminates the command sub-			       first backquote not preceded by a backslash terminates the command sub-
       stitution.  When using the $(_c_o_m_m_a_n_d) form, all characters between  the			       stitution.  When using the $(_c_o_m_m_a_n_d) form, all characters between  the
       parentheses make up the command; none are treated specially.				       parentheses make up the command; none are treated specially.

       Command substitutions may be nested.  To nest when using the backquoted			       Command substitutions may be nested.  To nest when using the backquoted
       form, escape the inner backquotes with backslashes.					       form, escape the inner backquotes with backslashes.

       If the substitution appears within double quotes,  word  splitting  and			       If the substitution appears within double quotes,  word  splitting  and
       pathname expansion are not performed on the results.					       pathname expansion are not performed on the results.

   AArriitthhmmeettiicc EExxppaannssiioonn										   AArriitthhmmeettiicc EExxppaannssiioonn
       Arithmetic  expansion allows the evaluation of an arithmetic expression			       Arithmetic  expansion allows the evaluation of an arithmetic expression
       and the substitution of the result.  The format for  arithmetic  expan-			       and the substitution of the result.  The format for  arithmetic  expan-
       sion is:											       sion is:

              $$((((_e_x_p_r_e_s_s_i_o_n))))									              $$((((_e_x_p_r_e_s_s_i_o_n))))

       The  _e_x_p_r_e_s_s_i_o_n  is  treated  as if it were within double quotes, but a			       The  _e_x_p_r_e_s_s_i_o_n  is  treated  as if it were within double quotes, but a
       double quote inside the parentheses  is  not  treated  specially.   All			       double quote inside the parentheses  is  not  treated  specially.   All
       tokens in the expression undergo parameter expansion, string expansion,		      |	       tokens in the expression undergo parameter and variable expansion, com-
       command substitution, and quote removal.  Arithmetic expansions may  be		      |	       mand substitution, and quote removal.  The result  is  treated  as  the
											      >	       arithmetic  expression  to  be evaluated.  Arithmetic expansions may be
       nested.											       nested.

       The  evaluation  is performed according to the rules listed below under		      |	       The evaluation is performed according to the rules listed  below  under
       AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN.  If _e_x_p_r_e_s_s_i_o_n is invalid, bbaasshh prints a message			       AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN.  If _e_x_p_r_e_s_s_i_o_n is invalid, bbaasshh prints a message
       indicating failure and no substitution occurs.						       indicating failure and no substitution occurs.

   PPrroocceessss SSuubbssttiittuuttiioonn										   PPrroocceessss SSuubbssttiittuuttiioonn
       _P_r_o_c_e_s_s  _s_u_b_s_t_i_t_u_t_i_o_n  is supported on systems that support named pipes		      |	       _P_r_o_c_e_s_s _s_u_b_s_t_i_t_u_t_i_o_n allows a process's input or output to be  referred
       (_F_I_F_O_s) or the //ddeevv//ffdd method of naming open files.  It takes the  form		      |	       to  using  a  filename.   It takes the form of <<((_l_i_s_t)) or >>((_l_i_s_t)).  The
       of  <<((_l_i_s_t)) or >>((_l_i_s_t)).  The process _l_i_s_t is run with its input or out-		      |	       process _l_i_s_t is run asynchronously, and its input or output appears  as
       put connected to a _F_I_F_O or some file in //ddeevv//ffdd.  The name of this file		      |	       a filename.  This filename is passed as an argument to the current com-
       is  passed  as  an argument to the current command as the result of the		      |	       mand as the result of the expansion.  If  the  >>((_l_i_s_t))  form  is  used,
       expansion.  If the >>((_l_i_s_t)) form is used, writing to the file will  pro-		      |	       writing  to  the file will provide input for _l_i_s_t.  If the <<((_l_i_s_t)) form
       vide  input  for _l_i_s_t.  If the <<((_l_i_s_t)) form is used, the file passed as		      |	       is used, the file passed as an argument should be read  to  obtain  the
       an argument should be read to obtain the output of _l_i_s_t.				      |	       output of _l_i_s_t.  Process substitution is supported on systems that sup-
											      >	       port named pipes (_F_I_F_O_s) or the //ddeevv//ffdd method of naming open files.

       When available, process substitution is performed  simultaneously  with			       When available, process substitution is performed  simultaneously  with
       parameter  and variable expansion, command substitution, and arithmetic			       parameter  and variable expansion, command substitution, and arithmetic
       expansion.										       expansion.

   WWoorrdd SSpplliittttiinngg										   WWoorrdd SSpplliittttiinngg
       The shell scans the results of parameter expansion,  command  substitu-			       The shell scans the results of parameter expansion,  command  substitu-
       tion,  and arithmetic expansion that did not occur within double quotes			       tion,  and arithmetic expansion that did not occur within double quotes
       for _w_o_r_d _s_p_l_i_t_t_i_n_g.									       for _w_o_r_d _s_p_l_i_t_t_i_n_g.

       The shell treats each character of IIFFSS as a delimiter, and  splits  the			       The shell treats each character of IIFFSS as a delimiter, and  splits  the
       results of the other expansions into words on these characters.  If IIFFSS		      |	       results  of  the  other expansions into words using these characters as
       is unset, or its value is exactly <<ssppaaccee>><<ttaabb>><<nneewwlliinnee>>,  the  default,		      |	       field  terminators.   If  IIFFSS  is  unset,  or  its  value  is   exactly
       then  any  sequence  of IIFFSS characters serves to delimit words.  If IIFFSS		      |	       <<ssppaaccee>><<ttaabb>><<nneewwlliinnee>>,  the  default, then sequences of <<ssppaaccee>>, <<ttaabb>>,
       has a value other than the default, then sequences  of  the  whitespace		      |	       and <<nneewwlliinnee>> at the beginning and end of the results of  the  previous
       characters  ssppaaccee  and  ttaabb are ignored at the beginning and end of the		      |	       expansions  are  ignored, and any sequence of IIFFSS characters not at the
       word, as long as the whitespace character is in the value  of  IIFFSS  (an		      |	       beginning or end serves to delimit words.  If IIFFSS  has  a  value  other
       IIFFSS whitespace character).  Any character in IIFFSS that is not IIFFSS white-		      |	       than  the  default,  then sequences of the whitespace characters ssppaaccee,
       space, along with any adjacent IIFFSS whitespace  characters,  delimits  a		      |	       ttaabb, and nneewwlliinnee are ignored at the beginning and end of the  word,  as
       field.   A  sequence  of IIFFSS whitespace characters is also treated as a		      |	       long  as the whitespace character is in the value of IIFFSS (an IIFFSS white-
       delimiter.  If the value of IIFFSS is null, no word splitting occurs.		      |	       space character).  Any character in IIFFSS that  is  not  IIFFSS  whitespace,
											      |	       along with any adjacent IIFFSS whitespace characters, delimits a field.  A
       Explicit null arguments ("""" or '''')  are  retained.   Unquoted  implicit		      |	       sequence of IIFFSS whitespace characters is also treated as  a  delimiter.
       null arguments, resulting from the expansion of parameters that have no		      |	       If the value of IIFFSS is null, no word splitting occurs.
       values, are removed.  If a parameter with no value is  expanded  within		      |
       double quotes, a null argument results and is retained.				      |	       Explicit  null arguments ("""" or '''') are retained and passed to commands
											      >	       as empty strings.  Unquoted implicit null arguments, resulting from the
											      >	       expansion of parameters that have no values, are removed.  If a parame-
											      >	       ter with no value is expanded within double  quotes,  a  null  argument
											      >	       results  and  is  retained  and passed to a command as an empty string.
											      >	       When a quoted null argument appears as part of a word  whose  expansion
											      >	       is  non-null,  the  null  argument  is removed.  That is, the word -d''
											      >	       becomes -d after word splitting and null argument removal.

       Note that if no expansion occurs, no splitting is performed.				       Note that if no expansion occurs, no splitting is performed.

   PPaatthhnnaammee EExxppaannssiioonn										   PPaatthhnnaammee EExxppaannssiioonn
       After  word  splitting,  unless  the --ff option has been set, bbaasshh scans		      |	       After word splitting, unless the --ff option has  been  set,  bbaasshh  scans
       each word for the characters **, ??, and [[.  If one of  these  characters		      |	       each  word  for the characters **, ??, and [[.  If one of these characters
       appears,  then  the word is regarded as a _p_a_t_t_e_r_n, and replaced with an		      |	       appears, then the word is regarded as a _p_a_t_t_e_r_n, and replaced  with  an
       alphabetically sorted list of file names matching the pattern.   If  no		      |	       alphabetically  sorted list of filenames matching the pattern (see PPaatt--
       matching  file  names  are found, and the shell option nnuullllgglloobb is dis-		      |	       tteerrnn MMaattcchhiinngg below).  If no matching  filenames  are  found,  and  the
       abled, the word is left unchanged.  If the nnuullllgglloobb option is set,  and		      |	       shell  option  nnuullllgglloobb is not enabled, the word is left unchanged.  If
       no  matches  are  found,  the  word  is removed.  If the ffaaiillgglloobb shell		      |	       the nnuullllgglloobb option is set, and no  matches  are  found,  the  word  is
       option is set, and no matches are found, an error  message  is  printed		      |	       removed.   If  the  ffaaiillgglloobb  shell  option  is set, and no matches are
       and  the  command  is  not executed.  If the shell option nnooccaasseegglloobb is		      |	       found, an error message is printed and the command is not executed.  If
       enabled, the match is performed without regard to the  case  of  alpha-		      |	       the  shell option nnooccaasseegglloobb is enabled, the match is performed without
       betic  characters.   When a pattern is used for pathname expansion, the		      |	       regard to the case of alphabetic characters.  When a  pattern  is  used
       character ````..''''  at the start of a  name  or  immediately  following  a		      |	       for  pathname expansion, the character ````..''''  at the start of a name or
       slash  must  be  matched explicitly, unless the shell option ddoottgglloobb is		      |	       immediately following a slash must be matched  explicitly,  unless  the
       set.  When matching a pathname, the  slash  character  must  always  be		      |	       shell  option  ddoottgglloobb  is  set.  The filenames ````..''''  and ````....''''  must
       matched  explicitly.   In  other  cases,  the  ````..''''   character is not		      |	       always be matched explicitly, even if ddoottgglloobb is set.  In other  cases,
       treated specially.  See the description  of  sshhoopptt  below  under  SSHHEELLLL		      |	       the  ````..''''   character is not treated specially.  When matching a path-
       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  for a description of the nnooccaasseegglloobb, nnuullllgglloobb, ffaaiill--		      |	       name, the slash character must always be matched explicitly by a  slash
       gglloobb, and ddoottgglloobb shell options.							      |	       in  the  pattern, but in other matching contexts it can be matched by a
											      |	       special pattern character as described below  under  PPaatttteerrnn  MMaattcchhiinngg.
       The GGLLOOBBIIGGNNOORREE shell variable may be used to restrict the set  of  file		      |	       See  the  description of sshhoopptt below under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS for a
       names  matching  a  _p_a_t_t_e_r_n.   If GGLLOOBBIIGGNNOORREE is set, each matching file		      |	       description of the nnooccaasseegglloobb, nnuullllgglloobb, ffaaiillgglloobb,  and  ddoottgglloobb  shell
       name that also matches one of the patterns  in  GGLLOOBBIIGGNNOORREE  is  removed		      |	       options.
       from the list of matches.  The file names ````..''''  and ````....''''  are always		      |
       ignored when GGLLOOBBIIGGNNOORREE is set and not null.  However, setting  GGLLOOBBIIGG--		      |	       The  GGLLOOBBIIGGNNOORREE  shell variable may be used to restrict the set of file
       NNOORREE  to  a non-null value has the effect of enabling the ddoottgglloobb shell		      |	       names matching a _p_a_t_t_e_r_n.  If GGLLOOBBIIGGNNOORREE is  set,  each  matching  file
       option, so all other file names beginning with a ````..''''  will match.  To		      |	       name  that  also  matches  one of the patterns in GGLLOOBBIIGGNNOORREE is removed
       get  the  old  behavior  of ignoring file names beginning with a ````..'''',		      |	       from the list of matches.  If the nnooccaasseegglloobb option is set, the  match-
       make ````..**''''  one of the patterns in GGLLOOBBIIGGNNOORREE.  The ddoottgglloobb option  is		      |	       ing  against  the patterns in GGLLOOBBIIGGNNOORREE is performed without regard to
       disabled when GGLLOOBBIIGGNNOORREE is unset.						      |	       case.  The filenames ````..''''  and ````....''''  are always ignored when GGLLOOBBIIGG--
											      >	       NNOORREE  is  set  and not null.  However, setting GGLLOOBBIIGGNNOORREE to a non-null
											      >	       value has the effect of enabling the ddoottgglloobb shell option, so all other
											      >	       filenames  beginning with a ````..''''  will match.  To get the old behavior
											      >	       of ignoring filenames beginning with a ````..'''', make ````..**''''  one  of  the
											      >	       patterns in GGLLOOBBIIGGNNOORREE.  The ddoottgglloobb option is disabled when GGLLOOBBIIGGNNOORREE
											      >	       is unset.  The pattern matching honors the setting of the eexxttgglloobb shell
											      >	       option.

       PPaatttteerrnn MMaattcchhiinngg										       PPaatttteerrnn MMaattcchhiinngg

       Any character that appears in a pattern, other than the special pattern			       Any character that appears in a pattern, other than the special pattern
       characters described below, matches itself.  The NUL character may  not			       characters described below, matches itself.  The NUL character may  not
       occur  in  a pattern.  A backslash escapes the following character; the			       occur  in  a pattern.  A backslash escapes the following character; the
       escaping backslash is discarded when  matching.   The  special  pattern			       escaping backslash is discarded when  matching.   The  special  pattern
       characters must be quoted if they are to be matched literally.				       characters must be quoted if they are to be matched literally.

       The special pattern characters have the following meanings:				       The special pattern characters have the following meanings:

       **      Matches any string, including the null string.				      |	              **      Matches  any string, including the null string.  When the
       ??      Matches any single character.						      |	                     gglloobbssttaarr shell option is enabled, and  **  is  used  in  a
       [[......]]  Matches  any  one of the enclosed characters.  A pair of charac-		      |	                     pathname  expansion  context,  two  adjacent **s used as a
              ters separated by a hyphen denotes a _r_a_n_g_e _e_x_p_r_e_s_s_i_o_n; any char-		      |	                     single pattern will match all  files  and  zero  or  more
              acter  that sorts between those two characters, inclusive, using		      |	                     directories  and subdirectories.  If followed by a //, two
              the current locale's collating sequence and  character  set,  is		      |	                     adjacent **s will match only directories  and  subdirecto-
              matched.   If the first character following the [[ is a !!  or a ^^		      |	                     ries.
              then any character not enclosed is matched.  The  sorting  order		      |	              ??      Matches any single character.
              of  characters in range expressions is determined by the current		      |	              [[......]]  Matches  any  one  of the enclosed characters.  A pair of
              locale and the value of the LLCC__CCOOLLLLAATTEE shell variable,  if  set.		      |	                     characters separated by a hyphen denotes a _r_a_n_g_e  _e_x_p_r_e_s_-
              A  -- may be matched by including it as the first or last charac-		      |	                     _s_i_o_n;  any character that falls between those two charac-
              ter in the set.  A ]] may be matched by including it as the first		      |	                     ters, inclusive, using  the  current  locale's  collating
              character in the set.							      |	                     sequence  and  character  set,  is matched.  If the first
											      |	                     character following the [[ is a !!  or a ^^ then any charac-
              Within  [[  and  ]],  _c_h_a_r_a_c_t_e_r _c_l_a_s_s_e_s can be specified using the		      |	                     ter  not enclosed is matched.  The sorting order of char-
              syntax [[::_c_l_a_s_s::]], where _c_l_a_s_s is one of  the  following  classes		      |	                     acters in range expressions is determined by the  current
              defined in the POSIX standard:						      |	                     locale  and  the values of the LLCC__CCOOLLLLAATTEE or LLCC__AALLLL shell
              aallnnuumm  aallpphhaa  aasscciiii  bbllaannkk  ccnnttrrll  ddiiggiitt ggrraapphh lloowweerr pprriinntt ppuunncctt		      |	                     variables, if set.  To obtain the traditional interpreta-
              ssppaaccee uuppppeerr wwoorrdd xxddiiggiitt							      |	                     tion  of  range expressions, where [[aa--dd]] is equivalent to
              A character class matches any character belonging to that class.		      |	                     [[aabbccdd]], set value of the LLCC__AALLLL shell variable to  CC,  or
              The  wwoorrdd character class matches letters, digits, and the char-		      |	                     enable  the  gglloobbaasscciiiirraannggeess  shell  option.   A -- may be
              acter _.									      |	                     matched by including it as the first or last character in
											      |	                     the set.  A ]] may be matched by including it as the first
              Within [[ and ]], an _e_q_u_i_v_a_l_e_n_c_e _c_l_a_s_s can be specified using  the		      |	                     character in the set.
              syntax  [[==_c==]], which matches all characters with the same colla-		      |
              tion weight (as defined by the current locale) as the  character		      |	                     Within [[ and ]], _c_h_a_r_a_c_t_e_r _c_l_a_s_s_e_s can be specified  using
              _c.									      |	                     the syntax [[::_c_l_a_s_s::]], where _c_l_a_s_s is one of the following
											      >	                     classes defined in the POSIX standard:
											      >	                     aallnnuumm aallpphhaa aasscciiii bbllaannkk ccnnttrrll  ddiiggiitt  ggrraapphh  lloowweerr  pprriinntt
											      >	                     ppuunncctt ssppaaccee uuppppeerr wwoorrdd xxddiiggiitt
											      >	                     A character class matches any character belonging to that
											      >	                     class.  The wwoorrdd character class matches letters, digits,
											      >	                     and the character _.
											      >
											      >	                     Within  [[  and  ]],  an _e_q_u_i_v_a_l_e_n_c_e _c_l_a_s_s can be specified
											      >	                     using the syntax [[==_c==]], which matches all characters with
											      >	                     the  same  collation  weight  (as  defined by the current
											      >	                     locale) as the character _c.

              Within [[ and ]], the syntax [[.._s_y_m_b_o_l..]] matches the collating sym-		      |	                     Within [[ and ]], the syntax [[.._s_y_m_b_o_l..]] matches the collat-
              bol _s_y_m_b_o_l.								      |	                     ing symbol _s_y_m_b_o_l.

       If the eexxttgglloobb shell option is enabled using the sshhoopptt builtin, several			       If the eexxttgglloobb shell option is enabled using the sshhoopptt builtin, several
       extended  pattern  matching operators are recognized.  In the following		      |	       extended pattern matching operators are recognized.  In  the  following
       description, a _p_a_t_t_e_r_n_-_l_i_s_t is a list of one or more patterns separated			       description, a _p_a_t_t_e_r_n_-_l_i_s_t is a list of one or more patterns separated
       by a ||.  Composite patterns may be formed using one or more of the fol-			       by a ||.  Composite patterns may be formed using one or more of the fol-
       lowing sub-patterns:									       lowing sub-patterns:

              ??((_p_a_t_t_e_r_n_-_l_i_s_t))									              ??((_p_a_t_t_e_r_n_-_l_i_s_t))
                     Matches zero or one occurrence of the given patterns			                     Matches zero or one occurrence of the given patterns
              **((_p_a_t_t_e_r_n_-_l_i_s_t))									              **((_p_a_t_t_e_r_n_-_l_i_s_t))
                     Matches zero or more occurrences of the given patterns			                     Matches zero or more occurrences of the given patterns
              ++((_p_a_t_t_e_r_n_-_l_i_s_t))									              ++((_p_a_t_t_e_r_n_-_l_i_s_t))
                     Matches one or more occurrences of the given patterns			                     Matches one or more occurrences of the given patterns
              @@((_p_a_t_t_e_r_n_-_l_i_s_t))									              @@((_p_a_t_t_e_r_n_-_l_i_s_t))
                     Matches one of the given patterns						                     Matches one of the given patterns
              !!((_p_a_t_t_e_r_n_-_l_i_s_t))									              !!((_p_a_t_t_e_r_n_-_l_i_s_t))
                     Matches anything except one of the given patterns				                     Matches anything except one of the given patterns

											      >	       Complicated  extended  pattern  matching  against long strings is slow,
											      >	       especially when the patterns contain alternations and the strings  con-
											      >	       tain multiple matches.  Using separate matches against shorter strings,
											      >	       or using arrays of strings instead of a  single  long  string,  may  be
											      >	       faster.
											      >
   QQuuoottee RReemmoovvaall										   QQuuoottee RReemmoovvaall
       After the preceding expansions, all unquoted occurrences of the charac-			       After the preceding expansions, all unquoted occurrences of the charac-
       ters  \\,  '', and "" that did not result from one of the above expansions		      |	       ters \\, '', and "" that did not result from one of the  above  expansions
       are removed.										       are removed.

RREEDDIIRREECCTTIIOONN											RREEDDIIRREECCTTIIOONN
       Before a command is executed, its input and output  may  be  _r_e_d_i_r_e_c_t_e_d		      |	       Before  a  command  is executed, its input and output may be _r_e_d_i_r_e_c_t_e_d
       using  a  special  notation  interpreted by the shell.  Redirection may		      |	       using a special notation interpreted by the shell.  Redirection  allows
       also be used to open and close files for the  current  shell  execution		      |	       commands'  file handles to be duplicated, opened, closed, made to refer
       environment.  The following redirection operators may precede or appear		      |	       to different files, and can change the files the command reads from and
       anywhere within a _s_i_m_p_l_e _c_o_m_m_a_n_d or may follow a _c_o_m_m_a_n_d.  Redirections		      |	       writes  to.  Redirection may also be used to modify file handles in the
       are processed in the order they appear, from left to right.			      |	       current shell execution environment.  The following redirection  opera-
											      |	       tors may precede or appear anywhere within a _s_i_m_p_l_e _c_o_m_m_a_n_d or may fol-
       In  the  following descriptions, if the file descriptor number is omit-		      |	       low a _c_o_m_m_a_n_d.  Redirections are processed in the  order  they  appear,
       ted, and the first character of the redirection operator is <<, the  re-		      |	       from left to right.
       direction  refers  to  the  standard input (file descriptor 0).  If the		      |
       first character of the  redirection  operator  is  >>,  the  redirection		      |	       Each  redirection  that may be preceded by a file descriptor number may
											      >	       instead be preceded by a word of the form {_v_a_r_n_a_m_e}.  In this case, for
											      >	       each redirection operator except >&- and <&-, the shell will allocate a
											      >	       file descriptor greater than or equal to 10 and assign it  to  _v_a_r_n_a_m_e.
											      >	       If  >&-  or  <&- is preceded by {_v_a_r_n_a_m_e}, the value of _v_a_r_n_a_m_e defines
											      >	       the file descriptor to close.  If {_v_a_r_n_a_m_e} is supplied, the  redirect-
											      >	       ion  persists  beyond the scope of the command, allowing the shell pro-
											      >	       grammer to manage the file descriptor himself.
											      >
											      >	       In the following descriptions, if the file descriptor number  is  omit-
											      >	       ted,  and the first character of the redirection operator is <<, the re-
											      >	       direction refers to the standard input (file  descriptor  0).   If  the
											      >	       first  character  of  the  redirection  operator  is >>, the redirection
       refers to the standard output (file descriptor 1).					       refers to the standard output (file descriptor 1).

       The  word  following the redirection operator in the following descrip-		      |	       The word following the redirection operator in the  following  descrip-
       tions, unless otherwise noted, is subjected to brace  expansion,  tilde		      |	       tions,  unless  otherwise noted, is subjected to brace expansion, tilde
       expansion, parameter expansion, command substitution, arithmetic expan-		      |	       expansion, parameter  and  variable  expansion,  command  substitution,
       sion, quote removal, pathname expansion, and  word  splitting.   If  it		      |	       arithmetic  expansion,  quote  removal,  pathname  expansion,  and word
       expands to more than one word, bbaasshh reports an error.				      |	       splitting.  If it expands to more than one word, bbaasshh reports an error.

       Note  that  the order of redirections is significant.  For example, the			       Note  that  the order of redirections is significant.  For example, the
       command											       command

              ls >> dirlist 2>>&&1									              ls >> dirlist 2>>&&1

       directs both standard output and standard error to  the  file  _d_i_r_l_i_s_t,			       directs both standard output and standard error to  the  file  _d_i_r_l_i_s_t,
       while the command									       while the command

              ls 2>>&&1 >> dirlist									              ls 2>>&&1 >> dirlist

       directs  only the standard output to file _d_i_r_l_i_s_t, because the standard			       directs  only the standard output to file _d_i_r_l_i_s_t, because the standard
       error was duplicated as standard output before the standard output  was		      |	       error was duplicated from the standard output before the standard  out-
       redirected to _d_i_r_l_i_s_t.								      |	       put was redirected to _d_i_r_l_i_s_t.

       BBaasshh handles several filenames specially when they are used in redirec-			       BBaasshh handles several filenames specially when they are used in redirec-
       tions, as described in the following table:					      |	       tions, as described in the following table.  If the operating system on
											      >	       which bbaasshh is running provides these special files, bash will use them;
											      >	       otherwise it will emulate them internally with the  behavior  described
											      >	       below.

              //ddeevv//ffdd//_f_d									              //ddeevv//ffdd//_f_d
                     If _f_d is a valid integer, file descriptor  _f_d  is  dupli-		      |	                     If  _f_d  is  a valid integer, file descriptor _f_d is dupli-
                     cated.									                     cated.
              //ddeevv//ssttddiinn									              //ddeevv//ssttddiinn
                     File descriptor 0 is duplicated.						                     File descriptor 0 is duplicated.
              //ddeevv//ssttddoouutt									              //ddeevv//ssttddoouutt
                     File descriptor 1 is duplicated.						                     File descriptor 1 is duplicated.
              //ddeevv//ssttddeerrrr									              //ddeevv//ssttddeerrrr
                     File descriptor 2 is duplicated.						                     File descriptor 2 is duplicated.
              //ddeevv//ttccpp//_h_o_s_t//_p_o_r_t								              //ddeevv//ttccpp//_h_o_s_t//_p_o_r_t
                     If _h_o_s_t is a valid hostname or Internet address, and _p_o_r_t			                     If _h_o_s_t is a valid hostname or Internet address, and _p_o_r_t
                     is an integer port number or service name, bbaasshh  attempts		      |	                     is  an integer port number or service name, bbaasshh attempts
                     to open a TCP connection to the corresponding socket.		      |	                     to open the corresponding TCP socket.
              //ddeevv//uuddpp//_h_o_s_t//_p_o_r_t								              //ddeevv//uuddpp//_h_o_s_t//_p_o_r_t
                     If _h_o_s_t is a valid hostname or Internet address, and _p_o_r_t			                     If _h_o_s_t is a valid hostname or Internet address, and _p_o_r_t
                     is an integer port number or service name, bbaasshh  attempts		      |	                     is  an integer port number or service name, bbaasshh attempts
                     to open a UDP connection to the corresponding socket.		      |	                     to open the corresponding UDP socket.

       A failure to open or create a file causes the redirection to fail.			       A failure to open or create a file causes the redirection to fail.

       Redirections  using file descriptors greater than 9 should be used with		      |	       Redirections using file descriptors greater than 9 should be used  with
       care, as they may conflict with file descriptors the shell uses  inter-		      |	       care,  as they may conflict with file descriptors the shell uses inter-
       nally.											       nally.

   RReeddiirreeccttiinngg IInnppuutt										   RReeddiirreeccttiinngg IInnppuutt
       Redirection of input causes the file whose name results from the expan-			       Redirection of input causes the file whose name results from the expan-
       sion of _w_o_r_d to be opened for reading on  file  descriptor  _n,  or  the		      |	       sion  of  _w_o_r_d  to  be  opened for reading on file descriptor _n, or the
       standard input (file descriptor 0) if _n is not specified.				       standard input (file descriptor 0) if _n is not specified.

       The general format for redirecting input is:						       The general format for redirecting input is:

              [_n]<<_w_o_r_d										              [_n]<<_w_o_r_d

   RReeddiirreeccttiinngg OOuuttppuutt										   RReeddiirreeccttiinngg OOuuttppuutt
       Redirection  of  output  causes  the  file  whose name results from the		      |	       Redirection of output causes the  file  whose  name  results  from  the
       expansion of _w_o_r_d to be opened for writing on file descriptor _n, or the			       expansion of _w_o_r_d to be opened for writing on file descriptor _n, or the
       standard output (file descriptor 1) if _n is not specified.  If the file			       standard output (file descriptor 1) if _n is not specified.  If the file
       does not exist it is created; if it does exist it is truncated to  zero		      |	       does  not exist it is created; if it does exist it is truncated to zero
       size.											       size.

       The general format for redirecting output is:						       The general format for redirecting output is:

              [_n]>>_w_o_r_d										              [_n]>>_w_o_r_d

       If  the  redirection operator is >>, and the nnoocclloobbbbeerr option to the sseett		      |	       If the redirection operator is >>, and the nnoocclloobbbbeerr option to  the  sseett
       builtin has been enabled, the redirection will fail if the  file  whose		      |	       builtin  has  been enabled, the redirection will fail if the file whose
       name  results  from the expansion of _w_o_r_d exists and is a regular file.		      |	       name results from the expansion of _w_o_r_d exists and is a  regular  file.
       If the redirection operator is >>||, or the redirection operator is >> and			       If the redirection operator is >>||, or the redirection operator is >> and
       the nnoocclloobbbbeerr option to the sseett builtin command is not enabled, the re-			       the nnoocclloobbbbeerr option to the sseett builtin command is not enabled, the re-
       direction is attempted even if the file named by _w_o_r_d exists.				       direction is attempted even if the file named by _w_o_r_d exists.

   AAppppeennddiinngg RReeddiirreecctteedd OOuuttppuutt									   AAppppeennddiinngg RReeddiirreecctteedd OOuuttppuutt
       Redirection of output in  this  fashion  causes  the  file  whose  name		      |	       Redirection  of  output  in  this  fashion  causes  the file whose name
       results  from  the expansion of _w_o_r_d to be opened for appending on file		      |	       results from the expansion of _w_o_r_d to be opened for appending  on  file
       descriptor _n, or the standard output (file descriptor 1) if  _n  is  not		      |	       descriptor  _n,  or  the standard output (file descriptor 1) if _n is not
       specified.  If the file does not exist it is created.					       specified.  If the file does not exist it is created.

       The general format for appending output is:						       The general format for appending output is:

              [_n]>>>>_w_o_r_d										              [_n]>>>>_w_o_r_d


   RReeddiirreeccttiinngg SSttaannddaarrdd OOuuttppuutt aanndd SSttaannddaarrdd EErrrroorr						   RReeddiirreeccttiinngg SSttaannddaarrdd OOuuttppuutt aanndd SSttaannddaarrdd EErrrroorr
       BBaasshh  allows both the standard output (file descriptor 1) and the stan-		      |	       This construct allows both the standard output (file descriptor 1)  and
       dard error output (file descriptor 2) to  be  redirected  to  the  file		      |	       the  standard  error output (file descriptor 2) to be redirected to the
       whose name is the expansion of _w_o_r_d with this construct.				      |	       file whose name is the expansion of _w_o_r_d.

       There  are  two  formats  for  redirecting standard output and standard		      |	       There are two formats for  redirecting  standard  output  and  standard
       error:											       error:

              &&>>_w_o_r_d										              &&>>_w_o_r_d
       and											       and
              >>&&_w_o_r_d										              >>&&_w_o_r_d

       Of the two forms, the first is preferred.  This is semantically equiva-			       Of the two forms, the first is preferred.  This is semantically equiva-
       lent to											       lent to

              >>_w_o_r_d 2>>&&1									              >>_w_o_r_d 2>>&&1

											      >	       When using the second form, _w_o_r_d may not expand to a number or  --.   If
											      >	       it  does,  other  redirection  operators  apply  (see  DDuupplliiccaattiinngg FFiillee
											      >	       DDeessccrriippttoorrss below) for compatibility reasons.
											      >
											      >	   AAppppeennddiinngg SSttaannddaarrdd OOuuttppuutt aanndd SSttaannddaarrdd EErrrroorr
											      >	       This construct allows both the standard output (file descriptor 1)  and
											      >	       the  standard  error  output  (file descriptor 2) to be appended to the
											      >	       file whose name is the expansion of _w_o_r_d.
											      >
											      >	       The format for appending standard output and standard error is:
											      >
											      >	              &&>>>>_w_o_r_d
											      >
											      >	       This is semantically equivalent to
											      >
											      >	              >>>>_w_o_r_d 2>>&&1
											      >
											      >	       (see DDuupplliiccaattiinngg FFiillee DDeessccrriippttoorrss below).
											      >
   HHeerree DDooccuummeennttss										   HHeerree DDooccuummeennttss
       This  type  of  redirection  instructs the shell to read input from the		      |	       This type of redirection instructs the shell to  read  input  from  the
       current source until a line containing  only  _w_o_r_d  (with  no  trailing		      |	       current source until a line containing only _d_e_l_i_m_i_t_e_r (with no trailing
       blanks)  is seen.  All of the lines read up to that point are then used		      |	       blanks) is seen.  All of the lines read up to that point are then  used
       as the standard input for a command.						      |	       as  the  standard  input (or file descriptor _n if _n is specified) for a
											      >	       command.

       The format of here-documents is:								       The format of here-documents is:

              <<<<[--]_w_o_r_d									      |	              [_n]<<<<[--]_w_o_r_d
                      _h_e_r_e_-_d_o_c_u_m_e_n_t								                      _h_e_r_e_-_d_o_c_u_m_e_n_t
              _d_e_l_i_m_i_t_e_r										              _d_e_l_i_m_i_t_e_r

       No parameter expansion, command substitution, arithmetic expansion,  or		      |	       No parameter and variable expansion, command  substitution,  arithmetic
       pathname expansion is performed on _w_o_r_d.  If any characters in _w_o_r_d are		      |	       expansion,  or pathname expansion is performed on _w_o_r_d.  If any part of
       quoted, the _d_e_l_i_m_i_t_e_r is the result of quote removal on _w_o_r_d,  and  the		      |	       _w_o_r_d is quoted, the _d_e_l_i_m_i_t_e_r is the result of quote removal  on  _w_o_r_d,
       lines  in the here-document are not expanded.  If _w_o_r_d is unquoted, all		      |	       and  the  lines  in  the  here-document  are  not expanded.  If _w_o_r_d is
       lines of the here-document are subjected to parameter  expansion,  com-		      |	       unquoted, all lines of the here-document  are  subjected  to  parameter
       mand  substitution,  and arithmetic expansion.  In the latter case, the		      |	       expansion,  command substitution, and arithmetic expansion, the charac-
       character sequence \\<<nneewwlliinnee>> is ignored, and \\ must be used  to  quote		      |	       ter sequence \\<<nneewwlliinnee>> is ignored, and \\ must be  used  to  quote  the
       the characters \\, $$, and ``.							      |	       characters \\, $$, and ``.

       If the redirection operator is <<<<--, then all leading tab characters are			       If the redirection operator is <<<<--, then all leading tab characters are
       stripped from input lines and  the  line  containing  _d_e_l_i_m_i_t_e_r.   This			       stripped from input lines and  the  line  containing  _d_e_l_i_m_i_t_e_r.   This
       allows  here-documents within shell scripts to be indented in a natural			       allows  here-documents within shell scripts to be indented in a natural
       fashion.											       fashion.

   HHeerree SSttrriinnggss											   HHeerree SSttrriinnggss
       A variant of here documents, the format is:						       A variant of here documents, the format is:

              <<<<<<_w_o_r_d									      |	              [_n]<<<<<<_w_o_r_d

       The _w_o_r_d is expanded and supplied to the command on its standard input.		      |	       The _w_o_r_d undergoes tilde expansion, parameter and  variable  expansion,
											      >	       command  substitution,  arithmetic expansion, and quote removal.  Path-
											      >	       name expansion and word splitting are not  performed.   The  result  is
											      >	       supplied as a single string, with a newline appended, to the command on
											      >	       its standard input (or file descriptor _n if _n is specified).

   DDuupplliiccaattiinngg FFiillee DDeessccrriippttoorrss									   DDuupplliiccaattiinngg FFiillee DDeessccrriippttoorrss
       The redirection operator									       The redirection operator

              [_n]<<&&_w_o_r_d										              [_n]<<&&_w_o_r_d

       is used to duplicate input file descriptors.  If _w_o_r_d expands to one or			       is used to duplicate input file descriptors.  If _w_o_r_d expands to one or
       more digits, the file descriptor denoted by _n is made to be a  copy  of		      |	       more  digits,  the file descriptor denoted by _n is made to be a copy of
       that  file  descriptor.   If  the  digits in _w_o_r_d do not specify a file		      |	       that file descriptor.  If the digits in _w_o_r_d  do  not  specify  a  file
       descriptor open for input, a redirection error occurs.  If _w_o_r_d  evalu-		      |	       descriptor  open for input, a redirection error occurs.  If _w_o_r_d evalu-
       ates  to  --,  file  descriptor _n is closed.  If _n is not specified, the		      |	       ates to --, file descriptor _n is closed.  If _n  is  not  specified,  the
       standard input (file descriptor 0) is used.						       standard input (file descriptor 0) is used.

       The operator										       The operator

              [_n]>>&&_w_o_r_d										              [_n]>>&&_w_o_r_d

       is used similarly to duplicate output file descriptors.  If  _n  is  not		      |	       is  used  similarly  to duplicate output file descriptors.  If _n is not
       specified,  the  standard  output  (file descriptor 1) is used.  If the		      |	       specified, the standard output (file descriptor 1)  is  used.   If  the
       digits in _w_o_r_d do not specify a file descriptor open for output, a  re-		      |	       digits  in _w_o_r_d do not specify a file descriptor open for output, a re-
       direction  error  occurs.  As a special case, if _n is omitted, and _w_o_r_d		      |	       direction error occurs.  If _w_o_r_d evaluates to --, file descriptor  _n  is
       does not expand to one or more digits, the standard output and standard		      |	       closed.   As  a special case, if _n is omitted, and _w_o_r_d does not expand
       error are redirected as described previously.					      |	       to one or more digits or --, the standard output and standard error  are
											      >	       redirected as described previously.

   MMoovviinngg FFiillee DDeessccrriippttoorrss									   MMoovviinngg FFiillee DDeessccrriippttoorrss
       The redirection operator									       The redirection operator

              [_n]<<&&_d_i_g_i_t--									              [_n]<<&&_d_i_g_i_t--

       moves  the  file descriptor _d_i_g_i_t to file descriptor _n, or the standard			       moves  the  file descriptor _d_i_g_i_t to file descriptor _n, or the standard
       input (file descriptor 0) if _n is not specified.  _d_i_g_i_t is closed after			       input (file descriptor 0) if _n is not specified.  _d_i_g_i_t is closed after
       being duplicated to _n.									       being duplicated to _n.

       Similarly, the redirection operator							       Similarly, the redirection operator

              [_n]>>&&_d_i_g_i_t--									              [_n]>>&&_d_i_g_i_t--

       moves  the  file descriptor _d_i_g_i_t to file descriptor _n, or the standard			       moves  the  file descriptor _d_i_g_i_t to file descriptor _n, or the standard
       output (file descriptor 1) if _n is not specified.					       output (file descriptor 1) if _n is not specified.

   OOppeenniinngg FFiillee DDeessccrriippttoorrss ffoorr RReeaaddiinngg aanndd WWrriittiinngg						   OOppeenniinngg FFiillee DDeessccrriippttoorrss ffoorr RReeaaddiinngg aanndd WWrriittiinngg
       The redirection operator									       The redirection operator

              [_n]<<>>_w_o_r_d										              [_n]<<>>_w_o_r_d

       causes the file whose name is the expansion of _w_o_r_d to  be  opened  for			       causes the file whose name is the expansion of _w_o_r_d to  be  opened  for
       both  reading and writing on file descriptor _n, or on file descriptor 0			       both  reading and writing on file descriptor _n, or on file descriptor 0
       if _n is not specified.  If the file does not exist, it is created.			       if _n is not specified.  If the file does not exist, it is created.

AALLIIAASSEESS												AALLIIAASSEESS
       _A_l_i_a_s_e_s allow a string to be substituted for a word when it is used  as			       _A_l_i_a_s_e_s allow a string to be substituted for a word when it is used  as
       the  first  word  of  a  simple command.  The shell maintains a list of			       the  first  word  of  a  simple command.  The shell maintains a list of
       aliases that may be set and unset with the aalliiaass  and  uunnaalliiaass  builtin			       aliases that may be set and unset with the aalliiaass  and  uunnaalliiaass  builtin
       commands  (see  SSHHEELLLL  BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  The first word of each			       commands  (see  SSHHEELLLL  BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  The first word of each
       simple command, if unquoted, is checked to see if it has an alias.   If			       simple command, if unquoted, is checked to see if it has an alias.   If
       so,  that word is replaced by the text of the alias.  The characters //,			       so,  that word is replaced by the text of the alias.  The characters //,
       $$, ``, and == and any of the shell _m_e_t_a_c_h_a_r_a_c_t_e_r_s or  quoting  characters			       $$, ``, and == and any of the shell _m_e_t_a_c_h_a_r_a_c_t_e_r_s or  quoting  characters
       listed above may not appear in an alias name.  The replacement text may			       listed above may not appear in an alias name.  The replacement text may
       contain any valid shell input,  including  shell  metacharacters.   The			       contain any valid shell input,  including  shell  metacharacters.   The
       first  word  of  the replacement text is tested for aliases, but a word			       first  word  of  the replacement text is tested for aliases, but a word
       that is identical to an alias being expanded is not expanded  a  second			       that is identical to an alias being expanded is not expanded  a  second
       time.   This  means  that  one may alias llss to llss --FF, for instance, and			       time.   This  means  that  one may alias llss to llss --FF, for instance, and
       bbaasshh does not try to recursively expand the replacement text.   If  the			       bbaasshh does not try to recursively expand the replacement text.   If  the
       last  character  of  the  alias value is a _b_l_a_n_k, then the next command			       last  character  of  the  alias value is a _b_l_a_n_k, then the next command
       word following the alias is also checked for alias expansion.				       word following the alias is also checked for alias expansion.

       Aliases are created and listed with the aalliiaass command, and removed with			       Aliases are created and listed with the aalliiaass command, and removed with
       the uunnaalliiaass command.									       the uunnaalliiaass command.

       There  is no mechanism for using arguments in the replacement text.  If			       There  is no mechanism for using arguments in the replacement text.  If
       arguments are needed, a shell function should be  used  (see  FFUUNNCCTTIIOONNSS			       arguments are needed, a shell function should be  used  (see  FFUUNNCCTTIIOONNSS
       below).											       below).

       Aliases  are not expanded when the shell is not interactive, unless the			       Aliases  are not expanded when the shell is not interactive, unless the
       eexxppaanndd__aalliiaasseess shell option is set using sshhoopptt (see the description  of			       eexxppaanndd__aalliiaasseess shell option is set using sshhoopptt (see the description  of
       sshhoopptt under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).						       sshhoopptt under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).

       The  rules  concerning  the  definition and use of aliases are somewhat			       The  rules  concerning  the  definition and use of aliases are somewhat
       confusing.  BBaasshh always reads at  least  one  complete  line  of  input		      |	       confusing.  BBaasshh always reads at least one complete line of input,  and
       before  executing  any  of  the  commands  on  that  line.  Aliases are		      |	       all  lines that make up a compound command, before executing any of the
       expanded when a command is read, not when it is  executed.   Therefore,		      |	       commands on that line or the compound command.   Aliases  are  expanded
       an  alias definition appearing on the same line as another command does		      |	       when  a  command is read, not when it is executed.  Therefore, an alias
       not take effect until the next line of input  is  read.   The  commands		      |	       definition appearing on the same line as another command does not  take
       following the alias definition on that line are not affected by the new		      |	       effect  until  the  next line of input is read.  The commands following
       alias.  This behavior is also an issue  when  functions  are  executed.		      |	       the alias definition on that line are not affected by  the  new  alias.
       Aliases  are  expanded when a function definition is read, not when the		      |	       This  behavior  is  also an issue when functions are executed.  Aliases
       function is executed, because a function definition is  itself  a  com-		      |	       are expanded when a function definition is read, not when the  function
       pound command.  As a consequence, aliases defined in a function are not		      |	       is  executed,  because a function definition is itself a command.  As a
       available until after that function is executed.  To  be  safe,  always		      |	       consequence, aliases defined in a  function  are  not  available  until
       put  alias definitions on a separate line, and do not use aalliiaass in com-		      |	       after  that function is executed.  To be safe, always put alias defini-
       pound commands.									      |	       tions on a separate line, and do not use aalliiaass in compound commands.

       For almost every purpose, aliases are superseded by shell functions.			       For almost every purpose, aliases are superseded by shell functions.

FFUUNNCCTTIIOONNSS											FFUUNNCCTTIIOONNSS
       A shell function, defined  as  described  above  under  SSHHEELLLL  GGRRAAMMMMAARR,			       A shell function, defined  as  described  above  under  SSHHEELLLL  GGRRAAMMMMAARR,
       stores  a  series  of commands for later execution.  When the name of a			       stores  a  series  of commands for later execution.  When the name of a
       shell function is used as a simple command name, the list  of  commands			       shell function is used as a simple command name, the list  of  commands
       associated with that function name is executed.  Functions are executed			       associated with that function name is executed.  Functions are executed
       in the context of the current shell;  no  new  process  is  created  to			       in the context of the current shell;  no  new  process  is  created  to
       interpret  them  (contrast  this with the execution of a shell script).			       interpret  them  (contrast  this with the execution of a shell script).
       When a function is executed, the arguments to the function  become  the			       When a function is executed, the arguments to the function  become  the
       positional parameters during its execution.  The special parameter ## is			       positional parameters during its execution.  The special parameter ## is
       updated to reflect the change.  Special parameter 0 is unchanged.   The		      |	       updated to reflect the change.  Special parameter 00 is unchanged.   The
       first  element of the FFUUNNCCNNAAMMEE variable is set to the name of the func-			       first  element of the FFUUNNCCNNAAMMEE variable is set to the name of the func-
       tion while the function is executing.  All other aspects of  the  shell		      |	       tion while the function is executing.
       execution  environment  are identical between a function and its caller		      <
       with the exception that the DDEEBBUUGG and RREETTUURRNN traps (see the description		      <
       of  the ttrraapp builtin under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below) are not inher-		      <
       ited unless the function has been given the ttrraaccee  attribute  (see  the		      <
       description  of  the  ddeeccllaarree  builtin below) or the --oo ffuunnccttrraaccee shell		      <
       option has been enabled with the sseett builtin (in which case  all  func-		      <
       tions inherit the DDEEBBUUGG and RREETTUURRNN traps).					      <

       Variables  local to the function may be declared with the llooccaall builtin		      |	       All other aspects of the  shell  execution  environment  are  identical
											      >	       between  a function and its caller with these exceptions: the DDEEBBUUGG and
											      >	       RREETTUURRNN traps (see the description  of  the  ttrraapp  builtin  under  SSHHEELLLL
											      >	       BBUUIILLTTIINN  CCOOMMMMAANNDDSS below) are not inherited unless the function has been
											      >	       given the ttrraaccee attribute (see the description of the  ddeeccllaarree  builtin
											      >	       below)  or  the --oo ffuunnccttrraaccee shell option has been enabled with the sseett
											      >	       builtin (in which case all  functions  inherit  the  DDEEBBUUGG  and  RREETTUURRNN
											      >	       traps),  and the EERRRR trap is not inherited unless the --oo eerrrrttrraaccee shell
											      >	       option has been enabled.
											      >
											      >	       Variables local to the function may be declared with the llooccaall  builtin
       command.  Ordinarily, variables and their values are shared between the			       command.  Ordinarily, variables and their values are shared between the
       function and its caller.								      |	       function and its caller.  If a variable is declared  llooccaall,  the  vari-
											      >	       able's  visible  scope  is restricted to that function and its children
											      >	       (including the functions it calls).  Local variables "shadow" variables
											      >	       with  the same name declared at previous scopes.  For instance, a local
											      >	       variable declared in a function hides a global  variable  of  the  same
											      >	       name:  references  and assignments refer to the local variable, leaving
											      >	       the global variable unmodified.  When the function returns, the  global
											      >	       variable is once again visible.
											      >
											      >	       The  shell  uses  _d_y_n_a_m_i_c  _s_c_o_p_i_n_g  to  control a variable's visibility
											      >	       within functions.  With dynamic scoping, visible  variables  and  their
											      >	       values  are a result of the sequence of function calls that caused exe-
											      >	       cution to reach the current function.  The value of a variable  that  a
											      >	       function  sees  depends on its value within its caller, if any, whether
											      >	       that caller is the "global" scope or another shell function.   This  is
											      >	       also  the  value  that  a local variable declaration "shadows", and the
											      >	       value that is restored when the function returns.
											      >
											      >	       For example, if a variable _v_a_r is declared as local in function  _f_u_n_c_1,
											      >	       and  _f_u_n_c_1  calls  another  function _f_u_n_c_2, references to _v_a_r made from
											      >	       within _f_u_n_c_2 will resolve to the local variable _v_a_r from _f_u_n_c_1, shadow-
											      >	       ing any global variable named _v_a_r.
											      >
											      >	       The uunnsseett builtin also acts using the same dynamic scope: if a variable
											      >	       is local to the current scope, uunnsseett will unset it; otherwise the unset
											      >	       will  refer  to  the  variable  found in any calling scope as described
											      >	       above.  If a variable at the current local  scope  is  unset,  it  will
											      >	       remain  so  until  it  is  reset  in  that  scope or until the function
											      >	       returns.  Once the function returns, any instance of the variable at  a
											      >	       previous scope will become visible.  If the unset acts on a variable at
											      >	       a previous scope, any instance of a variable with that  name  that  had
											      >	       been shadowed will become visible.
											      >
											      >	       The  FFUUNNCCNNEESSTT  variable,  if  set  to  a  numeric value greater than 0,
											      >	       defines a maximum function nesting level.   Function  invocations  that
											      >	       exceed the limit cause the entire command to abort.

       If  the  builtin command rreettuurrnn is executed in a function, the function			       If  the  builtin command rreettuurrnn is executed in a function, the function
       completes and execution resumes with the next command after  the  func-			       completes and execution resumes with the next command after  the  func-
       tion  call.   Any  command  associated with the RREETTUURRNN trap is executed			       tion  call.   Any  command  associated with the RREETTUURRNN trap is executed
       before execution resumes.  When a function completes, the values of the			       before execution resumes.  When a function completes, the values of the
       positional  parameters  and the special parameter ## are restored to the			       positional  parameters  and the special parameter ## are restored to the
       values they had prior to the function's execution.					       values they had prior to the function's execution.

       Function names and definitions may be listed with the --ff option to  the			       Function names and definitions may be listed with the --ff option to  the
       ddeeccllaarree or ttyyppeesseett builtin commands.  The --FF option to ddeeccllaarree or ttyyppee--			       ddeeccllaarree or ttyyppeesseett builtin commands.  The --FF option to ddeeccllaarree or ttyyppee--
       sseett will list the function names only (and optionally the  source  file			       sseett will list the function names only (and optionally the  source  file
       and  line  number, if the eexxttddeebbuugg shell option is enabled).  Functions			       and  line  number, if the eexxttddeebbuugg shell option is enabled).  Functions
       may be exported so that subshells automatically have them defined  with			       may be exported so that subshells automatically have them defined  with
       the  --ff  option  to  the  eexxppoorrtt builtin.  A function definition may be			       the  --ff  option  to  the  eexxppoorrtt builtin.  A function definition may be
       deleted using the --ff option to the  uunnsseett  builtin.   Note  that  shell		      |	       deleted using the --ff option to the uunnsseett builtin.
       functions and variables with the same name may result in multiple iden-		      <
       tically-named entries in the environment passed to  the  shell's  chil-		      <
       dren.  Care should be taken in cases where this may cause a problem.		      <

       Functions  may  be  recursive.   No  limit  is imposed on the number of		      |	       Functions may be recursive.  The FFUUNNCCNNEESSTT variable may be used to limit
											      >	       the  depth  of the function call stack and restrict the number of func-
											      >	       tion invocations.  By default, no limit is imposed  on  the  number  of
       recursive calls.										       recursive calls.

AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN										AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN
       The shell allows arithmetic expressions to be evaluated, under  certain		      |	       The  shell allows arithmetic expressions to be evaluated, under certain
       circumstances  (see the lleett and ddeeccllaarree builtin commands and AArriitthhmmeettiicc		      |	       circumstances (see the lleett and ddeeccllaarree builtin commands,  the  ((((  com-
       EExxppaannssiioonn).  Evaluation is done in fixed-width integers with  no  check		      |	       pound command, and AArriitthhmmeettiicc EExxppaannssiioonn).  Evaluation is done in fixed-
       for  overflow, though division by 0 is trapped and flagged as an error.		      |	       width integers with no check for overflow,  though  division  by  0  is
       The operators and their precedence, associativity, and values  are  the		      |	       trapped  and  flagged as an error.  The operators and their precedence,
       same  as in the C language.  The following list of operators is grouped		      |	       associativity, and values are the same as in the C language.  The  fol-
       into levels of equal-precedence operators.  The levels  are  listed  in		      |	       lowing  list  of  operators  is grouped into levels of equal-precedence
       order of decreasing precedence.							      |	       operators.  The levels are listed in order of decreasing precedence.

       _i_d++++ _i_d----										       _i_d++++ _i_d----
              variable post-increment and post-decrement					              variable post-increment and post-decrement
											      >	       -- ++    unary minus and plus
       ++++_i_d ----_i_d										       ++++_i_d ----_i_d
              variable pre-increment and pre-decrement						              variable pre-increment and pre-decrement
       -- ++    unary minus and plus							      <
       !! ~~    logical and bitwise negation							       !! ~~    logical and bitwise negation
       ****     exponentiation									       ****     exponentiation
       ** // %%  multiplication, division, remainder						       ** // %%  multiplication, division, remainder
       ++ --    addition, subtraction								       ++ --    addition, subtraction
       <<<< >>>>  left and right bitwise shifts							       <<<< >>>>  left and right bitwise shifts
       <<== >>== << >>										       <<== >>== << >>
              comparison									              comparison
       ==== !!==  equality and inequality								       ==== !!==  equality and inequality
       &&      bitwise AND									       &&      bitwise AND
       ^^      bitwise exclusive OR								       ^^      bitwise exclusive OR
       ||      bitwise OR									       ||      bitwise OR
       &&&&     logical AND									       &&&&     logical AND
       ||||     logical OR									       ||||     logical OR
       _e_x_p_r??_e_x_p_r::_e_x_p_r										       _e_x_p_r??_e_x_p_r::_e_x_p_r
              conditional operator								              conditional operator
       == **== //== %%== ++== --== <<<<== >>>>== &&== ^^== ||==							       == **== //== %%== ++== --== <<<<== >>>>== &&== ^^== ||==
              assignment									              assignment
       _e_x_p_r_1 ,, _e_x_p_r_2										       _e_x_p_r_1 ,, _e_x_p_r_2
              comma										              comma

       Shell  variables  are  allowed as operands; parameter expansion is per-		      |	       Shell variables are allowed as operands; parameter  expansion  is  per-
       formed before the expression is evaluated.  Within an expression, shell			       formed before the expression is evaluated.  Within an expression, shell
       variables  may  also  be referenced by name without using the parameter		      |	       variables may also be referenced by name without  using  the  parameter
       expansion syntax.  A shell variable that is null or unset evaluates  to		      |	       expansion  syntax.  A shell variable that is null or unset evaluates to
       0 when referenced by name without using the parameter expansion syntax.			       0 when referenced by name without using the parameter expansion syntax.
       The value of a variable is evaluated as an arithmetic  expression  when		      |	       The  value  of a variable is evaluated as an arithmetic expression when
       it  is  referenced, or when a variable which has been given the _i_n_t_e_g_e_r		      |	       it is referenced, or when a variable which has been given  the  _i_n_t_e_g_e_r
       attribute using ddeeccllaarree --ii is assigned a value.  A null value evaluates			       attribute using ddeeccllaarree --ii is assigned a value.  A null value evaluates
       to  0.   A shell variable need not have its integer attribute turned on		      |	       to 0.  A shell variable need not have its _i_n_t_e_g_e_r attribute  turned  on
       to be used in an expression.								       to be used in an expression.

       Constants with a leading 0 are interpreted as octal numbers.  A leading			       Constants with a leading 0 are interpreted as octal numbers.  A leading
       0x  or  0X  denotes  hexadecimal.   Otherwise,  numbers  take  the form		      |	       0x or  0X  denotes  hexadecimal.   Otherwise,  numbers  take  the  form
       [_b_a_s_e_#]n, where _b_a_s_e is a decimal number between 2 and 64  representing		      |	       [_b_a_s_e_#]n,  where the optional _b_a_s_e is a decimal number between 2 and 64
       the arithmetic base, and _n is a number in that base.  If _b_a_s_e_# is omit-		      |	       representing the arithmetic base, and _n is a number in that  base.   If
       ted, then base 10 is used.  The digits greater than 9  are  represented		      |	       _b_a_s_e_#  is omitted, then base 10 is used.  When specifying _n, the digits
       by  the  lowercase  letters,  the  uppercase letters, @, and _, in that		      |	       greater than 9 are represented by the lowercase letters, the  uppercase
       order.  If _b_a_s_e is less than or equal to 36,  lowercase  and  uppercase		      |	       letters, @, and _, in that order.  If _b_a_s_e is less than or equal to 36,
       letters may be used interchangeably to represent numbers between 10 and		      |	       lowercase and uppercase letters may be used interchangeably  to  repre-
       35.										      |	       sent numbers between 10 and 35.

       Operators are evaluated in order  of  precedence.   Sub-expressions  in		      |	       Operators  are  evaluated  in  order of precedence.  Sub-expressions in
       parentheses  are  evaluated first and may override the precedence rules		      |	       parentheses are evaluated first and may override the  precedence  rules
       above.											       above.

CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS										CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS
       Conditional expressions are used by the [[[[  compound  command  and  the		      |	       Conditional  expressions  are  used  by the [[[[ compound command and the
       tteesstt  and [[ builtin commands to test file attributes and perform string		      |	       tteesstt and [[ builtin commands to test file attributes and perform  string
       and arithmetic comparisons.  Expressions are formed from the  following		      |	       and  arithmetic  comparisons.   The tteesstt abd [[ commands determine their
       unary  or  binary  primaries.   If any _f_i_l_e argument to one of the pri-		      |	       behavior based on the number of  arguments;  see  the  descriptions  of
											      >	       those commands for any other command-specific actions.
											      >
											      >	       Expressions  are  formed  from the following unary or binary primaries.
											      >	       BBaasshh handles several filenames specially when they are used in  expres-
											      >	       sions.  If the operating system on which bbaasshh is running provides these
											      >	       special files, bash will use  them;  otherwise  it  will  emulate  them
											      >	       internally  with this behavior: If any _f_i_l_e argument to one of the pri-
       maries is of the form _/_d_e_v_/_f_d_/_n, then file descriptor _n is checked.  If			       maries is of the form _/_d_e_v_/_f_d_/_n, then file descriptor _n is checked.  If
       the  _f_i_l_e  argument  to  one  of  the  primaries  is one of _/_d_e_v_/_s_t_d_i_n,			       the  _f_i_l_e  argument  to  one  of  the  primaries  is one of _/_d_e_v_/_s_t_d_i_n,
       _/_d_e_v_/_s_t_d_o_u_t, or _/_d_e_v_/_s_t_d_e_r_r, file descriptor 0, 1, or 2,  respectively,			       _/_d_e_v_/_s_t_d_o_u_t, or _/_d_e_v_/_s_t_d_e_r_r, file descriptor 0, 1, or 2,  respectively,
       is checked.										       is checked.

       Unless otherwise specified, primaries that operate on files follow sym-			       Unless otherwise specified, primaries that operate on files follow sym-
       bolic links and operate on the target of the link, rather than the link			       bolic links and operate on the target of the link, rather than the link
       itself.											       itself.

											      >	       When  used  with [[[[, the << and >> operators sort lexicographically using
											      >	       the current locale.  The tteesstt command sorts using ASCII ordering.
											      >
       --aa _f_i_l_e											       --aa _f_i_l_e
              True if _f_i_l_e exists.								              True if _f_i_l_e exists.
       --bb _f_i_l_e											       --bb _f_i_l_e
              True if _f_i_l_e exists and is a block special file.					              True if _f_i_l_e exists and is a block special file.
       --cc _f_i_l_e											       --cc _f_i_l_e
              True if _f_i_l_e exists and is a character special file.				              True if _f_i_l_e exists and is a character special file.
       --dd _f_i_l_e											       --dd _f_i_l_e
              True if _f_i_l_e exists and is a directory.						              True if _f_i_l_e exists and is a directory.
       --ee _f_i_l_e											       --ee _f_i_l_e
              True if _f_i_l_e exists.								              True if _f_i_l_e exists.
       --ff _f_i_l_e											       --ff _f_i_l_e
              True if _f_i_l_e exists and is a regular file.					              True if _f_i_l_e exists and is a regular file.
       --gg _f_i_l_e											       --gg _f_i_l_e
              True if _f_i_l_e exists and is set-group-id.						              True if _f_i_l_e exists and is set-group-id.
       --hh _f_i_l_e											       --hh _f_i_l_e
              True if _f_i_l_e exists and is a symbolic link.					              True if _f_i_l_e exists and is a symbolic link.
       --kk _f_i_l_e											       --kk _f_i_l_e
              True if _f_i_l_e exists and its ``sticky'' bit is set.				              True if _f_i_l_e exists and its ``sticky'' bit is set.
       --pp _f_i_l_e											       --pp _f_i_l_e
              True if _f_i_l_e exists and is a named pipe (FIFO).					              True if _f_i_l_e exists and is a named pipe (FIFO).
       --rr _f_i_l_e											       --rr _f_i_l_e
              True if _f_i_l_e exists and is readable.						              True if _f_i_l_e exists and is readable.
       --ss _f_i_l_e											       --ss _f_i_l_e
              True if _f_i_l_e exists and has a size greater than zero.				              True if _f_i_l_e exists and has a size greater than zero.
       --tt _f_d  True if file descriptor _f_d is open and refers to a terminal.			       --tt _f_d  True if file descriptor _f_d is open and refers to a terminal.
       --uu _f_i_l_e											       --uu _f_i_l_e
              True if _f_i_l_e exists and its set-user-id bit is set.				              True if _f_i_l_e exists and its set-user-id bit is set.
       --ww _f_i_l_e											       --ww _f_i_l_e
              True if _f_i_l_e exists and is writable.						              True if _f_i_l_e exists and is writable.
       --xx _f_i_l_e											       --xx _f_i_l_e
              True if _f_i_l_e exists and is executable.						              True if _f_i_l_e exists and is executable.
       --OO _f_i_l_e										      <
              True if _f_i_l_e exists and is owned by the effective user id.		      <
       --GG _f_i_l_e											       --GG _f_i_l_e
              True if _f_i_l_e exists and is owned by the effective group id.			              True if _f_i_l_e exists and is owned by the effective group id.
       --LL _f_i_l_e											       --LL _f_i_l_e
              True if _f_i_l_e exists and is a symbolic link.					              True if _f_i_l_e exists and is a symbolic link.
       --SS _f_i_l_e										      <
              True if _f_i_l_e exists and is a socket.					      <
       --NN _f_i_l_e											       --NN _f_i_l_e
              True  if  _f_i_l_e  exists  and  has been modified since it was last		      |	              True if _f_i_l_e exists and has been  modified  since  it  was  last
              read.										              read.
											      >	       --OO _f_i_l_e
											      >	              True if _f_i_l_e exists and is owned by the effective user id.
											      >	       --SS _f_i_l_e
											      >	              True if _f_i_l_e exists and is a socket.
											      >	       _f_i_l_e_1 --eeff _f_i_l_e_2
											      >	              True  if _f_i_l_e_1 and _f_i_l_e_2 refer to the same device and inode num-
											      >	              bers.
       _f_i_l_e_1 -nntt _f_i_l_e_2										       _f_i_l_e_1 -nntt _f_i_l_e_2
              True if _f_i_l_e_1 is newer (according  to  modification  date)  than			              True if _f_i_l_e_1 is newer (according  to  modification  date)  than
              _f_i_l_e_2, or if _f_i_l_e_1 exists and _f_i_l_e_2 does not.					              _f_i_l_e_2, or if _f_i_l_e_1 exists and _f_i_l_e_2 does not.
       _f_i_l_e_1 -oott _f_i_l_e_2										       _f_i_l_e_1 -oott _f_i_l_e_2
              True  if _f_i_l_e_1 is older than _f_i_l_e_2, or if _f_i_l_e_2 exists and _f_i_l_e_1			              True  if _f_i_l_e_1 is older than _f_i_l_e_2, or if _f_i_l_e_2 exists and _f_i_l_e_1
              does not.										              does not.
       _f_i_l_e_1 --eeff _f_i_l_e_2									      <
              True if _f_i_l_e_1 and _f_i_l_e_2 refer to the same device and inode  num-		      <
              bers.									      <
       --oo _o_p_t_n_a_m_e										       --oo _o_p_t_n_a_m_e
              True  if  shell  option  _o_p_t_n_a_m_e  is  enabled.   See the list of		      |	              True if the shell option _o_p_t_n_a_m_e is enabled.  See  the  list  of
              options under the description  of  the  --oo  option  to  the  sseett		      |	              options  under  the  description  of  the  --oo  option to the sseett
              builtin below.									              builtin below.
											      >	       --vv _v_a_r_n_a_m_e
											      >	              True if the shell variable _v_a_r_n_a_m_e is set (has been  assigned  a
											      >	              value).
											      >	       --RR _v_a_r_n_a_m_e
											      >	              True  if  the shell variable _v_a_r_n_a_m_e is set and is a name refer-
											      >	              ence.
       --zz _s_t_r_i_n_g										       --zz _s_t_r_i_n_g
              True if the length of _s_t_r_i_n_g is zero.						              True if the length of _s_t_r_i_n_g is zero.
       _s_t_r_i_n_g											       _s_t_r_i_n_g
       --nn _s_t_r_i_n_g										       --nn _s_t_r_i_n_g
              True if the length of _s_t_r_i_n_g is non-zero.						              True if the length of _s_t_r_i_n_g is non-zero.

       _s_t_r_i_n_g_1 ==== _s_t_r_i_n_g_2									       _s_t_r_i_n_g_1 ==== _s_t_r_i_n_g_2
              True if the strings are equal.  == may be used in place of ==== for		      |	       _s_t_r_i_n_g_1 == _s_t_r_i_n_g_2
              strict POSIX compliance.							      |	              True if the strings are equal.  == should be used with  the  tteesstt
											      >	              command  for  POSIX conformance.  When used with the [[[[ command,
											      >	              this performs pattern matching as described above (CCoommppoouunndd CCoomm--
											      >	              mmaannddss).

       _s_t_r_i_n_g_1 !!== _s_t_r_i_n_g_2									       _s_t_r_i_n_g_1 !!== _s_t_r_i_n_g_2
              True if the strings are not equal.						              True if the strings are not equal.

       _s_t_r_i_n_g_1 << _s_t_r_i_n_g_2									       _s_t_r_i_n_g_1 << _s_t_r_i_n_g_2
              True if _s_t_r_i_n_g_1 sorts before _s_t_r_i_n_g_2  lexicographically  in  the		      |	              True if _s_t_r_i_n_g_1 sorts before _s_t_r_i_n_g_2 lexicographically.
              current locale.								      <

       _s_t_r_i_n_g_1 >> _s_t_r_i_n_g_2									       _s_t_r_i_n_g_1 >> _s_t_r_i_n_g_2
              True  if  _s_t_r_i_n_g_1  sorts  after _s_t_r_i_n_g_2 lexicographically in the		      |	              True if _s_t_r_i_n_g_1 sorts after _s_t_r_i_n_g_2 lexicographically.
              current locale.								      <

       _a_r_g_1 OOPP _a_r_g_2										       _a_r_g_1 OOPP _a_r_g_2
              OOPP is one of --eeqq, --nnee, --lltt, --llee, --ggtt, or --ggee.  These  arithmetic		      |	              OOPP  is one of --eeqq, --nnee, --lltt, --llee, --ggtt, or --ggee.  These arithmetic
              binary  operators return true if _a_r_g_1 is equal to, not equal to,		      |	              binary operators return true if _a_r_g_1 is equal to, not equal  to,
              less than, less than or equal to, greater than, or greater  than		      |	              less  than, less than or equal to, greater than, or greater than
              or  equal  to _a_r_g_2, respectively.  _A_r_g_1 and _a_r_g_2 may be positive		      |	              or equal to _a_r_g_2, respectively.  _A_r_g_1 and _a_r_g_2 may  be  positive
              or negative integers.							      |	              or  negative  integers.  When used with the [[[[ command, _A_r_g_1 and
											      >	              _A_r_g_2 are evaluated as arithmetic  expressions   (see  AARRIITTHHMMEETTIICC
											      >	              EEVVAALLUUAATTIIOONN above).

SSIIMMPPLLEE CCOOMMMMAANNDD EEXXPPAANNSSIIOONN									SSIIMMPPLLEE CCOOMMMMAANNDD EEXXPPAANNSSIIOONN
       When a simple command is executed, the  shell  performs  the  following		      |	       When  a  simple  command  is executed, the shell performs the following
       expansions, assignments, and redirections, from left to right.				       expansions, assignments, and redirections, from left to right.

       1.     The  words  that  the  parser has marked as variable assignments		      |	       1.     The words that the parser has  marked  as  variable  assignments
              (those preceding the command name) and  redirections  are  saved		      |	              (those  preceding  the  command name) and redirections are saved
              for later processing.								              for later processing.

       2.     The  words that are not variable assignments or redirections are		      |	       2.     The words that are not variable assignments or redirections  are
              expanded.  If any words remain after expansion, the  first  word		      |	              expanded.   If  any words remain after expansion, the first word
              is  taken  to be the name of the command and the remaining words		      |	              is taken to be the name of the command and the  remaining  words
              are the arguments.								              are the arguments.

       3.     Redirections are performed as described above under RREEDDIIRREECCTTIIOONN.			       3.     Redirections are performed as described above under RREEDDIIRREECCTTIIOONN.

       4.     The text after the == in each variable assignment undergoes tilde			       4.     The text after the == in each variable assignment undergoes tilde
              expansion, parameter expansion, command substitution, arithmetic			              expansion, parameter expansion, command substitution, arithmetic
              expansion,  and quote removal before being assigned to the vari-		      |	              expansion, and quote removal before being assigned to the  vari-
              able.										              able.

       If no command name results, the variable assignments affect the current			       If no command name results, the variable assignments affect the current
       shell  environment.  Otherwise, the variables are added to the environ-		      |	       shell environment.  Otherwise, the variables are added to the  environ-
       ment of the executed command and do not affect the current shell  envi-		      |	       ment  of the executed command and do not affect the current shell envi-
       ronment.   If  any  of  the assignments attempts to assign a value to a		      |	       ronment.  If any of the assignments attempts to assign  a  value  to  a
       readonly variable, an error occurs, and the command exits with  a  non-		      |	       readonly  variable,  an error occurs, and the command exits with a non-
       zero status.										       zero status.

       If  no  command  name  results,  redirections are performed, but do not		      |	       If no command name results, redirections  are  performed,  but  do  not
       affect the current shell environment.  A redirection error  causes  the		      |	       affect  the  current shell environment.  A redirection error causes the
       command to exit with a non-zero status.							       command to exit with a non-zero status.

       If  there is a command name left after expansion, execution proceeds as		      |	       If there is a command name left after expansion, execution proceeds  as
       described below.  Otherwise, the command exits.  If one of  the  expan-		      |	       described  below.   Otherwise, the command exits.  If one of the expan-
       sions  contained a command substitution, the exit status of the command		      |	       sions contained a command substitution, the exit status of the  command
       is the exit status of the  last  command  substitution  performed.   If		      |	       is  the  exit  status  of  the last command substitution performed.  If
       there were no command substitutions, the command exits with a status of			       there were no command substitutions, the command exits with a status of
       zero.											       zero.

CCOOMMMMAANNDD EEXXEECCUUTTIIOONN										CCOOMMMMAANNDD EEXXEECCUUTTIIOONN
       After a command has been split into words, if it results  in  a  simple		      |	       After  a  command  has been split into words, if it results in a simple
       command  and  an  optional list of arguments, the following actions are		      |	       command and an optional list of arguments, the  following  actions  are
       taken.											       taken.

       If the command name contains no slashes, the shell attempts  to  locate		      |	       If  the  command name contains no slashes, the shell attempts to locate
       it.   If  there  exists a shell function by that name, that function is		      |	       it.  If there exists a shell function by that name,  that  function  is
       invoked as described above in FFUUNNCCTTIIOONNSS.  If the name does not match  a		      |	       invoked  as described above in FFUUNNCCTTIIOONNSS.  If the name does not match a
       function,  the shell searches for it in the list of shell builtins.  If		      |	       function, the shell searches for it in the list of shell builtins.   If
       a match is found, that builtin is invoked.						       a match is found, that builtin is invoked.

       If the name is neither a shell function nor a builtin, and contains  no		      |	       If  the name is neither a shell function nor a builtin, and contains no
       slashes,  bbaasshh  searches  each element of the PPAATTHH for a directory con-		      |	       slashes, bbaasshh searches each element of the PPAATTHH for  a  directory  con-
       taining an executable file by that name.  BBaasshh uses  a  hash  table  to		      |	       taining  an  executable  file  by that name.  BBaasshh uses a hash table to
       remember  the  full pathnames of executable files (see hhaasshh under SSHHEELLLL		      |	       remember the full pathnames of executable files (see hhaasshh  under  SSHHEELLLL
       BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  A full search of the directories in  PPAATTHH  is		      |	       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below).  A full search of the directories in PPAATTHH is
       performed  only  if the command is not found in the hash table.  If the		      |	       performed only if the command is not found in the hash table.   If  the
       search is unsuccessful, the shell prints an error message  and  returns		      |	       search is unsuccessful, the shell searches for a defined shell function
       an exit status of 127.								      |	       named ccoommmmaanndd__nnoott__ffoouunndd__hhaannddllee.  If that function exists, it is invoked
											      >	       in  a  separate execution environment with the original command and the
											      >	       original command's arguments as its arguments, and the function's  exit
											      >	       status  becomes  the exit status of that subshell.  If that function is
											      >	       not defined, the shell prints an error message and returns an exit sta-
											      >	       tus of 127.

       If  the  search  is  successful, or if the command name contains one or			       If  the  search  is  successful, or if the command name contains one or
       more slashes, the shell executes the named program in a separate execu-			       more slashes, the shell executes the named program in a separate execu-
       tion environment.  Argument 0 is set to the name given, and the remain-			       tion environment.  Argument 0 is set to the name given, and the remain-
       ing arguments to the command are set to the arguments given, if any.			       ing arguments to the command are set to the arguments given, if any.

       If this execution fails because the file is not in  executable  format,			       If this execution fails because the file is not in  executable  format,
       and  the file is not a directory, it is assumed to be a _s_h_e_l_l _s_c_r_i_p_t, a			       and  the file is not a directory, it is assumed to be a _s_h_e_l_l _s_c_r_i_p_t, a
       file containing shell commands.  A subshell is spawned to  execute  it.			       file containing shell commands.  A subshell is spawned to  execute  it.
       This  subshell  reinitializes itself, so that the effect is as if a new			       This  subshell  reinitializes itself, so that the effect is as if a new
       shell had been invoked to handle the script, with  the  exception  that			       shell had been invoked to handle the script, with  the  exception  that
       the  locations  of  commands  remembered  by the parent (see hhaasshh below			       the  locations  of  commands  remembered  by the parent (see hhaasshh below
       under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS) are retained by the child.					       under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS) are retained by the child.

       If the program is a file beginning with ##!!, the remainder of the  first			       If the program is a file beginning with ##!!, the remainder of the  first
       line  specifies an interpreter for the program.  The shell executes the			       line  specifies an interpreter for the program.  The shell executes the
       specified interpreter on operating systems that do not handle this exe-			       specified interpreter on operating systems that do not handle this exe-
       cutable format themselves.  The arguments to the interpreter consist of			       cutable format themselves.  The arguments to the interpreter consist of
       a single optional argument following the interpreter name on the  first			       a single optional argument following the interpreter name on the  first
       line  of  the program, followed by the name of the program, followed by			       line  of  the program, followed by the name of the program, followed by
       the command arguments, if any.								       the command arguments, if any.

CCOOMMMMAANNDD EEXXEECCUUTTIIOONN EENNVVIIRROONNMMEENNTT									CCOOMMMMAANNDD EEXXEECCUUTTIIOONN EENNVVIIRROONNMMEENNTT
       The shell has an _e_x_e_c_u_t_i_o_n _e_n_v_i_r_o_n_m_e_n_t, which consists of  the  follow-			       The shell has an _e_x_e_c_u_t_i_o_n _e_n_v_i_r_o_n_m_e_n_t, which consists of  the  follow-
       ing:											       ing:

											      <
       +o      open  files inherited by the shell at invocation, as modified by			       +o      open  files inherited by the shell at invocation, as modified by
              redirections supplied to the eexxeecc builtin						              redirections supplied to the eexxeecc builtin

       +o      the current working directory as set by ccdd, ppuusshhdd, or  ppooppdd,  or			       +o      the current working directory as set by ccdd, ppuusshhdd, or  ppooppdd,  or
              inherited by the shell at invocation						              inherited by the shell at invocation

       +o      the  file  creation  mode mask as set by uummaasskk or inherited from			       +o      the  file  creation  mode mask as set by uummaasskk or inherited from
              the shell's parent								              the shell's parent

       +o      current traps set by ttrraapp								       +o      current traps set by ttrraapp

       +o      shell parameters that are set by variable assignment or with sseett			       +o      shell parameters that are set by variable assignment or with sseett
              or inherited from the shell's parent in the environment				              or inherited from the shell's parent in the environment

       +o      shell  functions  defined during execution or inherited from the			       +o      shell  functions  defined during execution or inherited from the
              shell's parent in the environment							              shell's parent in the environment

       +o      options enabled at invocation (either by default  or  with  com-			       +o      options enabled at invocation (either by default  or  with  com-
              mand-line arguments) or by sseett							              mand-line arguments) or by sseett

       +o      options enabled by sshhoopptt								       +o      options enabled by sshhoopptt

       +o      shell aliases defined with aalliiaass							       +o      shell aliases defined with aalliiaass

       +o      various  process  IDs,  including  those of background jobs, the			       +o      various  process  IDs,  including  those of background jobs, the
              value of $$$$, and the value of $$PPPPIIDD					      |	              value of $$$$, and the value of PPPPIIDD

       When a simple command other than a builtin or shell function is  to  be			       When a simple command other than a builtin or shell function is  to  be
       executed,  it  is invoked in a separate execution environment that con-			       executed,  it  is invoked in a separate execution environment that con-
       sists of the following.  Unless otherwise noted, the values are  inher-			       sists of the following.  Unless otherwise noted, the values are  inher-
       ited from the shell.									       ited from the shell.


       +o      the  shell's  open  files,  plus any modifications and additions			       +o      the  shell's  open  files,  plus any modifications and additions
              specified by redirections to the command						              specified by redirections to the command

       +o      the current working directory							       +o      the current working directory

       +o      the file creation mode mask							       +o      the file creation mode mask

       +o      shell variables and functions  marked  for  export,  along  with			       +o      shell variables and functions  marked  for  export,  along  with
              variables exported for the command, passed in the environment			              variables exported for the command, passed in the environment

       +o      traps caught by the shell are reset to the values inherited from			       +o      traps caught by the shell are reset to the values inherited from
              the shell's parent, and traps ignored by the shell are ignored			              the shell's parent, and traps ignored by the shell are ignored

       A command invoked  in  this  separate  environment  cannot  affect  the			       A command invoked  in  this  separate  environment  cannot  affect  the
       shell's execution environment.								       shell's execution environment.

       Command  substitution, commands grouped with parentheses, and asynchro-			       Command  substitution, commands grouped with parentheses, and asynchro-
       nous commands are invoked in a subshell environment that is a duplicate			       nous commands are invoked in a subshell environment that is a duplicate
       of  the  shell  environment,  except that traps caught by the shell are			       of  the  shell  environment,  except that traps caught by the shell are
       reset to the values that the shell inherited from its parent at invoca-			       reset to the values that the shell inherited from its parent at invoca-
       tion.  Builtin commands that are invoked as part of a pipeline are also			       tion.  Builtin commands that are invoked as part of a pipeline are also
       executed in a subshell environment.  Changes made to the subshell envi-			       executed in a subshell environment.  Changes made to the subshell envi-
       ronment cannot affect the shell's execution environment.					       ronment cannot affect the shell's execution environment.

											      >	       Subshells spawned to execute command substitutions inherit the value of
											      >	       the --ee option from the parent shell.  When  not  in  _p_o_s_i_x  _m_o_d_e,  bbaasshh
											      >	       clears the --ee option in such subshells.
											      >
       If  a  command  is  followed  by a && and job control is not active, the			       If  a  command  is  followed  by a && and job control is not active, the
       default standard input for the command is  the  empty  file  _/_d_e_v_/_n_u_l_l.			       default standard input for the command is  the  empty  file  _/_d_e_v_/_n_u_l_l.
       Otherwise,  the  invoked  command  inherits the file descriptors of the			       Otherwise,  the  invoked  command  inherits the file descriptors of the
       calling shell as modified by redirections.						       calling shell as modified by redirections.

EENNVVIIRROONNMMEENNTT											EENNVVIIRROONNMMEENNTT
       When a program is invoked it is given an array of  strings  called  the			       When a program is invoked it is given an array of  strings  called  the
       _e_n_v_i_r_o_n_m_e_n_t.   This  is  a  list  of  _n_a_m_e-_v_a_l_u_e  pairs,  of  the  form			       _e_n_v_i_r_o_n_m_e_n_t.   This  is  a  list  of  _n_a_m_e-_v_a_l_u_e  pairs,  of  the  form
       _n_a_m_e=_v_a_l_u_e.										       _n_a_m_e=_v_a_l_u_e.

       The shell provides several ways  to  manipulate  the  environment.   On			       The shell provides several ways  to  manipulate  the  environment.   On
       invocation, the shell scans its own environment and creates a parameter			       invocation, the shell scans its own environment and creates a parameter
       for each name found, automatically marking it for _e_x_p_o_r_t to child  pro-			       for each name found, automatically marking it for _e_x_p_o_r_t to child  pro-
       cesses.   Executed  commands  inherit  the environment.  The eexxppoorrtt and			       cesses.   Executed  commands  inherit  the environment.  The eexxppoorrtt and
       ddeeccllaarree --xx commands allow parameters and functions to be added  to  and			       ddeeccllaarree --xx commands allow parameters and functions to be added  to  and
       deleted from the environment.  If the value of a parameter in the envi-			       deleted from the environment.  If the value of a parameter in the envi-
       ronment is modified, the new value becomes  part  of  the  environment,			       ronment is modified, the new value becomes  part  of  the  environment,
       replacing  the  old.  The environment inherited by any executed command			       replacing  the  old.  The environment inherited by any executed command
       consists of the shell's initial environment, whose values may be  modi-			       consists of the shell's initial environment, whose values may be  modi-
       fied  in  the  shell, less any pairs removed by the uunnsseett command, plus			       fied  in  the  shell, less any pairs removed by the uunnsseett command, plus
       any additions via the eexxppoorrtt and ddeeccllaarree --xx commands.					       any additions via the eexxppoorrtt and ddeeccllaarree --xx commands.

       The environment for any _s_i_m_p_l_e _c_o_m_m_a_n_d or  function  may  be  augmented			       The environment for any _s_i_m_p_l_e _c_o_m_m_a_n_d or  function  may  be  augmented
       temporarily  by  prefixing  it with parameter assignments, as described			       temporarily  by  prefixing  it with parameter assignments, as described
       above in PPAARRAAMMEETTEERRSS.  These assignment statements affect only the envi-			       above in PPAARRAAMMEETTEERRSS.  These assignment statements affect only the envi-
       ronment seen by that command.								       ronment seen by that command.

       If  the  --kk option is set (see the sseett builtin command below), then _a_l_l			       If  the  --kk option is set (see the sseett builtin command below), then _a_l_l
       parameter assignments are placed in the environment for a command,  not			       parameter assignments are placed in the environment for a command,  not
       just those that precede the command name.						       just those that precede the command name.

       When  bbaasshh  invokes  an  external command, the variable __ is set to the			       When  bbaasshh  invokes  an  external command, the variable __ is set to the
       full file name of the command and passed to that command in  its  envi-		      |	       full filename of the command and passed to that command in its environ-
       ronment.										      |	       ment.

EEXXIITT SSTTAATTUUSS											EEXXIITT SSTTAATTUUSS
											      >	       The  exit  status  of  an executed command is the value returned by the
											      >	       _w_a_i_t_p_i_d system call or equivalent function.  Exit statuses fall between
											      >	       0  and  255, though, as explained below, the shell may use values above
											      >	       125 specially.  Exit statuses from shell builtins and compound commands
											      >	       are also limited to this range.  Under certain circumstances, the shell
											      >	       will use special values to indicate specific failure modes.
											      >
       For the shell's purposes, a command which exits with a zero exit status			       For the shell's purposes, a command which exits with a zero exit status
       has succeeded.  An exit status of zero indicates success.   A  non-zero		      |	       has  succeeded.   An exit status of zero indicates success.  A non-zero
       exit  status  indicates  failure.  When a command terminates on a fatal		      |	       exit status indicates failure.  When a command terminates  on  a  fatal
       signal _N, bbaasshh uses the value of 128+_N as the exit status.				       signal _N, bbaasshh uses the value of 128+_N as the exit status.

       If a command is not found, the child  process  created  to  execute  it		      |	       If  a  command  is  not  found, the child process created to execute it
       returns  a status of 127.  If a command is found but is not executable,		      |	       returns a status of 127.  If a command is found but is not  executable,
       the return status is 126.								       the return status is 126.

       If a command fails because of an error during expansion or redirection,			       If a command fails because of an error during expansion or redirection,
       the exit status is greater than zero.							       the exit status is greater than zero.

       Shell  builtin  commands return a status of 0 (_t_r_u_e) if successful, and		      |	       Shell builtin commands return a status of 0 (_t_r_u_e) if  successful,  and
       non-zero (_f_a_l_s_e) if an error occurs while they execute.   All  builtins		      |	       non-zero  (_f_a_l_s_e)  if an error occurs while they execute.  All builtins
       return an exit status of 2 to indicate incorrect usage.				      |	       return an exit status of  2  to  indicate  incorrect  usage,  generally
											      >	       invalid options or missing arguments.

       BBaasshh  itself  returns  the  exit  status  of the last command executed,			       BBaasshh  itself  returns  the  exit  status  of the last command executed,
       unless a syntax error occurs, in which case it exits  with  a  non-zero			       unless a syntax error occurs, in which case it exits  with  a  non-zero
       value.  See also the eexxiitt builtin command below.						       value.  See also the eexxiitt builtin command below.

SSIIGGNNAALLSS												SSIIGGNNAALLSS
       When  bbaasshh  is  interactive,  in  the  absence of any traps, it ignores			       When  bbaasshh  is  interactive,  in  the  absence of any traps, it ignores
       SSIIGGTTEERRMM (so that kkiillll 00 does not kill an interactive shell), and SSIIGGIINNTT			       SSIIGGTTEERRMM (so that kkiillll 00 does not kill an interactive shell), and SSIIGGIINNTT
       is  caught and handled (so that the wwaaiitt builtin is interruptible).  In			       is  caught and handled (so that the wwaaiitt builtin is interruptible).  In
       all cases, bbaasshh ignores SSIIGGQQUUIITT.  If job control  is  in  effect,  bbaasshh			       all cases, bbaasshh ignores SSIIGGQQUUIITT.  If job control  is  in  effect,  bbaasshh
       ignores SSIIGGTTTTIINN, SSIIGGTTTTOOUU, and SSIIGGTTSSTTPP.							       ignores SSIIGGTTTTIINN, SSIIGGTTTTOOUU, and SSIIGGTTSSTTPP.

       Non-builtin commands run by bbaasshh have signal handlers set to the values			       Non-builtin commands run by bbaasshh have signal handlers set to the values
       inherited by the shell from its parent.  When job  control  is  not  in			       inherited by the shell from its parent.  When job  control  is  not  in
       effect,  asynchronous commands ignore SSIIGGIINNTT and SSIIGGQQUUIITT in addition to			       effect,  asynchronous commands ignore SSIIGGIINNTT and SSIIGGQQUUIITT in addition to
       these inherited handlers.  Commands run as a result of command  substi-			       these inherited handlers.  Commands run as a result of command  substi-
       tution ignore the keyboard-generated job control signals SSIIGGTTTTIINN, SSIIGGTT--			       tution ignore the keyboard-generated job control signals SSIIGGTTTTIINN, SSIIGGTT--
       TTOOUU, and SSIIGGTTSSTTPP.									       TTOOUU, and SSIIGGTTSSTTPP.

       The shell exits by default upon receipt of a SSIIGGHHUUPP.   Before  exiting,			       The shell exits by default upon receipt of a SSIIGGHHUUPP.   Before  exiting,
       an  interactive  shell  resends  the  SSIIGGHHUUPP  to  all  jobs, running or			       an  interactive  shell  resends  the  SSIIGGHHUUPP  to  all  jobs, running or
       stopped.  Stopped jobs are sent SSIIGGCCOONNTT to ensure that they receive the			       stopped.  Stopped jobs are sent SSIIGGCCOONNTT to ensure that they receive the
       SSIIGGHHUUPP.   To  prevent the shell from sending the signal to a particular			       SSIIGGHHUUPP.   To  prevent the shell from sending the signal to a particular
       job, it should be removed from the jobs table with the  ddiissoowwnn  builtin			       job, it should be removed from the jobs table with the  ddiissoowwnn  builtin
       (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below)  or marked to not receive SSIIGGHHUUPP			       (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS  below)  or marked to not receive SSIIGGHHUUPP
       using ddiissoowwnn --hh.										       using ddiissoowwnn --hh.

       If the hhuuppoonneexxiitt shell option has been set with  sshhoopptt,  bbaasshh  sends  a			       If the hhuuppoonneexxiitt shell option has been set with  sshhoopptt,  bbaasshh  sends  a
       SSIIGGHHUUPP to all jobs when an interactive login shell exits.				       SSIIGGHHUUPP to all jobs when an interactive login shell exits.

       If  bbaasshh is waiting for a command to complete and receives a signal for			       If  bbaasshh is waiting for a command to complete and receives a signal for
       which a trap has been set, the trap will not be executed until the com-			       which a trap has been set, the trap will not be executed until the com-
       mand  completes.   When bbaasshh is waiting for an asynchronous command via			       mand  completes.   When bbaasshh is waiting for an asynchronous command via
       the wwaaiitt builtin, the reception of a signal for which a trap  has  been			       the wwaaiitt builtin, the reception of a signal for which a trap  has  been
       set will cause the wwaaiitt builtin to return immediately with an exit sta-			       set will cause the wwaaiitt builtin to return immediately with an exit sta-
       tus greater than 128, immediately after which the trap is executed.			       tus greater than 128, immediately after which the trap is executed.

JJOOBB CCOONNTTRROOLL											JJOOBB CCOONNTTRROOLL
       _J_o_b _c_o_n_t_r_o_l refers to the ability to  selectively  stop  (_s_u_s_p_e_n_d)  the			       _J_o_b _c_o_n_t_r_o_l refers to the ability to  selectively  stop  (_s_u_s_p_e_n_d)  the
       execution of processes and continue (_r_e_s_u_m_e) their execution at a later			       execution of processes and continue (_r_e_s_u_m_e) their execution at a later
       point.  A user typically  employs  this  facility  via  an  interactive			       point.  A user typically  employs  this  facility  via  an  interactive
       interface supplied jointly by the system's terminal driver and bbaasshh.		      |	       interface  supplied  jointly  by the operating system kernel's terminal
											      >	       driver and bbaasshh.

       The  shell  associates  a  _j_o_b with each pipeline.  It keeps a table of		      |	       The shell associates a _j_o_b with each pipeline.  It  keeps  a  table  of
       currently executing jobs, which may be listed with  the  jjoobbss  command.		      |	       currently  executing  jobs,  which may be listed with the jjoobbss command.
       When  bbaasshh starts a job asynchronously (in the _b_a_c_k_g_r_o_u_n_d), it prints a		      |	       When bbaasshh starts a job asynchronously (in the _b_a_c_k_g_r_o_u_n_d), it prints  a
       line that looks like:									       line that looks like:

              [1] 25647										              [1] 25647

       indicating that this job is job number 1 and that the process ID of the			       indicating that this job is job number 1 and that the process ID of the
       last process in the pipeline associated with this job is 25647.  All of			       last process in the pipeline associated with this job is 25647.  All of
       the processes in a single pipeline are members of the same  job.   BBaasshh		      |	       the  processes  in a single pipeline are members of the same job.  BBaasshh
       uses the _j_o_b abstraction as the basis for job control.					       uses the _j_o_b abstraction as the basis for job control.

       To  facilitate the implementation of the user interface to job control,		      |	       To facilitate the implementation of the user interface to job  control,
       the operating system maintains the notion of a _c_u_r_r_e_n_t _t_e_r_m_i_n_a_l _p_r_o_c_e_s_s			       the operating system maintains the notion of a _c_u_r_r_e_n_t _t_e_r_m_i_n_a_l _p_r_o_c_e_s_s
       _g_r_o_u_p _I_D.  Members of this process group (processes whose process group			       _g_r_o_u_p _I_D.  Members of this process group (processes whose process group
       ID is equal to the current terminal process group ID) receive keyboard-			       ID is equal to the current terminal process group ID) receive keyboard-
       generated  signals  such  as SSIIGGIINNTT.  These processes are said to be in		      |	       generated signals such as SSIIGGIINNTT.  These processes are said  to  be  in
       the _f_o_r_e_g_r_o_u_n_d.  _B_a_c_k_g_r_o_u_n_d processes are those whose process group  ID		      |	       the  _f_o_r_e_g_r_o_u_n_d.  _B_a_c_k_g_r_o_u_n_d processes are those whose process group ID
       differs from the terminal's; such processes are immune to keyboard-gen-			       differs from the terminal's; such processes are immune to keyboard-gen-
       erated signals.  Only foreground processes are allowed to read from  or		      |	       erated signals.  Only foreground processes are allowed to read from or,
       write to the terminal.  Background processes which attempt to read from		      |	       if the user so specifies with  stty  tostop,  write  to  the  terminal.
       (write to) the terminal are sent a SSIIGGTTTTIINN ((SSIIGGTTTTOOUU)) signal by the ter-		      |	       Background  processes  which  attempt  to read from (write to when stty
       minal driver, which, unless caught, suspends the process.			      |	       tostop is in effect) the terminal are sent a SSIIGGTTTTIINN  ((SSIIGGTTTTOOUU))  signal
											      >	       by  the  kernel's  terminal  driver, which, unless caught, suspends the
											      >	       process.

       If  the operating system on which bbaasshh is running supports job control,		      |	       If the operating system on which bbaasshh is running supports job  control,
       bbaasshh contains facilities to use it.  Typing the _s_u_s_p_e_n_d character (typ-			       bbaasshh contains facilities to use it.  Typing the _s_u_s_p_e_n_d character (typ-
       ically ^^ZZ, Control-Z) while a process is running causes that process to			       ically ^^ZZ, Control-Z) while a process is running causes that process to
       be stopped and returns control to bbaasshh.   Typing  the  _d_e_l_a_y_e_d  _s_u_s_p_e_n_d		      |	       be  stopped  and  returns  control to bbaasshh.  Typing the _d_e_l_a_y_e_d _s_u_s_p_e_n_d
       character  (typically  ^^YY,  Control-Y) causes the process to be stopped		      |	       character (typically ^^YY, Control-Y) causes the process  to  be  stopped
       when it attempts to read input from the terminal,  and  control  to  be		      |	       when  it  attempts  to  read input from the terminal, and control to be
       returned  to bbaasshh.  The user may then manipulate the state of this job,		      |	       returned to bbaasshh.  The user may then manipulate the state of this  job,
       using the bbgg command to continue it in the background, the  ffgg  command		      |	       using  the  bbgg command to continue it in the background, the ffgg command
       to continue it in the foreground, or the kkiillll command to kill it.  A ^^ZZ			       to continue it in the foreground, or the kkiillll command to kill it.  A ^^ZZ
       takes effect immediately, and has the additional side effect of causing			       takes effect immediately, and has the additional side effect of causing
       pending output and typeahead to be discarded.						       pending output and typeahead to be discarded.

       There are a number of ways to refer to a job in the shell.  The charac-			       There are a number of ways to refer to a job in the shell.  The charac-
       ter %% introduces a job name.  Job number _n may be referred to as %%nn.  A		      |	       ter  %%  introduces  a job specification (_j_o_b_s_p_e_c).  Job number _n may be
       job  may  also  be referred to using a prefix of the name used to start		      |	       referred to as %%nn.  A job may also be referred to using a prefix of the
       it, or using a substring that appears in its command line.   For  exam-		      |	       name used to start it, or using a substring that appears in its command
       ple, %%ccee refers to a stopped ccee job.  If a prefix matches more than one		      |	       line.  For example, %%ccee refers to  a  stopped  ccee  job.   If  a  prefix
       job, bbaasshh reports an error.  Using %%??ccee, on the other hand,  refers  to		      |	       matches  more  than one job, bbaasshh reports an error.  Using %%??ccee, on the
       any job containing the string ccee in its command line.  If the substring		      |	       other hand, refers to any job containing the string ccee in  its  command
       matches more than one job, bbaasshh reports an error.  The symbols  %%%%  and		      |	       line.   If  the  substring  matches  more than one job, bbaasshh reports an
       %%++  refer  to  the shell's notion of the _c_u_r_r_e_n_t _j_o_b, which is the last		      |	       error.  The symbols %%%% and %%++ refer to the shell's notion of  the  _c_u_r_-
       job stopped while it was in the foreground  or  started  in  the  back-		      |	       _r_e_n_t  _j_o_b, which is the last job stopped while it was in the foreground
       ground.   The  _p_r_e_v_i_o_u_s _j_o_b may be referenced using %%--.  In output per-		      |	       or started in the background.  The _p_r_e_v_i_o_u_s _j_o_b may be referenced using
       taining to jobs (e.g., the output of the jjoobbss command), the current job		      |	       %%--.  If there is only a single job, %%++ and %%-- can both be used to refer
       is  always flagged with a ++, and the previous job with a --.  A single %		      |	       to that job.  In output pertaining to jobs (e.g.,  the  output  of  the
       (with no accompanying job specification) also  refers  to  the  current		      |	       jjoobbss command), the current job is always flagged with a ++, and the pre-
       job.										      |	       vious job with a --.  A single % (with no  accompanying  job  specifica-
											      >	       tion) also refers to the current job.

       Simply  naming a job can be used to bring it into the foreground: %%11 is			       Simply  naming a job can be used to bring it into the foreground: %%11 is
       a synonym for ````ffgg %%11'''', bringing job 1 from the  background  into  the			       a synonym for ````ffgg %%11'''', bringing job 1 from the  background  into  the
       foreground.   Similarly,  ````%%11  &&''''  resumes  job  1 in the background,			       foreground.   Similarly,  ````%%11  &&''''  resumes  job  1 in the background,
       equivalent to ````bbgg %%11''''.									       equivalent to ````bbgg %%11''''.

       The shell learns immediately whenever a job changes  state.   Normally,			       The shell learns immediately whenever a job changes  state.   Normally,
       bbaasshh waits until it is about to print a prompt before reporting changes			       bbaasshh waits until it is about to print a prompt before reporting changes
       in a job's status so as to not interrupt any other output.  If  the  --bb			       in a job's status so as to not interrupt any other output.  If  the  --bb
       option to the sseett builtin command is enabled, bbaasshh reports such changes			       option to the sseett builtin command is enabled, bbaasshh reports such changes
       immediately.  Any trap on SSIIGGCCHHLLDD  is  executed  for  each  child  that			       immediately.  Any trap on SSIIGGCCHHLLDD  is  executed  for  each  child  that
       exits.											       exits.

       If  an  attempt  to exit bbaasshh is made while jobs are stopped, the shell		      |	       If  an  attempt to exit bbaasshh is made while jobs are stopped (or, if the
       prints a warning message.  The jjoobbss command may then be used to inspect		      |	       cchheecckkjjoobbss shell option has been enabled using the sshhoopptt  builtin,  run-
       their status.  If a second attempt to exit is made without an interven-		      |	       ning), the shell prints a warning message, and, if the cchheecckkjjoobbss option
       ing command, the shell does not print another warning, and the  stopped		      |	       is enabled, lists the jobs and their statuses.  The  jjoobbss  command  may
       jobs are terminated.								      |	       then  be  used to inspect their status.  If a second attempt to exit is
											      >	       made without an intervening command, the shell does not  print  another
											      >	       warning, and any stopped jobs are terminated.
											      >
											      >	       When  the shell is waiting for a job or process using the wwaaiitt builtin,
											      >	       and job control is enabled, wwaaiitt  will  return  when  the  job  changes
											      >	       state.  The  --ff option will force wwaaiitt to wait until the job or process
											      >	       terminates before returning.

PPRROOMMPPTTIINNGG											PPRROOMMPPTTIINNGG
       When executing interactively, bbaasshh displays the primary prompt PPSS11 when			       When executing interactively, bbaasshh displays the primary prompt PPSS11 when
       it is ready to read a command, and the secondary  prompt  PPSS22  when  it		      |	       it  is  ready  to  read a command, and the secondary prompt PPSS22 when it
       needs  more  input  to  complete  a  command.  BBaasshh allows these prompt		      |	       needs more input to complete a command.  BBaasshh  displays  PPSS00  after  it
       strings to be customized by inserting  a  number  of  backslash-escaped		      |	       reads  a  command  but  before  executing  it.   BBaasshh  displays  PPSS44 as
       special characters that are decoded as follows:					      |	       described above before tracing each  command  when  the  --xx  option  is
											      >	       enabled.   BBaasshh allows these prompt strings to be customized by insert-
											      >	       ing a number of backslash-escaped special characters that  are  decoded
											      >	       as follows:
              \\aa     an ASCII bell character (07)						              \\aa     an ASCII bell character (07)
              \\dd     the  date  in "Weekday Month Date" format (e.g., "Tue May			              \\dd     the  date  in "Weekday Month Date" format (e.g., "Tue May
                     26")									                     26")
              \\DD{{_f_o_r_m_a_t}}									              \\DD{{_f_o_r_m_a_t}}
                     the _f_o_r_m_a_t is passed to _s_t_r_f_t_i_m_e(3)  and  the  result  is			                     the _f_o_r_m_a_t is passed to _s_t_r_f_t_i_m_e(3)  and  the  result  is
                     inserted  into the prompt string; an empty _f_o_r_m_a_t results			                     inserted  into the prompt string; an empty _f_o_r_m_a_t results
                     in a locale-specific time representation.  The braces are			                     in a locale-specific time representation.  The braces are
                     required									                     required
              \\ee     an ASCII escape character (033)						              \\ee     an ASCII escape character (033)
              \\hh     the hostname up to the first `.'						              \\hh     the hostname up to the first `.'
              \\HH     the hostname								              \\HH     the hostname
              \\jj     the number of jobs currently managed by the shell				              \\jj     the number of jobs currently managed by the shell
              \\ll     the basename of the shell's terminal device name				              \\ll     the basename of the shell's terminal device name
              \\nn     newline									              \\nn     newline
              \\rr     carriage return								              \\rr     carriage return
              \\ss     the  name  of  the shell, the basename of $$00 (the portion			              \\ss     the  name  of  the shell, the basename of $$00 (the portion
                     following the final slash)							                     following the final slash)
              \\tt     the current time in 24-hour HH:MM:SS format				              \\tt     the current time in 24-hour HH:MM:SS format
              \\TT     the current time in 12-hour HH:MM:SS format				              \\TT     the current time in 12-hour HH:MM:SS format
              \\@@     the current time in 12-hour am/pm format					              \\@@     the current time in 12-hour am/pm format
              \\AA     the current time in 24-hour HH:MM format					              \\AA     the current time in 24-hour HH:MM format
              \\uu     the username of the current user						              \\uu     the username of the current user
              \\vv     the version of bbaasshh (e.g., 2.00)						              \\vv     the version of bbaasshh (e.g., 2.00)
              \\VV     the release of bbaasshh, version + patch level (e.g., 2.00.0)			              \\VV     the release of bbaasshh, version + patch level (e.g., 2.00.0)
              \\ww     the  current  working  directory,  with $$HHOOMMEE abbreviated			              \\ww     the  current  working  directory,  with $$HHOOMMEE abbreviated
                     with a tilde							      |	                     with a tilde (uses the value of the PPRROOMMPPTT__DDIIRRTTRRIIMM  vari-
											      >	                     able)
              \\WW     the basename of the current working directory, with $$HHOOMMEE			              \\WW     the basename of the current working directory, with $$HHOOMMEE
                     abbreviated with a tilde							                     abbreviated with a tilde
              \\!!     the history number of this command						              \\!!     the history number of this command
              \\##     the command number of this command						              \\##     the command number of this command
              \\$$     if the effective UID is 0, a ##, otherwise a $$				              \\$$     if the effective UID is 0, a ##, otherwise a $$
              \\_n_n_n   the character corresponding to the octal number _n_n_n			              \\_n_n_n   the character corresponding to the octal number _n_n_n
              \\\\     a backslash								              \\\\     a backslash
              \\[[     begin  a sequence of non-printing characters, which could		      |	              \\[[     begin a sequence of non-printing characters, which  could
                     be used to embed a terminal  control  sequence  into  the		      |	                     be  used  to  embed  a terminal control sequence into the
                     prompt									                     prompt
              \\]]     end a sequence of non-printing characters					              \\]]     end a sequence of non-printing characters

       The  command  number  and the history number are usually different: the		      |	       The command number and the history number are  usually  different:  the
       history number of a command is its position in the history list,  which		      |	       history  number of a command is its position in the history list, which
       may  include  commands  restored  from  the  history  file (see HHIISSTTOORRYY		      |	       may include commands  restored  from  the  history  file  (see  HHIISSTTOORRYY
       below), while the command number is the position  in  the  sequence  of		      |	       below),  while  the  command  number is the position in the sequence of
       commands  executed  during the current shell session.  After the string		      |	       commands executed during the current shell session.  After  the  string
       is decoded, it is expanded via parameter expansion,  command  substitu-		      |	       is  decoded,  it is expanded via parameter expansion, command substitu-
       tion,  arithmetic expansion, and quote removal, subject to the value of		      |	       tion, arithmetic expansion, and quote removal, subject to the value  of
       the pprroommppttvvaarrss shell option (see the description of the  sshhoopptt  command		      |	       the  pprroommppttvvaarrss  shell option (see the description of the sshhoopptt command
       under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).							       under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).

RREEAADDLLIINNEE											RREEAADDLLIINNEE
       This  is  the library that handles reading input when using an interac-		      |	       This is the library that handles reading input when using  an  interac-
       tive shell, unless the ----nnooeeddiittiinngg option is given at shell invocation.			       tive shell, unless the ----nnooeeddiittiinngg option is given at shell invocation.
       By default, the line editing commands are similar to those of emacs.  A		      |	       Line editing is also used when using the --ee option to the rreeaadd builtin.
       vi-style line editing interface is also available.  To  turn  off  line		      |	       By default, the line editing commands are similar to those of Emacs.  A
       editing  after  the shell is running, use the ++oo eemmaaccss or ++oo vvii options		      |	       vi-style line editing interface is also available.  Line editing can be
       to the sseett builtin (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).				      |	       enabled  at  any  time  using  the --oo eemmaaccss or --oo vvii options to the sseett
											      >	       builtin (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  To turn off  line  editing
											      >	       after  the  shell  is running, use the ++oo eemmaaccss or ++oo vvii options to the
											      >	       sseett builtin.

   RReeaaddlliinnee NNoottaattiioonn										   RReeaaddlliinnee NNoottaattiioonn
       In this section, the emacs-style notation is used to denote keystrokes.		      |	       In this section, the Emacs-style notation is used to denote keystrokes.
       Control  keys  are  denoted by C-_k_e_y, e.g., C-n means Control-N.  Simi-			       Control  keys  are  denoted by C-_k_e_y, e.g., C-n means Control-N.  Simi-
       larly, _m_e_t_a keys are denoted by M-_k_e_y, so M-x means Meta-X.   (On  key-			       larly, _m_e_t_a keys are denoted by M-_k_e_y, so M-x means Meta-X.   (On  key-
       boards  without a _m_e_t_a key, M-_x means ESC _x, i.e., press the Escape key			       boards  without a _m_e_t_a key, M-_x means ESC _x, i.e., press the Escape key
       then the _x key.  This makes ESC the _m_e_t_a _p_r_e_f_i_x.  The combination M-C-_x			       then the _x key.  This makes ESC the _m_e_t_a _p_r_e_f_i_x.  The combination M-C-_x
       means  ESC-Control-_x, or press the Escape key then hold the Control key			       means  ESC-Control-_x, or press the Escape key then hold the Control key
       while pressing the _x key.)								       while pressing the _x key.)

       Readline commands may be given numeric _a_r_g_u_m_e_n_t_s, which normally act as			       Readline commands may be given numeric _a_r_g_u_m_e_n_t_s, which normally act as
       a  repeat  count.   Sometimes,  however, it is the sign of the argument			       a  repeat  count.   Sometimes,  however, it is the sign of the argument
       that is significant.  Passing a negative argument  to  a  command  that			       that is significant.  Passing a negative argument  to  a  command  that
       acts  in the forward direction (e.g., kkiillll--lliinnee) causes that command to			       acts  in the forward direction (e.g., kkiillll--lliinnee) causes that command to
       act in a backward direction.  Commands whose  behavior  with  arguments			       act in a backward direction.  Commands whose  behavior  with  arguments
       deviates from this are noted below.							       deviates from this are noted below.

       When  a command is described as _k_i_l_l_i_n_g text, the text deleted is saved			       When  a command is described as _k_i_l_l_i_n_g text, the text deleted is saved
       for possible future retrieval (_y_a_n_k_i_n_g).  The killed text is saved in a			       for possible future retrieval (_y_a_n_k_i_n_g).  The killed text is saved in a
       _k_i_l_l _r_i_n_g.  Consecutive kills cause the text to be accumulated into one			       _k_i_l_l _r_i_n_g.  Consecutive kills cause the text to be accumulated into one
       unit, which can be yanked all at once.  Commands which do not kill text			       unit, which can be yanked all at once.  Commands which do not kill text
       separate the chunks of text on the kill ring.						       separate the chunks of text on the kill ring.

   RReeaaddlliinnee IInniittiiaalliizzaattiioonn									   RReeaaddlliinnee IInniittiiaalliizzaattiioonn
       Readline  is  customized  by putting commands in an initialization file			       Readline  is  customized  by putting commands in an initialization file
       (the _i_n_p_u_t_r_c file).  The name of this file is taken from the  value  of			       (the _i_n_p_u_t_r_c file).  The name of this file is taken from the  value  of
       the  IINNPPUUTTRRCC  variable.   If  that  variable  is  unset, the default is			       the  IINNPPUUTTRRCC  variable.   If  that  variable  is  unset, the default is
       _~_/_._i_n_p_u_t_r_c.  When a program which uses the readline library starts  up,			       _~_/_._i_n_p_u_t_r_c.  When a program which uses the readline library starts  up,
       the initialization file is read, and the key bindings and variables are			       the initialization file is read, and the key bindings and variables are
       set.  There are only a few basic constructs  allowed  in  the  readline			       set.  There are only a few basic constructs  allowed  in  the  readline
       initialization  file.  Blank lines are ignored.  Lines beginning with a			       initialization  file.  Blank lines are ignored.  Lines beginning with a
       ## are comments.  Lines beginning with a  $$  indicate  conditional  con-			       ## are comments.  Lines beginning with a  $$  indicate  conditional  con-
       structs.  Other lines denote key bindings and variable settings.				       structs.  Other lines denote key bindings and variable settings.

       The  default  key-bindings  may be changed with an _i_n_p_u_t_r_c file.  Other			       The  default  key-bindings  may be changed with an _i_n_p_u_t_r_c file.  Other
       programs that use this library may add their own commands and bindings.			       programs that use this library may add their own commands and bindings.

       For example, placing									       For example, placing

              M-Control-u: universal-argument							              M-Control-u: universal-argument
       or											       or
              C-Meta-u: universal-argument							              C-Meta-u: universal-argument
       into  the _i_n_p_u_t_r_c would make M-C-u execute the readline command _u_n_i_v_e_r_-			       into  the _i_n_p_u_t_r_c would make M-C-u execute the readline command _u_n_i_v_e_r_-
       _s_a_l_-_a_r_g_u_m_e_n_t.										       _s_a_l_-_a_r_g_u_m_e_n_t.

       The following symbolic character names  are  recognized:  _R_U_B_O_U_T,  _D_E_L,			       The following symbolic character names  are  recognized:  _R_U_B_O_U_T,  _D_E_L,
       _E_S_C, _L_F_D, _N_E_W_L_I_N_E, _R_E_T, _R_E_T_U_R_N, _S_P_C, _S_P_A_C_E, and _T_A_B.					       _E_S_C, _L_F_D, _N_E_W_L_I_N_E, _R_E_T, _R_E_T_U_R_N, _S_P_C, _S_P_A_C_E, and _T_A_B.

       In  addition  to  command  names, readline allows keys to be bound to a			       In  addition  to  command  names, readline allows keys to be bound to a
       string that is inserted when the key is pressed (a _m_a_c_r_o).				       string that is inserted when the key is pressed (a _m_a_c_r_o).

   RReeaaddlliinnee KKeeyy BBiinnddiinnggss									   RReeaaddlliinnee KKeeyy BBiinnddiinnggss
       The syntax for controlling key bindings in the _i_n_p_u_t_r_c file is  simple.			       The syntax for controlling key bindings in the _i_n_p_u_t_r_c file is  simple.
       All  that is required is the name of the command or the text of a macro			       All  that is required is the name of the command or the text of a macro
       and a key sequence to which it should be bound. The name may be  speci-		      |	       and a key sequence to which it should be bound.  The name may be speci-
       fied in one of two ways: as a symbolic key name, possibly with _M_e_t_a_- or			       fied in one of two ways: as a symbolic key name, possibly with _M_e_t_a_- or
       _C_o_n_t_r_o_l_- prefixes, or as a key sequence.							       _C_o_n_t_r_o_l_- prefixes, or as a key sequence.

       When using the form kkeeyynnaammee:_f_u_n_c_t_i_o_n_-_n_a_m_e or _m_a_c_r_o, _k_e_y_n_a_m_e is the name			       When using the form kkeeyynnaammee:_f_u_n_c_t_i_o_n_-_n_a_m_e or _m_a_c_r_o, _k_e_y_n_a_m_e is the name
       of a key spelled out in English.  For example:						       of a key spelled out in English.  For example:

              Control-u: universal-argument							              Control-u: universal-argument
              Meta-Rubout: backward-kill-word							              Meta-Rubout: backward-kill-word
              Control-o: "> output"								              Control-o: "> output"

       In  the above example, _C_-_u is bound to the function uunniivveerrssaall--aarrgguummeenntt,			       In  the above example, _C_-_u is bound to the function uunniivveerrssaall--aarrgguummeenntt,
       _M_-_D_E_L is bound to the function bbaacckkwwaarrdd--kkiillll--wwoorrdd, and _C_-_o is bound  to			       _M_-_D_E_L is bound to the function bbaacckkwwaarrdd--kkiillll--wwoorrdd, and _C_-_o is bound  to
       run  the macro expressed on the right hand side (that is, to insert the			       run  the macro expressed on the right hand side (that is, to insert the
       text ``> output'' into the line).							       text ``> output'' into the line).

       In the second form, ""kkeeyysseeqq"":_f_u_n_c_t_i_o_n_-_n_a_m_e  or  _m_a_c_r_o,  kkeeyysseeqq  differs			       In the second form, ""kkeeyysseeqq"":_f_u_n_c_t_i_o_n_-_n_a_m_e  or  _m_a_c_r_o,  kkeeyysseeqq  differs
       from  kkeeyynnaammee above in that strings denoting an entire key sequence may			       from  kkeeyynnaammee above in that strings denoting an entire key sequence may
       be specified by placing the sequence within double  quotes.   Some  GNU			       be specified by placing the sequence within double  quotes.   Some  GNU
       Emacs  style  key escapes can be used, as in the following example, but			       Emacs  style  key escapes can be used, as in the following example, but
       the symbolic character names are not recognized.						       the symbolic character names are not recognized.

              "\C-u": universal-argument							              "\C-u": universal-argument
              "\C-x\C-r": re-read-init-file							              "\C-x\C-r": re-read-init-file
              "\e[11~": "Function Key 1"							              "\e[11~": "Function Key 1"

       In this example, _C_-_u is again bound to the function uunniivveerrssaall--aarrgguummeenntt.			       In this example, _C_-_u is again bound to the function uunniivveerrssaall--aarrgguummeenntt.
       _C_-_x  _C_-_r is bound to the function rree--rreeaadd--iinniitt--ffiillee, and _E_S_C _[ _1 _1 _~ is			       _C_-_x  _C_-_r is bound to the function rree--rreeaadd--iinniitt--ffiillee, and _E_S_C _[ _1 _1 _~ is
       bound to insert the text ``Function Key 1''.						       bound to insert the text ``Function Key 1''.

       The full set of GNU Emacs style escape sequences is					       The full set of GNU Emacs style escape sequences is
              \\CC--    control prefix								              \\CC--    control prefix
              \\MM--    meta prefix								              \\MM--    meta prefix
              \\ee     an escape character							              \\ee     an escape character
              \\\\     backslash									              \\\\     backslash
              \\""     literal "									              \\""     literal "
              \\''     literal '									              \\''     literal '

       In addition to the GNU Emacs style escape sequences, a  second  set  of			       In addition to the GNU Emacs style escape sequences, a  second  set  of
       backslash escapes is available:								       backslash escapes is available:
              \\aa     alert (bell)								              \\aa     alert (bell)
              \\bb     backspace									              \\bb     backspace
              \\dd     delete									              \\dd     delete
              \\ff     form feed									              \\ff     form feed
              \\nn     newline									              \\nn     newline
              \\rr     carriage return								              \\rr     carriage return
              \\tt     horizontal tab								              \\tt     horizontal tab
              \\vv     vertical tab								              \\vv     vertical tab
              \\_n_n_n   the  eight-bit  character  whose value is the octal value			              \\_n_n_n   the  eight-bit  character  whose value is the octal value
                     _n_n_n (one to three digits)							                     _n_n_n (one to three digits)
              \\xx_H_H   the eight-bit character whose value  is  the  hexadecimal			              \\xx_H_H   the eight-bit character whose value  is  the  hexadecimal
                     value _H_H (one or two hex digits)						                     value _H_H (one or two hex digits)

       When entering the text of a macro, single or double quotes must be used			       When entering the text of a macro, single or double quotes must be used
       to indicate a macro definition.  Unquoted text is assumed to be a func-			       to indicate a macro definition.  Unquoted text is assumed to be a func-
       tion  name.   In  the macro body, the backslash escapes described above			       tion  name.   In  the macro body, the backslash escapes described above
       are expanded.  Backslash will quote any other character  in  the  macro			       are expanded.  Backslash will quote any other character  in  the  macro
       text, including " and '.									       text, including " and '.

       BBaasshh  allows the current readline key bindings to be displayed or modi-			       BBaasshh  allows the current readline key bindings to be displayed or modi-
       fied with the bbiinndd builtin command.  The editing mode may  be  switched			       fied with the bbiinndd builtin command.  The editing mode may  be  switched
       during  interactive  use by using the --oo option to the sseett builtin com-			       during  interactive  use by using the --oo option to the sseett builtin com-
       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).							       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).

   RReeaaddlliinnee VVaarriiaabblleess										   RReeaaddlliinnee VVaarriiaabblleess
       Readline has variables that can be used to further customize its behav-			       Readline has variables that can be used to further customize its behav-
       ior.  A variable may be set in the _i_n_p_u_t_r_c file with a statement of the			       ior.  A variable may be set in the _i_n_p_u_t_r_c file with a statement of the
       form											       form

              sseett _v_a_r_i_a_b_l_e_-_n_a_m_e _v_a_l_u_e								              sseett _v_a_r_i_a_b_l_e_-_n_a_m_e _v_a_l_u_e

       Except where noted, readline variables can take the values  OOnn  or  OOffff			       Except where noted, readline variables can take the values  OOnn  or  OOffff
       (without  regard  to  case).   Unrecognized variable names are ignored.			       (without  regard  to  case).   Unrecognized variable names are ignored.
       When a variable value is read, empty or null values, "on"  (case-insen-			       When a variable value is read, empty or null values, "on"  (case-insen-
       sitive), and "1" are equivalent to OOnn.  All other values are equivalent			       sitive), and "1" are equivalent to OOnn.  All other values are equivalent
       to OOffff.  The variables and their default values are:					       to OOffff.  The variables and their default values are:

       bbeellll--ssttyyllee ((aauuddiibbllee))									       bbeellll--ssttyyllee ((aauuddiibbllee))
              Controls what happens when readline wants to ring  the  terminal			              Controls what happens when readline wants to ring  the  terminal
              bell.  If set to nnoonnee, readline never rings the bell.  If set to			              bell.  If set to nnoonnee, readline never rings the bell.  If set to
              vviissiibbllee, readline uses a visible bell if one is  available.   If			              vviissiibbllee, readline uses a visible bell if one is  available.   If
              set to aauuddiibbllee, readline attempts to ring the terminal's bell.			              set to aauuddiibbllee, readline attempts to ring the terminal's bell.
       bbiinndd--ttttyy--ssppeecciiaall--cchhaarrss ((OOnn))								       bbiinndd--ttttyy--ssppeecciiaall--cchhaarrss ((OOnn))
              If  set  to OOnn, readline attempts to bind the control characters			              If  set  to OOnn, readline attempts to bind the control characters
              treated specially by the kernel's terminal driver to their read-			              treated specially by the kernel's terminal driver to their read-
              line equivalents.									              line equivalents.
											      >	       bblliinnkk--mmaattcchhiinngg--ppaarreenn ((OOffff))
											      >	              If set to OOnn, readline attempts to briefly move the cursor to an
											      >	              opening parenthesis when a closing parenthesis is inserted.
											      >	       ccoolloorreedd--ccoommpplleettiioonn--pprreeffiixx ((OOffff))
											      >	              If set to OOnn, when listing completions,  readline  displays  the
											      >	              common prefix of the set of possible completions using a differ-
											      >	              ent color.  The color definitions are taken from  the  value  of
											      >	              the LLSS__CCOOLLOORRSS environment variable.
											      >	       ccoolloorreedd--ssttaattss ((OOffff))
											      >	              If  set to OOnn, readline displays possible completions using dif-
											      >	              ferent colors to indicate their file type.   The  color  defini-
											      >	              tions  are  taken  from  the  value of the LLSS__CCOOLLOORRSS environment
											      >	              variable.
       ccoommmmeenntt--bbeeggiinn ((````##''''))									       ccoommmmeenntt--bbeeggiinn ((````##''''))
              The  string  that  is  inserted when the readline iinnsseerrtt--ccoommmmeenntt		      |	              The string that is inserted  when  the  readline  iinnsseerrtt--ccoommmmeenntt
              command is executed.  This command is bound to MM--## in emacs mode			              command is executed.  This command is bound to MM--## in emacs mode
              and to ## in vi command mode.							              and to ## in vi command mode.
											      >	       ccoommpplleettiioonn--ddiissppllaayy--wwiiddtthh ((--11))
											      >	              The number of screen columns used to  display  possible  matches
											      >	              when  performing completion.  The value is ignored if it is less
											      >	              than 0 or greater than the terminal screen width.  A value of  0
											      >	              will  cause  matches  to be displayed one per line.  The default
											      >	              value is -1.
       ccoommpplleettiioonn--iiggnnoorree--ccaassee ((OOffff))								       ccoommpplleettiioonn--iiggnnoorree--ccaassee ((OOffff))
              If set to OOnn, readline performs filename matching and completion			              If set to OOnn, readline performs filename matching and completion
              in a case-insensitive fashion.							              in a case-insensitive fashion.
											      >	       ccoommpplleettiioonn--mmaapp--ccaassee ((OOffff))
											      >	              If  set  to  OOnn, and ccoommpplleettiioonn--iiggnnoorree--ccaassee is enabled, readline
											      >	              treats hyphens (_-) and underscores (__) as equivalent  when  per-
											      >	              forming case-insensitive filename matching and completion.
											      >	       ccoommpplleettiioonn--pprreeffiixx--ddiissppllaayy--lleennggtthh ((00))
											      >	              The  length in characters of the common prefix of a list of pos-
											      >	              sible completions that is displayed without modification.   When
											      >	              set  to  a  value greater than zero, common prefixes longer than
											      >	              this value are replaced with an ellipsis when displaying  possi-
											      >	              ble completions.
       ccoommpplleettiioonn--qquueerryy--iitteemmss ((110000))								       ccoommpplleettiioonn--qquueerryy--iitteemmss ((110000))
              This determines when the user is queried about viewing the  num-		      |	              This  determines when the user is queried about viewing the num-
              ber  of  possible  completions generated by the ppoossssiibbllee--ccoommppllee--		      |	              ber of possible completions generated  by  the  ppoossssiibbllee--ccoommppllee--
              ttiioonnss command.  It may be set to any integer value greater  than		      |	              ttiioonnss  command.  It may be set to any integer value greater than
              or  equal  to  zero.   If  the number of possible completions is		      |	              or equal to zero.  If the  number  of  possible  completions  is
              greater than or equal to the value of this variable, the user is			              greater than or equal to the value of this variable, the user is
              asked  whether or not he wishes to view them; otherwise they are		      |	              asked whether or not he wishes to view them; otherwise they  are
              simply listed on the terminal.							              simply listed on the terminal.
       ccoonnvveerrtt--mmeettaa ((OOnn))									       ccoonnvveerrtt--mmeettaa ((OOnn))
              If set to OOnn, readline will convert characters with  the  eighth		      |	              If  set  to OOnn, readline will convert characters with the eighth
              bit set to an ASCII key sequence by stripping the eighth bit and			              bit set to an ASCII key sequence by stripping the eighth bit and
              prefixing an escape character (in effect, using  escape  as  the		      |	              prefixing  an  escape  character (in effect, using escape as the
              _m_e_t_a _p_r_e_f_i_x).								      |	              _m_e_t_a _p_r_e_f_i_x).  The default is _O_n, but readline will  set  it  to
											      >	              _O_f_f if the locale contains eight-bit characters.
       ddiissaabbllee--ccoommpplleettiioonn ((OOffff))									       ddiissaabbllee--ccoommpplleettiioonn ((OOffff))
              If set to OOnn, readline will inhibit word completion.  Completion			              If set to OOnn, readline will inhibit word completion.  Completion
              characters will be inserted into the line as if  they  had  been			              characters will be inserted into the line as if  they  had  been
              mapped to sseellff--iinnsseerrtt.								              mapped to sseellff--iinnsseerrtt.
											      >	       eecchhoo--ccoonnttrrooll--cchhaarraacctteerrss ((OOnn))
											      >	              When  set to OOnn, on operating systems that indicate they support
											      >	              it, readline echoes a character corresponding to a signal gener-
											      >	              ated from the keyboard.
       eeddiittiinngg--mmooddee ((eemmaaccss))									       eeddiittiinngg--mmooddee ((eemmaaccss))
              Controls whether readline begins with a set of key bindings sim-			              Controls whether readline begins with a set of key bindings sim-
              ilar to _e_m_a_c_s or _v_i.  eeddiittiinngg--mmooddee can be set to either eemmaaccss or		      |	              ilar to _E_m_a_c_s or _v_i.  eeddiittiinngg--mmooddee can be set to either eemmaaccss or
              vvii.										              vvii.
											      >	       eemmaaccss--mmooddee--ssttrriinngg ((@@))
											      >	              If  the  _s_h_o_w_-_m_o_d_e_-_i_n_-_p_r_o_m_p_t variable is enabled, this string is
											      >	              displayed immediately before the last line of the primary prompt
											      >	              when emacs editing mode is active.  The value is expanded like a
											      >	              key binding, so the standard set of meta- and  control  prefixes
											      >	              and  backslash escape sequences is available.  Use the \1 and \2
											      >	              escapes to begin and end sequences of  non-printing  characters,
											      >	              which  can be used to embed a terminal control sequence into the
											      >	              mode string.
											      >	       eennaabbllee--bbrraacckkeetteedd--ppaassttee ((OOffff))
											      >	              When set to OOnn, readline will configure the terminal  in  a  way
											      >	              that will enable it to insert each paste into the editing buffer
											      >	              as a single string of characters, instead of treating each char-
											      >	              acter  as  if it had been read from the keyboard.  This can pre-
											      >	              vent pasted characters from being interpreted  as  editing  com-
											      >	              mands.
       eennaabbllee--kkeeyyppaadd ((OOffff))									       eennaabbllee--kkeeyyppaadd ((OOffff))
              When set to OOnn, readline will try to enable the application key-			              When set to OOnn, readline will try to enable the application key-
              pad when it is called.  Some systems need  this  to  enable  the			              pad when it is called.  Some systems need  this  to  enable  the
              arrow keys.									              arrow keys.
											      >	       eennaabbllee--mmeettaa--kkeeyy ((OOnn))
											      >	              When  set  to  OOnn, readline will try to enable any meta modifier
											      >	              key the terminal claims to support when it is called.   On  many
											      >	              terminals, the meta key is used to send eight-bit characters.
       eexxppaanndd--ttiillddee ((OOffff))									       eexxppaanndd--ttiillddee ((OOffff))
              If  set  to  oonn,  tilde  expansion  is  performed  when readline		      |	              If  set  to  OOnn,  tilde  expansion  is  performed  when readline
              attempts word completion.								              attempts word completion.
       hhiissttoorryy--pprreesseerrvvee--ppooiinntt ((OOffff))								       hhiissttoorryy--pprreesseerrvvee--ppooiinntt ((OOffff))
              If set to oonn, the history code attempts to place  point  at  the		      |	              If set to OOnn, the history code attempts to place  point  at  the
              same  location on each history line retrieved with pprreevviioouuss--hhiiss--			              same  location on each history line retrieved with pprreevviioouuss--hhiiss--
              ttoorryy or nneexxtt--hhiissttoorryy.								              ttoorryy or nneexxtt--hhiissttoorryy.
											      >	       hhiissttoorryy--ssiizzee ((uunnsseett))
											      >	              Set the maximum number of history entries saved in  the  history
											      >	              list.   If set to zero, any existing history entries are deleted
											      >	              and no new entries are saved.  If set to a value less than zero,
											      >	              the  number  of history entries is not limited.  By default, the
											      >	              number of history entries is set to the value  of  the  HHIISSTTSSIIZZEE
											      >	              shell  variable.  If an attempt is made to set _h_i_s_t_o_r_y_-_s_i_z_e to a
											      >	              non-numeric value, the maximum number of history entries will be
											      >	              set to 500.
       hhoorriizzoonnttaall--ssccrroollll--mmooddee ((OOffff))								       hhoorriizzoonnttaall--ssccrroollll--mmooddee ((OOffff))
              When set to OOnn, makes readline use a single  line  for  display,		      |	              When  set  to  OOnn, makes readline use a single line for display,
              scrolling the input horizontally on a single screen line when it			              scrolling the input horizontally on a single screen line when it
              becomes longer than the screen width rather than wrapping  to  a		      |	              becomes  longer  than the screen width rather than wrapping to a
              new line.										              new line.
       iinnppuutt--mmeettaa ((OOffff))										       iinnppuutt--mmeettaa ((OOffff))
              If  set to OOnn, readline will enable eight-bit input (that is, it		      |	              If set to OOnn, readline will enable eight-bit input (that is,  it
              will not strip the high  bit  from  the  characters  it  reads),		      |	              will  not  strip  the  eighth bit from the characters it reads),
              regardless of what the terminal claims it can support.  The name			              regardless of what the terminal claims it can support.  The name
              mmeettaa--ffllaagg is a synonym for this variable.					      |	              mmeettaa--ffllaagg  is  a synonym for this variable.  The default is _O_f_f,
											      >	              but readline will set it to _O_n if the locale contains  eight-bit
											      >	              characters.
       iisseeaarrcchh--tteerrmmiinnaattoorrss ((````CC--[[CC--JJ''''))								       iisseeaarrcchh--tteerrmmiinnaattoorrss ((````CC--[[CC--JJ''''))
              The string of characters that should  terminate  an  incremental		      |	              The  string  of  characters that should terminate an incremental
              search  without  subsequently  executing the character as a com-		      |	              search without subsequently executing the character  as  a  com-
              mand.  If this variable has not been given a value, the  charac-		      |	              mand.   If this variable has not been given a value, the charac-
              ters _E_S_C and _C_-_J will terminate an incremental search.				              ters _E_S_C and _C_-_J will terminate an incremental search.
       kkeeyymmaapp ((eemmaaccss))										       kkeeyymmaapp ((eemmaaccss))
              Set  the current readline keymap.  The set of valid keymap names		      |	              Set the current readline keymap.  The set of valid keymap  names
              is _e_m_a_c_s_, _e_m_a_c_s_-_s_t_a_n_d_a_r_d_, _e_m_a_c_s_-_m_e_t_a_,  _e_m_a_c_s_-_c_t_l_x_,  _v_i_,  _v_i_-_c_o_m_-		      |	              is  _e_m_a_c_s_,  _e_m_a_c_s_-_s_t_a_n_d_a_r_d_,  _e_m_a_c_s_-_m_e_t_a_, _e_m_a_c_s_-_c_t_l_x_, _v_i_, _v_i_-_c_o_m_-
              _m_a_n_d,  and  _v_i_-_i_n_s_e_r_t.  _v_i is equivalent to _v_i_-_c_o_m_m_a_n_d; _e_m_a_c_s is		      |	              _m_a_n_d, and _v_i_-_i_n_s_e_r_t.  _v_i is equivalent to _v_i_-_c_o_m_m_a_n_d;  _e_m_a_c_s  is
              equivalent to _e_m_a_c_s_-_s_t_a_n_d_a_r_d.  The default value is  _e_m_a_c_s;  the		      |	              equivalent  to  _e_m_a_c_s_-_s_t_a_n_d_a_r_d.  The default value is _e_m_a_c_s; the
              value of eeddiittiinngg--mmooddee also affects the default keymap.				              value of eeddiittiinngg--mmooddee also affects the default keymap.
											      >	       kkeeyysseeqq--ttiimmeeoouutt ((550000))
											      >	              Specifies the duration _r_e_a_d_l_i_n_e will wait for a  character  when
											      >	              reading  an ambiguous key sequence (one that can form a complete
											      >	              key sequence using the input read so far, or can take additional
											      >	              input  to  complete  a  longer  key  sequence).   If no input is
											      >	              received within the timeout, _r_e_a_d_l_i_n_e will use the  shorter  but
											      >	              complete  key sequence.  The value is specified in milliseconds,
											      >	              so a value of 1000 means that _r_e_a_d_l_i_n_e will wait one second  for
											      >	              additional  input.  If this variable is set to a value less than
											      >	              or equal to zero, or to a non-numeric value, _r_e_a_d_l_i_n_e will  wait
											      >	              until  another  key  is  pressed to decide which key sequence to
											      >	              complete.
       mmaarrkk--ddiirreeccttoorriieess ((OOnn))									       mmaarrkk--ddiirreeccttoorriieess ((OOnn))
              If set to OOnn, completed directory names have a slash appended.			              If set to OOnn, completed directory names have a slash appended.
       mmaarrkk--mmooddiiffiieedd--lliinneess ((OOffff))								       mmaarrkk--mmooddiiffiieedd--lliinneess ((OOffff))
              If  set  to  OOnn,  history lines that have been modified are dis-		      |	              If set to OOnn, history lines that have  been  modified  are  dis-
              played with a preceding asterisk (**).						              played with a preceding asterisk (**).
       mmaarrkk--ssyymmlliinnkkeedd--ddiirreeccttoorriieess ((OOffff))								       mmaarrkk--ssyymmlliinnkkeedd--ddiirreeccttoorriieess ((OOffff))
              If set to OOnn, completed names which are symbolic links to direc-			              If set to OOnn, completed names which are symbolic links to direc-
              tories   have   a  slash  appended  (subject  to  the  value  of		      |	              tories  have  a  slash  appended  (subject  to  the   value   of
              mmaarrkk--ddiirreeccttoorriieess).								              mmaarrkk--ddiirreeccttoorriieess).
       mmaattcchh--hhiiddddeenn--ffiilleess ((OOnn))									       mmaattcchh--hhiiddddeenn--ffiilleess ((OOnn))
              This variable, when set to OOnn, causes readline  to  match  files		      |	              This  variable,  when  set to OOnn, causes readline to match files
              whose  names  begin  with  a  `.' (hidden files) when performing		      |	              whose names begin with a  `.'  (hidden  files)  when  performing
              filename completion, unless the leading `.' is supplied  by  the		      |	              filename  completion.   If  set  to OOffff, the leading `.' must be
              user in the filename to be completed.					      |	              supplied by the user in the filename to be completed.
											      >	       mmeennuu--ccoommpplleettee--ddiissppllaayy--pprreeffiixx ((OOffff))
											      >	              If set to OOnn, menu completion displays the common prefix of  the
											      >	              list of possible completions (which may be empty) before cycling
											      >	              through the list.
       oouuttppuutt--mmeettaa ((OOffff))									       oouuttppuutt--mmeettaa ((OOffff))
              If  set  to OOnn, readline will display characters with the eighth		      |	              If set to OOnn, readline will display characters with  the  eighth
              bit set directly rather than as a meta-prefixed escape sequence.			              bit set directly rather than as a meta-prefixed escape sequence.
											      >	              The default is _O_f_f, but readline will set it to _O_n if the locale
											      >	              contains eight-bit characters.
       ppaaggee--ccoommpplleettiioonnss ((OOnn))									       ppaaggee--ccoommpplleettiioonnss ((OOnn))
              If  set to OOnn, readline uses an internal _m_o_r_e-like pager to dis-			              If  set to OOnn, readline uses an internal _m_o_r_e-like pager to dis-
              play a screenful of possible completions at a time.				              play a screenful of possible completions at a time.
       pprriinntt--ccoommpplleettiioonnss--hhoorriizzoonnttaallllyy ((OOffff))							       pprriinntt--ccoommpplleettiioonnss--hhoorriizzoonnttaallllyy ((OOffff))
              If set to OOnn, readline will  display  completions  with  matches			              If set to OOnn, readline will  display  completions  with  matches
              sorted  horizontally in alphabetical order, rather than down the			              sorted  horizontally in alphabetical order, rather than down the
              screen.										              screen.
											      >	       rreevveerrtt--aallll--aatt--nneewwlliinnee ((OOffff))
											      >	              If set to OOnn, readline will undo all changes  to  history  lines
											      >	              before returning when aacccceepptt--lliinnee is executed.  By default, his-
											      >	              tory lines may be modified  and  retain  individual  undo  lists
											      >	              across calls to rreeaaddlliinnee.
       sshhooww--aallll--iiff--aammbbiigguuoouuss ((OOffff))								       sshhooww--aallll--iiff--aammbbiigguuoouuss ((OOffff))
              This alters the default behavior of  the  completion  functions.		      |	              This  alters  the  default behavior of the completion functions.
              If set to oonn, words which have more than one possible completion		      |	              If set to OOnn, words which have more than one possible completion
              cause the matches to be listed immediately  instead  of  ringing		      |	              cause  the  matches  to be listed immediately instead of ringing
              the bell.										              the bell.
       sshhooww--aallll--iiff--uunnmmooddiiffiieedd ((OOffff))								       sshhooww--aallll--iiff--uunnmmooddiiffiieedd ((OOffff))
              This  alters the default behavior of the completion functions in		      |	              This alters the default behavior of the completion functions  in
              a fashion similar to sshhooww--aallll--iiff--aammbbiigguuoouuss.  If set to oonn, words		      |	              a fashion similar to sshhooww--aallll--iiff--aammbbiigguuoouuss.  If set to OOnn, words
              which  have more than one possible completion without any possi-		      |	              which have more than one possible completion without any  possi-
              ble partial completion (the possible completions don't  share  a		      |	              ble  partial  completion (the possible completions don't share a
              common  prefix)  cause  the  matches  to  be  listed immediately		      |	              common prefix)  cause  the  matches  to  be  listed  immediately
              instead of ringing the bell.							              instead of ringing the bell.
											      >	       sshhooww--mmooddee--iinn--pprroommpptt ((OOffff))
											      >	              If  set to OOnn, add a string to the beginning of the prompt indi-
											      >	              cating the editing mode: emacs, vi  command,  or  vi  insertion.
											      >	              The mode strings are user-settable (e.g., _e_m_a_c_s_-_m_o_d_e_-_s_t_r_i_n_g).
											      >	       sskkiipp--ccoommpplleetteedd--tteexxtt ((OOffff))
											      >	              If  set  to OOnn, this alters the default completion behavior when
											      >	              inserting a single match into the line.  It's only  active  when
											      >	              performing  completion  in  the  middle  of a word.  If enabled,
											      >	              readline does not insert characters  from  the  completion  that
											      >	              match  characters  after  point  in the word being completed, so
											      >	              portions of the word following the cursor are not duplicated.
											      >	       vvii--ccmmdd--mmooddee--ssttrriinngg ((((ccmmdd))))
											      >	              If the _s_h_o_w_-_m_o_d_e_-_i_n_-_p_r_o_m_p_t variable is enabled, this  string  is
											      >	              displayed immediately before the last line of the primary prompt
											      >	              when vi editing mode is active and in command mode.   The  value
											      >	              is expanded like a key binding, so the standard set of meta- and
											      >	              control prefixes and backslash escape  sequences  is  available.
											      >	              Use  the  \1  and  \2 escapes to begin and end sequences of non-
											      >	              printing characters, which can be used to embed a terminal  con-
											      >	              trol sequence into the mode string.
											      >	       vvii--iinnss--mmooddee--ssttrriinngg ((((iinnss))))
											      >	              If  the  _s_h_o_w_-_m_o_d_e_-_i_n_-_p_r_o_m_p_t variable is enabled, this string is
											      >	              displayed immediately before the last line of the primary prompt
											      >	              when vi editing mode is active and in insertion mode.  The value
											      >	              is expanded like a key binding, so the standard set of meta- and
											      >	              control  prefixes  and  backslash escape sequences is available.
											      >	              Use the \1 and \2 escapes to begin and  end  sequences  of  non-
											      >	              printing  characters, which can be used to embed a terminal con-
											      >	              trol sequence into the mode string.
       vviissiibbllee--ssttaattss ((OOffff))									       vviissiibbllee--ssttaattss ((OOffff))
              If set to OOnn, a character denoting a file's type as reported  by			              If set to OOnn, a character denoting a file's type as reported  by
              _s_t_a_t(2)  is  appended to the filename when listing possible com-			              _s_t_a_t(2)  is  appended to the filename when listing possible com-
              pletions.										              pletions.

   RReeaaddlliinnee CCoonnddiittiioonnaall CCoonnssttrruuccttss								   RReeaaddlliinnee CCoonnddiittiioonnaall CCoonnssttrruuccttss
       Readline implements a facility similar in  spirit  to  the  conditional			       Readline implements a facility similar in  spirit  to  the  conditional
       compilation  features  of  the C preprocessor which allows key bindings			       compilation  features  of  the C preprocessor which allows key bindings
       and variable settings to be performed as the result  of  tests.   There			       and variable settings to be performed as the result  of  tests.   There
       are four parser directives used.								       are four parser directives used.

       $$iiff    The  $$iiff construct allows bindings to be made based on the edit-			       $$iiff    The  $$iiff construct allows bindings to be made based on the edit-
              ing mode, the terminal being  used,  or  the  application  using			              ing mode, the terminal being  used,  or  the  application  using
              readline.   The text of the test extends to the end of the line;		      |	              readline.  The text of the test, after any comparison operator,
              no characters are required to isolate it.					      |	               extends  to  the  end  of  the line; unless otherwise noted, no
											      >	              characters are required to isolate it.

              mmooddee   The mmooddee== form of the  $$iiff  directive  is  used  to  test			              mmooddee   The mmooddee== form of the  $$iiff  directive  is  used  to  test
                     whether  readline  is  in  emacs or vi mode.  This may be			                     whether  readline  is  in  emacs or vi mode.  This may be
                     used in conjunction with  the  sseett  kkeeyymmaapp  command,  for			                     used in conjunction with  the  sseett  kkeeyymmaapp  command,  for
                     instance,  to  set  bindings  in  the  _e_m_a_c_s_-_s_t_a_n_d_a_r_d and			                     instance,  to  set  bindings  in  the  _e_m_a_c_s_-_s_t_a_n_d_a_r_d and
                     _e_m_a_c_s_-_c_t_l_x keymaps only if readline is  starting  out  in			                     _e_m_a_c_s_-_c_t_l_x keymaps only if readline is  starting  out  in
                     emacs mode.								                     emacs mode.

              tteerrmm   The  tteerrmm==  form may be used to include terminal-specific			              tteerrmm   The  tteerrmm==  form may be used to include terminal-specific
                     key bindings, perhaps to bind the key sequences output by			                     key bindings, perhaps to bind the key sequences output by
                     the terminal's function keys.  The word on the right side			                     the terminal's function keys.  The word on the right side
                     of the == is tested against the both full name of the ter-		      |	                     of the == is tested against both the full name of the ter-
                     minal  and  the  portion  of the terminal name before the			                     minal  and  the  portion  of the terminal name before the
                     first --.  This allows _s_u_n to match both _s_u_n and  _s_u_n_-_c_m_d,			                     first --.  This allows _s_u_n to match both _s_u_n and  _s_u_n_-_c_m_d,
                     for instance.								                     for instance.

											      >	              vveerrssiioonn
											      >	                     The  vveerrssiioonn  test  may  be  used  to perform comparisons
											      >	                     against specific readline versions.  The vveerrssiioonn  expands
											      >	                     to  the  current readline version.  The set of comparison
											      >	                     operators includes ==, (and ====), !!==, <<==,  >>==,  <<,  and  >>.
											      >	                     The  version  number  supplied  on  the right side of the
											      >	                     operator consists of a major version number, an  optional
											      >	                     decimal point, and an optional minor version (e.g., 77..11).
											      >	                     If the minor version is omitted, it is assumed to  be  00.
											      >	                     The operator may be separated from the string vveerrssiioonn and
											      >	                     from the version number argument by whitespace.
											      >
              aapppplliiccaattiioonn									              aapppplliiccaattiioonn
                     The aapppplliiccaattiioonn construct is used to include application-			                     The aapppplliiccaattiioonn construct is used to include application-
                     specific  settings.   Each  program  using  the  readline			                     specific  settings.   Each  program  using  the  readline
                     library  sets the _a_p_p_l_i_c_a_t_i_o_n _n_a_m_e, and an initialization		      |	                     library sets the _a_p_p_l_i_c_a_t_i_o_n _n_a_m_e, and an  initialization
                     file can test for a particular value.  This could be used			                     file can test for a particular value.  This could be used
                     to  bind key sequences to functions useful for a specific		      |	                     to bind key sequences to functions useful for a  specific
                     program.  For instance, the following command adds a  key		      |	                     program.   For instance, the following command adds a key
                     sequence  that  quotes  the  current  or previous word in		      |	                     sequence that quotes the  current  or  previous  word  in
                     Bash:								      |	                     bbaasshh:

                     $$iiff Bash									                     $$iiff Bash
                     # Quote the current or previous word					                     # Quote the current or previous word
                     "\C-xq": "\eb\"\ef\""							                     "\C-xq": "\eb\"\ef\""
                     $$eennddiiff									                     $$eennddiiff

											      >	              _v_a_r_i_a_b_l_e
											      >	                     The _v_a_r_i_a_b_l_e construct provides simple equality tests for
											      >	                     readline variables and values.  The permitted  comparison
											      >	                     operators  are  _=, _=_=, and _!_=.  The variable name must be
											      >	                     separated from the comparison operator by whitespace; the
											      >	                     operator  may  be  separated  from the value on the right
											      >	                     hand side by whitespace.  Both string and  boolean  vari-
											      >	                     ables  may  be  tested.  Boolean variables must be tested
											      >	                     against the values _o_n and _o_f_f.
											      >
       $$eennddiiff This command, as seen in the previous example, terminates an $$iiff			       $$eennddiiff This command, as seen in the previous example, terminates an $$iiff
              command.										              command.

       $$eellssee  Commands in this branch of the $$iiff directive are executed if the			       $$eellssee  Commands in this branch of the $$iiff directive are executed if the
              test fails.									              test fails.

       $$iinncclluuddee											       $$iinncclluuddee
              This directive takes a single filename as an argument and  reads			              This directive takes a single filename as an argument and  reads
              commands  and bindings from that file.  For example, the follow-			              commands  and bindings from that file.  For example, the follow-
              ing directive would read _/_e_t_c_/_i_n_p_u_t_r_c:						              ing directive would read _/_e_t_c_/_i_n_p_u_t_r_c:

              $$iinncclluuddee  _/_e_t_c_/_i_n_p_u_t_r_c								              $$iinncclluuddee  _/_e_t_c_/_i_n_p_u_t_r_c

   SSeeaarrcchhiinngg											   SSeeaarrcchhiinngg
       Readline provides commands for searching through  the  command  history			       Readline provides commands for searching through  the  command  history
       (see HHIISSTTOORRYY below) for lines containing a specified string.  There are			       (see HHIISSTTOORRYY below) for lines containing a specified string.  There are
       two search modes: _i_n_c_r_e_m_e_n_t_a_l and _n_o_n_-_i_n_c_r_e_m_e_n_t_a_l.					       two search modes: _i_n_c_r_e_m_e_n_t_a_l and _n_o_n_-_i_n_c_r_e_m_e_n_t_a_l.

       Incremental searches begin before the  user  has  finished  typing  the			       Incremental searches begin before the  user  has  finished  typing  the
       search  string.  As each character of the search string is typed, read-			       search  string.  As each character of the search string is typed, read-
       line displays the next entry from the history matching the string typed			       line displays the next entry from the history matching the string typed
       so  far.   An  incremental  search  requires only as many characters as			       so  far.   An  incremental  search  requires only as many characters as
       needed to find the desired history entry.  The  characters  present  in			       needed to find the desired history entry.  The  characters  present  in
       the  value of the iisseeaarrcchh--tteerrmmiinnaattoorrss variable are used to terminate an			       the  value of the iisseeaarrcchh--tteerrmmiinnaattoorrss variable are used to terminate an
       incremental search.  If that variable has not been assigned a value the			       incremental search.  If that variable has not been assigned a value the
       Escape  and  Control-J characters will terminate an incremental search.			       Escape  and  Control-J characters will terminate an incremental search.
       Control-G will abort an incremental search  and  restore  the  original			       Control-G will abort an incremental search  and  restore  the  original
       line.   When the search is terminated, the history entry containing the			       line.   When the search is terminated, the history entry containing the
       search string becomes the current line.							       search string becomes the current line.

       To find other matching entries in the history list, type  Control-S  or			       To find other matching entries in the history list, type  Control-S  or
       Control-R  as appropriate.  This will search backward or forward in the			       Control-R  as appropriate.  This will search backward or forward in the
       history for the next entry matching the search  string  typed  so  far.			       history for the next entry matching the search  string  typed  so  far.
       Any  other  key sequence bound to a readline command will terminate the			       Any  other  key sequence bound to a readline command will terminate the
       search and execute that command.  For instance, a _n_e_w_l_i_n_e  will  termi-			       search and execute that command.  For instance, a _n_e_w_l_i_n_e  will  termi-
       nate the search and accept the line, thereby executing the command from			       nate the search and accept the line, thereby executing the command from
       the history list.									       the history list.

       Readline remembers the last incremental search string.  If two Control-			       Readline remembers the last incremental search string.  If two Control-
       Rs  are  typed without any intervening characters defining a new search			       Rs  are  typed without any intervening characters defining a new search
       string, any remembered search string is used.						       string, any remembered search string is used.

       Non-incremental searches read the entire search string before  starting			       Non-incremental searches read the entire search string before  starting
       to  search  for matching history lines.  The search string may be typed			       to  search  for matching history lines.  The search string may be typed
       by the user or be part of the contents of the current line.				       by the user or be part of the contents of the current line.

   RReeaaddlliinnee CCoommmmaanndd NNaammeess									   RReeaaddlliinnee CCoommmmaanndd NNaammeess
       The following is a list of the names of the commands  and  the  default			       The following is a list of the names of the commands  and  the  default
       key sequences to which they are bound.  Command names without an accom-			       key sequences to which they are bound.  Command names without an accom-
       panying key sequence are unbound by default.  In the following descrip-			       panying key sequence are unbound by default.  In the following descrip-
       tions,  _p_o_i_n_t refers to the current cursor position, and _m_a_r_k refers to			       tions,  _p_o_i_n_t refers to the current cursor position, and _m_a_r_k refers to
       a cursor position saved by the sseett--mmaarrkk command.  The text between  the			       a cursor position saved by the sseett--mmaarrkk command.  The text between  the
       point and mark is referred to as the _r_e_g_i_o_n.						       point and mark is referred to as the _r_e_g_i_o_n.

   CCoommmmaannddss ffoorr MMoovviinngg										   CCoommmmaannddss ffoorr MMoovviinngg
       bbeeggiinnnniinngg--ooff--lliinnee ((CC--aa))									       bbeeggiinnnniinngg--ooff--lliinnee ((CC--aa))
              Move to the start of the current line.						              Move to the start of the current line.
       eenndd--ooff--lliinnee ((CC--ee))									       eenndd--ooff--lliinnee ((CC--ee))
              Move to the end of the line.							              Move to the end of the line.
       ffoorrwwaarrdd--cchhaarr ((CC--ff))									       ffoorrwwaarrdd--cchhaarr ((CC--ff))
              Move forward a character.								              Move forward a character.
       bbaacckkwwaarrdd--cchhaarr ((CC--bb))									       bbaacckkwwaarrdd--cchhaarr ((CC--bb))
              Move back a character.								              Move back a character.
       ffoorrwwaarrdd--wwoorrdd ((MM--ff))									       ffoorrwwaarrdd--wwoorrdd ((MM--ff))
              Move forward to the end of the next word.  Words are composed of			              Move forward to the end of the next word.  Words are composed of
              alphanumeric characters (letters and digits).					              alphanumeric characters (letters and digits).
       bbaacckkwwaarrdd--wwoorrdd ((MM--bb))									       bbaacckkwwaarrdd--wwoorrdd ((MM--bb))
              Move back to the start of the current or previous  word.   Words			              Move back to the start of the current or previous  word.   Words
              are composed of alphanumeric characters (letters and digits).			              are composed of alphanumeric characters (letters and digits).
											      >	       sshheellll--ffoorrwwaarrdd--wwoorrdd
											      >	              Move  forward  to the end of the next word.  Words are delimited
											      >	              by non-quoted shell metacharacters.
											      >	       sshheellll--bbaacckkwwaarrdd--wwoorrdd
											      >	              Move back to the start of the current or previous  word.   Words
											      >	              are delimited by non-quoted shell metacharacters.
											      >	       pprreevviioouuss--ssccrreeeenn--lliinnee
											      >	              Attempt  to move point to the same physical screen column on the
											      >	              previous physical screen line. This will not  have  the  desired
											      >	              effect  if  the current Readline line does not take up more than
											      >	              one physical line or if point is not greater than the length  of
											      >	              the prompt plus the screen width.
											      >	       nneexxtt--ssccrreeeenn--lliinnee
											      >	              Attempt  to move point to the same physical screen column on the
											      >	              next physical screen line. This will not have the desired effect
											      >	              if  the  current  Readline  line  does not take up more than one
											      >	              physical line or if the length of the current Readline  line  is
											      >	              not greater than the length of the prompt plus the screen width.
       cclleeaarr--ssccrreeeenn ((CC--ll))									       cclleeaarr--ssccrreeeenn ((CC--ll))
              Clear  the  screen  leaving  the  current line at the top of the		      |	              Clear the screen leaving the current line  at  the  top  of  the
              screen.  With an argument,  refresh  the  current  line  without		      |	              screen.   With  an  argument,  refresh  the current line without
              clearing the screen.								              clearing the screen.
       rreeddrraaww--ccuurrrreenntt--lliinnee									       rreeddrraaww--ccuurrrreenntt--lliinnee
              Refresh the current line.								              Refresh the current line.

   CCoommmmaannddss ffoorr MMaanniippuullaattiinngg tthhee HHiissttoorryy							   CCoommmmaannddss ffoorr MMaanniippuullaattiinngg tthhee HHiissttoorryy
       aacccceepptt--lliinnee ((NNeewwlliinnee,, RReettuurrnn))								       aacccceepptt--lliinnee ((NNeewwlliinnee,, RReettuurrnn))
              Accept the line regardless of where the cursor is.  If this line			              Accept the line regardless of where the cursor is.  If this line
              is non-empty, add it to the history list according to the  state		      |	              is  non-empty, add it to the history list according to the state
              of  the HHIISSTTCCOONNTTRROOLL variable.  If the line is a modified history		      |	              of the HHIISSTTCCOONNTTRROOLL variable.  If the line is a modified  history
              line, then restore the history line to its original state.			              line, then restore the history line to its original state.
       pprreevviioouuss--hhiissttoorryy ((CC--pp))									       pprreevviioouuss--hhiissttoorryy ((CC--pp))
              Fetch the previous command from the history list, moving back in			              Fetch the previous command from the history list, moving back in
              the list.										              the list.
       nneexxtt--hhiissttoorryy ((CC--nn))									       nneexxtt--hhiissttoorryy ((CC--nn))
              Fetch  the next command from the history list, moving forward in		      |	              Fetch the next command from the history list, moving forward  in
              the list.										              the list.
       bbeeggiinnnniinngg--ooff--hhiissttoorryy ((MM--<<))								       bbeeggiinnnniinngg--ooff--hhiissttoorryy ((MM--<<))
              Move to the first line in the history.						              Move to the first line in the history.
       eenndd--ooff--hhiissttoorryy ((MM-->>))									       eenndd--ooff--hhiissttoorryy ((MM-->>))
              Move to the end of the input history, i.e., the  line  currently		      |	              Move  to  the end of the input history, i.e., the line currently
              being entered.									              being entered.
       rreevveerrssee--sseeaarrcchh--hhiissttoorryy ((CC--rr))								       rreevveerrssee--sseeaarrcchh--hhiissttoorryy ((CC--rr))
              Search  backward  starting  at  the current line and moving `up'		      |	              Search backward starting at the current  line  and  moving  `up'
              through the  history  as  necessary.   This  is  an  incremental		      |	              through  the  history  as  necessary.   This  is  an incremental
              search.										              search.
       ffoorrwwaarrdd--sseeaarrcchh--hhiissttoorryy ((CC--ss))								       ffoorrwwaarrdd--sseeaarrcchh--hhiissttoorryy ((CC--ss))
              Search  forward  starting  at the current line and moving `down'		      |	              Search forward starting at the current line  and  moving  `down'
              through the  history  as  necessary.   This  is  an  incremental		      |	              through  the  history  as  necessary.   This  is  an incremental
              search.										              search.
       nnoonn--iinnccrreemmeennttaall--rreevveerrssee--sseeaarrcchh--hhiissttoorryy ((MM--pp))						       nnoonn--iinnccrreemmeennttaall--rreevveerrssee--sseeaarrcchh--hhiissttoorryy ((MM--pp))
              Search backward through the history starting at the current line			              Search backward through the history starting at the current line
              using a non-incremental search for  a  string  supplied  by  the		      |	              using  a  non-incremental  search  for  a string supplied by the
              user.										              user.
       nnoonn--iinnccrreemmeennttaall--ffoorrwwaarrdd--sseeaarrcchh--hhiissttoorryy ((MM--nn))						       nnoonn--iinnccrreemmeennttaall--ffoorrwwaarrdd--sseeaarrcchh--hhiissttoorryy ((MM--nn))
              Search  forward  through  the  history  using  a non-incremental		      |	              Search forward  through  the  history  using  a  non-incremental
              search for a string supplied by the user.						              search for a string supplied by the user.
       hhiissttoorryy--sseeaarrcchh--ffoorrwwaarrdd									       hhiissttoorryy--sseeaarrcchh--ffoorrwwaarrdd
              Search forward through the history for the string of  characters		      |	              Search  forward through the history for the string of characters
              between  the start of the current line and the point.  This is a		      |	              between the start of the current line and the point.  This is  a
              non-incremental search.								              non-incremental search.
       hhiissttoorryy--sseeaarrcchh--bbaacckkwwaarrdd									       hhiissttoorryy--sseeaarrcchh--bbaacckkwwaarrdd
              Search backward through the history for the string of characters			              Search backward through the history for the string of characters
              between  the start of the current line and the point.  This is a		      |	              between the start of the current line and the point.  This is  a
              non-incremental search.								              non-incremental search.
											      >	       hhiissttoorryy--ssuubbssttrriinngg--sseeaarrcchh--bbaacckkwwaarrdd
											      >	              Search backward through the history for the string of characters
											      >	              between the start of the current line  and  the  current  cursor
											      >	              position (the _p_o_i_n_t).  The search string may match anywhere in a
											      >	              history line.  This is a non-incremental search.
											      >	       hhiissttoorryy--ssuubbssttrriinngg--sseeaarrcchh--ffoorrwwaarrdd
											      >	              Search forward through the history for the string of  characters
											      >	              between the start of the current line and the point.  The search
											      >	              string may match anywhere in a history line.   This  is  a  non-
											      >	              incremental search.
       yyaannkk--nntthh--aarrgg ((MM--CC--yy))									       yyaannkk--nntthh--aarrgg ((MM--CC--yy))
              Insert the first argument to the previous command  (usually  the		      |	              Insert  the  first argument to the previous command (usually the
              second word on the previous line) at point.  With an argument _n,			              second word on the previous line) at point.  With an argument _n,
              insert the _nth word from the previous command (the words in  the		      |	              insert  the _nth word from the previous command (the words in the
              previous  command  begin  with  word  0).   A  negative argument		      |	              previous command  begin  with  word  0).   A  negative  argument
              inserts the _nth word from the end of the previous command.  Once			              inserts the _nth word from the end of the previous command.  Once
              the  argument _n is computed, the argument is extracted as if the		      |	              the argument _n is computed, the argument is extracted as if  the
              "!_n" history expansion had been specified.					              "!_n" history expansion had been specified.
       yyaannkk--llaasstt--aarrgg ((MM--..,, MM--__))									       yyaannkk--llaasstt--aarrgg ((MM--..,, MM--__))
              Insert the last argument to the previous command (the last  word		      |	              Insert  the last argument to the previous command (the last word
              of  the  previous  history  entry).   With  an  argument, behave		      |	              of the previous history entry).  With a numeric argument, behave
              exactly like yyaannkk--nntthh--aarrgg.  Successive  calls  to  yyaannkk--llaasstt--aarrgg		      |	              exactly  like  yyaannkk--nntthh--aarrgg.   Successive calls to yyaannkk--llaasstt--aarrgg
              move  back through the history list, inserting the last argument		      |	              move back through the history list, inserting the last word  (or
              of each line in turn.  The history expansion facilities are used		      |	              the  word  specified  by the argument to the first call) of each
              to  extract  the last argument, as if the "!$" history expansion		      |	              line in turn.  Any numeric argument supplied to these successive
              had been specified.							      |	              calls  determines  the direction to move through the history.  A
											      >	              negative argument switches the  direction  through  the  history
											      >	              (back or forward).  The history expansion facilities are used to
											      >	              extract the last word, as if the "!$" history expansion had been
											      >	              specified.
       sshheellll--eexxppaanndd--lliinnee ((MM--CC--ee))								       sshheellll--eexxppaanndd--lliinnee ((MM--CC--ee))
              Expand the line as the shell does.  This performs alias and his-			              Expand the line as the shell does.  This performs alias and his-
              tory expansion as well as all of the shell word expansions.  See			              tory expansion as well as all of the shell word expansions.  See
              HHIISSTTOORRYY EEXXPPAANNSSIIOONN below for a description of history  expansion.		      |	              HHIISSTTOORRYY  EEXXPPAANNSSIIOONN below for a description of history expansion.
       hhiissttoorryy--eexxppaanndd--lliinnee ((MM--^^))								       hhiissttoorryy--eexxppaanndd--lliinnee ((MM--^^))
              Perform  history  expansion  on  the  current line.  See HHIISSTTOORRYY		      |	              Perform history expansion on  the  current  line.   See  HHIISSTTOORRYY
              EEXXPPAANNSSIIOONN below for a description of history expansion.				              EEXXPPAANNSSIIOONN below for a description of history expansion.
       mmaaggiicc--ssppaaccee										       mmaaggiicc--ssppaaccee
              Perform history expansion on  the  current  line  and  insert  a		      |	              Perform  history  expansion  on  the  current  line and insert a
              space.  See HHIISSTTOORRYY EEXXPPAANNSSIIOONN below for a description of history			              space.  See HHIISSTTOORRYY EEXXPPAANNSSIIOONN below for a description of history
              expansion.									              expansion.
       aalliiaass--eexxppaanndd--lliinnee									       aalliiaass--eexxppaanndd--lliinnee
              Perform alias expansion on the current line.  See AALLIIAASSEESS  above		      |	              Perform  alias expansion on the current line.  See AALLIIAASSEESS above
              for a description of alias expansion.						              for a description of alias expansion.
       hhiissttoorryy--aanndd--aalliiaass--eexxppaanndd--lliinnee								       hhiissttoorryy--aanndd--aalliiaass--eexxppaanndd--lliinnee
              Perform history and alias expansion on the current line.				              Perform history and alias expansion on the current line.
       iinnsseerrtt--llaasstt--aarrgguummeenntt ((MM--..,, MM--__))								       iinnsseerrtt--llaasstt--aarrgguummeenntt ((MM--..,, MM--__))
              A synonym for yyaannkk--llaasstt--aarrgg.							              A synonym for yyaannkk--llaasstt--aarrgg.
       ooppeerraattee--aanndd--ggeett--nneexxtt ((CC--oo))								       ooppeerraattee--aanndd--ggeett--nneexxtt ((CC--oo))
              Accept  the  current  line for execution and fetch the next line		      |	              Accept the current line for execution and fetch  the  next  line
              relative to the current line from the history for editing.   Any		      |	              relative  to  the  current line from the history for editing.  A
              argument is ignored.							      |	              numeric argument, if supplied, specifies the  history  entry  to
       eeddiitt--aanndd--eexxeeccuuttee--ccoommmmaanndd ((CC--xxCC--ee))						      |	              use instead of the current line.
											      >	       eeddiitt--aanndd--eexxeeccuuttee--ccoommmmaanndd ((CC--xx CC--ee))
              Invoke  an  editor  on the current command line, and execute the			              Invoke  an  editor  on the current command line, and execute the
              result as shell commands.   BBaasshh  attempts  to  invoke  $$FFCCEEDDIITT,		      |	              result as shell commands.   BBaasshh  attempts  to  invoke  $$VVIISSUUAALL,
              $$EEDDIITTOORR, and _e_m_a_c_s as the editor, in that order.					              $$EEDDIITTOORR, and _e_m_a_c_s as the editor, in that order.

   CCoommmmaannddss ffoorr CChhaannggiinngg TTeexxtt									   CCoommmmaannddss ffoorr CChhaannggiinngg TTeexxtt
											      >	       _e_n_d_-_o_f_-_f_i_l_e ((uussuuaallllyy CC--dd))
											      >	              The  character  indicating  end-of-file  as set, for example, by
											      >	              ``stty''.  If this character is read when there are  no  charac-
											      >	              ters  on  the  line,  and point is at the beginning of the line,
											      >	              Readline interprets it as the end of input and returns EEOOFF.
       ddeelleettee--cchhaarr ((CC--dd))									       ddeelleettee--cchhaarr ((CC--dd))
              Delete  the character at point.  If point is at the beginning of		      |	              Delete the character at point.  If this function is bound to the
              the line, there are no characters in  the  line,  and  the  last		      |	              same character as the tty EEOOFF character, as CC--dd commonly is, see
              character typed was not bound to ddeelleettee--cchhaarr, then return EEOOFF.		      |	              above for the effects.
       bbaacckkwwaarrdd--ddeelleettee--cchhaarr ((RRuubboouutt))								       bbaacckkwwaarrdd--ddeelleettee--cchhaarr ((RRuubboouutt))
              Delete  the  character  behind the cursor.  When given a numeric		      |	              Delete the character behind the cursor.  When  given  a  numeric
              argument, save the deleted text on the kill ring.					              argument, save the deleted text on the kill ring.
       ffoorrwwaarrdd--bbaacckkwwaarrdd--ddeelleettee--cchhaarr								       ffoorrwwaarrdd--bbaacckkwwaarrdd--ddeelleettee--cchhaarr
              Delete the character under the cursor, unless the cursor  is  at		      |	              Delete  the  character under the cursor, unless the cursor is at
              the end of the line, in which case the character behind the cur-			              the end of the line, in which case the character behind the cur-
              sor is deleted.									              sor is deleted.
       qquuootteedd--iinnsseerrtt ((CC--qq,, CC--vv))									       qquuootteedd--iinnsseerrtt ((CC--qq,, CC--vv))
              Add the next character typed to the line verbatim.  This is  how		      |	              Add  the next character typed to the line verbatim.  This is how
              to insert characters like CC--qq, for example.					              to insert characters like CC--qq, for example.
       ttaabb--iinnsseerrtt ((CC--vv TTAABB))									       ttaabb--iinnsseerrtt ((CC--vv TTAABB))
              Insert a tab character.								              Insert a tab character.
       sseellff--iinnsseerrtt ((aa,, bb,, AA,, 11,, !!,, ......))								       sseellff--iinnsseerrtt ((aa,, bb,, AA,, 11,, !!,, ......))
              Insert the character typed.							              Insert the character typed.
       ttrraannssppoossee--cchhaarrss ((CC--tt))									       ttrraannssppoossee--cchhaarrss ((CC--tt))
              Drag  the  character  before point forward over the character at		      |	              Drag the character before point forward over  the  character  at
              point, moving point forward as well.  If point is at the end  of		      |	              point,  moving point forward as well.  If point is at the end of
              the  line, then this transposes the two characters before point.		      |	              the line, then this transposes the two characters before  point.
              Negative arguments have no effect.						              Negative arguments have no effect.
       ttrraannssppoossee--wwoorrddss ((MM--tt))									       ttrraannssppoossee--wwoorrddss ((MM--tt))
              Drag the word before point past the  word  after  point,  moving		      |	              Drag  the  word  before  point past the word after point, moving
              point  over  that  word  as well.  If point is at the end of the		      |	              point over that word as well.  If point is at  the  end  of  the
              line, this transposes the last two words on the line.				              line, this transposes the last two words on the line.
       uuppccaassee--wwoorrdd ((MM--uu))									       uuppccaassee--wwoorrdd ((MM--uu))
              Uppercase the current (or  following)  word.   With  a  negative		      |	              Uppercase  the  current  (or  following)  word.  With a negative
              argument, uppercase the previous word, but do not move point.			              argument, uppercase the previous word, but do not move point.
       ddoowwnnccaassee--wwoorrdd ((MM--ll))									       ddoowwnnccaassee--wwoorrdd ((MM--ll))
              Lowercase  the  current  (or  following)  word.  With a negative		      |	              Lowercase the current (or  following)  word.   With  a  negative
              argument, lowercase the previous word, but do not move point.			              argument, lowercase the previous word, but do not move point.
       ccaappiittaalliizzee--wwoorrdd ((MM--cc))									       ccaappiittaalliizzee--wwoorrdd ((MM--cc))
              Capitalize the current (or following)  word.   With  a  negative		      |	              Capitalize  the  current  (or  following) word.  With a negative
              argument, capitalize the previous word, but do not move point.			              argument, capitalize the previous word, but do not move point.
       oovveerrwwrriittee--mmooddee										       oovveerrwwrriittee--mmooddee
              Toggle  overwrite mode.  With an explicit positive numeric argu-		      |	              Toggle overwrite mode.  With an explicit positive numeric  argu-
              ment, switches to overwrite mode.  With an explicit non-positive			              ment, switches to overwrite mode.  With an explicit non-positive
              numeric argument, switches to insert mode.  This command affects			              numeric argument, switches to insert mode.  This command affects
              only eemmaaccss mode; vvii mode does overwrite differently.  Each  call		      |	              only  eemmaaccss mode; vvii mode does overwrite differently.  Each call
              to _r_e_a_d_l_i_n_e_(_) starts in insert mode.  In overwrite mode, charac-			              to _r_e_a_d_l_i_n_e_(_) starts in insert mode.  In overwrite mode, charac-
              ters bound to sseellff--iinnsseerrtt replace the text at point rather  than		      |	              ters  bound to sseellff--iinnsseerrtt replace the text at point rather than
              pushing  the  text  to  the  right.   Characters  bound to bbaacckk--		      |	              pushing the text  to  the  right.   Characters  bound  to  bbaacckk--
              wwaarrdd--ddeelleettee--cchhaarr replace  the  character  before  point  with  a		      |	              wwaarrdd--ddeelleettee--cchhaarr  replace  the  character  before  point  with a
              space.  By default, this command is unbound.					              space.  By default, this command is unbound.

   KKiilllliinngg aanndd YYaannkkiinngg										   KKiilllliinngg aanndd YYaannkkiinngg
       kkiillll--lliinnee ((CC--kk))										       kkiillll--lliinnee ((CC--kk))
              Kill the text from point to the end of the line.					              Kill the text from point to the end of the line.
       bbaacckkwwaarrdd--kkiillll--lliinnee ((CC--xx RRuubboouutt))								       bbaacckkwwaarrdd--kkiillll--lliinnee ((CC--xx RRuubboouutt))
              Kill backward to the beginning of the line.					              Kill backward to the beginning of the line.
       uunniixx--lliinnee--ddiissccaarrdd ((CC--uu))									       uunniixx--lliinnee--ddiissccaarrdd ((CC--uu))
              Kill  backward  from  point  to  the beginning of the line.  The		      |	              Kill backward from point to the  beginning  of  the  line.   The
              killed text is saved on the kill-ring.						              killed text is saved on the kill-ring.
       kkiillll--wwhhoollee--lliinnee										       kkiillll--wwhhoollee--lliinnee
              Kill all characters on the current line, no matter  where  point		      |	              Kill  all  characters on the current line, no matter where point
              is.										              is.
       kkiillll--wwoorrdd ((MM--dd))										       kkiillll--wwoorrdd ((MM--dd))
              Kill  from  point  to the end of the current word, or if between		      |	              Kill from point to the end of the current word,  or  if  between
              words, to the end of the next word.   Word  boundaries  are  the		      |	              words,  to  the  end  of the next word.  Word boundaries are the
              same as those used by ffoorrwwaarrdd--wwoorrdd.						              same as those used by ffoorrwwaarrdd--wwoorrdd.
       bbaacckkwwaarrdd--kkiillll--wwoorrdd ((MM--RRuubboouutt))								       bbaacckkwwaarrdd--kkiillll--wwoorrdd ((MM--RRuubboouutt))
              Kill  the  word  behind  point.  Word boundaries are the same as		      |	              Kill the word behind point.  Word boundaries  are  the  same  as
              those used by bbaacckkwwaarrdd--wwoorrdd.							              those used by bbaacckkwwaarrdd--wwoorrdd.
											      >	       sshheellll--kkiillll--wwoorrdd
											      >	              Kill  from  point  to the end of the current word, or if between
											      >	              words, to the end of the next word.   Word  boundaries  are  the
											      >	              same as those used by sshheellll--ffoorrwwaarrdd--wwoorrdd.
											      >	       sshheellll--bbaacckkwwaarrdd--kkiillll--wwoorrdd
											      >	              Kill  the  word  behind  point.  Word boundaries are the same as
											      >	              those used by sshheellll--bbaacckkwwaarrdd--wwoorrdd.
       uunniixx--wwoorrdd--rruubboouutt ((CC--ww))									       uunniixx--wwoorrdd--rruubboouutt ((CC--ww))
              Kill the word behind point, using white space as a  word  bound-			              Kill the word behind point, using white space as a  word  bound-
              ary.  The killed text is saved on the kill-ring.					              ary.  The killed text is saved on the kill-ring.
       uunniixx--ffiilleennaammee--rruubboouutt									       uunniixx--ffiilleennaammee--rruubboouutt
              Kill  the  word  behind  point,  using white space and the slash			              Kill  the  word  behind  point,  using white space and the slash
              character as the word boundaries.  The killed text is  saved  on			              character as the word boundaries.  The killed text is  saved  on
              the kill-ring.									              the kill-ring.
       ddeelleettee--hhoorriizzoonnttaall--ssppaaccee ((MM--\\))								       ddeelleettee--hhoorriizzoonnttaall--ssppaaccee ((MM--\\))
              Delete all spaces and tabs around point.						              Delete all spaces and tabs around point.
       kkiillll--rreeggiioonn										       kkiillll--rreeggiioonn
              Kill the text in the current region.						              Kill the text in the current region.
       ccooppyy--rreeggiioonn--aass--kkiillll									       ccooppyy--rreeggiioonn--aass--kkiillll
              Copy the text in the region to the kill buffer.					              Copy the text in the region to the kill buffer.
       ccooppyy--bbaacckkwwaarrdd--wwoorrdd									       ccooppyy--bbaacckkwwaarrdd--wwoorrdd
              Copy  the word before point to the kill buffer.  The word bound-			              Copy  the word before point to the kill buffer.  The word bound-
              aries are the same as bbaacckkwwaarrdd--wwoorrdd.						              aries are the same as bbaacckkwwaarrdd--wwoorrdd.
       ccooppyy--ffoorrwwaarrdd--wwoorrdd									       ccooppyy--ffoorrwwaarrdd--wwoorrdd
              Copy the word following point to  the  kill  buffer.   The  word			              Copy the word following point to  the  kill  buffer.   The  word
              boundaries are the same as ffoorrwwaarrdd--wwoorrdd.						              boundaries are the same as ffoorrwwaarrdd--wwoorrdd.
       yyaannkk ((CC--yy))										       yyaannkk ((CC--yy))
              Yank the top of the kill ring into the buffer at point.				              Yank the top of the kill ring into the buffer at point.
       yyaannkk--ppoopp ((MM--yy))										       yyaannkk--ppoopp ((MM--yy))
              Rotate  the kill ring, and yank the new top.  Only works follow-			              Rotate  the kill ring, and yank the new top.  Only works follow-
              ing yyaannkk or yyaannkk--ppoopp.								              ing yyaannkk or yyaannkk--ppoopp.

   NNuummeerriicc AArrgguummeennttss										   NNuummeerriicc AArrgguummeennttss
       ddiiggiitt--aarrgguummeenntt ((MM--00,, MM--11,, ......,, MM----))							       ddiiggiitt--aarrgguummeenntt ((MM--00,, MM--11,, ......,, MM----))
              Add this digit to the argument already accumulating, or start  a			              Add this digit to the argument already accumulating, or start  a
              new argument.  M-- starts a negative argument.					              new argument.  M-- starts a negative argument.
       uunniivveerrssaall--aarrgguummeenntt									       uunniivveerrssaall--aarrgguummeenntt
              This  is another way to specify an argument.  If this command is			              This  is another way to specify an argument.  If this command is
              followed by one or more digits, optionally with a leading  minus			              followed by one or more digits, optionally with a leading  minus
              sign,  those digits define the argument.  If the command is fol-			              sign,  those digits define the argument.  If the command is fol-
              lowed by digits, executing  uunniivveerrssaall--aarrgguummeenntt  again  ends  the			              lowed by digits, executing  uunniivveerrssaall--aarrgguummeenntt  again  ends  the
              numeric  argument, but is otherwise ignored.  As a special case,			              numeric  argument, but is otherwise ignored.  As a special case,
              if this command is immediately followed by a character  that  is			              if this command is immediately followed by a character  that  is
              neither  a  digit or minus sign, the argument count for the next		      |	              neither  a digit nor minus sign, the argument count for the next
              command is multiplied by four.  The argument count is  initially			              command is multiplied by four.  The argument count is  initially
              one,  so  executing this function the first time makes the argu-			              one,  so  executing this function the first time makes the argu-
              ment count four, a second time makes the argument count sixteen,			              ment count four, a second time makes the argument count sixteen,
              and so on.									              and so on.

   CCoommpplleettiinngg											   CCoommpplleettiinngg
       ccoommpplleettee ((TTAABB))										       ccoommpplleettee ((TTAABB))
              Attempt  to  perform  completion on the text before point.  BBaasshh			              Attempt  to  perform  completion on the text before point.  BBaasshh
              attempts completion treating the text as a variable (if the text			              attempts completion treating the text as a variable (if the text
              begins  with  $$), username (if the text begins with ~~), hostname			              begins  with  $$), username (if the text begins with ~~), hostname
              (if the text begins with @@), or command (including  aliases  and			              (if the text begins with @@), or command (including  aliases  and
              functions) in turn.  If none of these produces a match, filename			              functions) in turn.  If none of these produces a match, filename
              completion is attempted.								              completion is attempted.
       ppoossssiibbllee--ccoommpplleettiioonnss ((MM--??))								       ppoossssiibbllee--ccoommpplleettiioonnss ((MM--??))
              List the possible completions of the text before point.				              List the possible completions of the text before point.
       iinnsseerrtt--ccoommpplleettiioonnss ((MM--**))									       iinnsseerrtt--ccoommpplleettiioonnss ((MM--**))
              Insert all completions of the text before point that would  have			              Insert all completions of the text before point that would  have
              been generated by ppoossssiibbllee--ccoommpplleettiioonnss.						              been generated by ppoossssiibbllee--ccoommpplleettiioonnss.
       mmeennuu--ccoommpplleettee										       mmeennuu--ccoommpplleettee
              Similar  to ccoommpplleettee, but replaces the word to be completed with			              Similar  to ccoommpplleettee, but replaces the word to be completed with
              a single match from the list of possible completions.   Repeated			              a single match from the list of possible completions.   Repeated
              execution  of  mmeennuu--ccoommpplleettee  steps through the list of possible			              execution  of  mmeennuu--ccoommpplleettee  steps through the list of possible
              completions, inserting each match in turn.  At the  end  of  the			              completions, inserting each match in turn.  At the  end  of  the
              list of completions, the bell is rung (subject to the setting of			              list of completions, the bell is rung (subject to the setting of
              bbeellll--ssttyyllee) and the original text is restored.  An argument of _n			              bbeellll--ssttyyllee) and the original text is restored.  An argument of _n
              moves  _n  positions  forward  in the list of matches; a negative			              moves  _n  positions  forward  in the list of matches; a negative
              argument may be used to move backward through  the  list.   This			              argument may be used to move backward through  the  list.   This
              command  is  intended  to  be  bound  to  TTAABB, but is unbound by			              command  is  intended  to  be  bound  to  TTAABB, but is unbound by
              default.										              default.
											      >	       mmeennuu--ccoommpplleettee--bbaacckkwwaarrdd
											      >	              Identical to mmeennuu--ccoommpplleettee, but moves backward through the  list
											      >	              of  possible  completions,  as if mmeennuu--ccoommpplleettee had been given a
											      >	              negative argument.  This command is unbound by default.
       ddeelleettee--cchhaarr--oorr--lliisstt									       ddeelleettee--cchhaarr--oorr--lliisstt
              Deletes the character under the cursor if not at  the  beginning			              Deletes the character under the cursor if not at  the  beginning
              or  end  of  the  line (like ddeelleettee--cchhaarr).  If at the end of the			              or  end  of  the  line (like ddeelleettee--cchhaarr).  If at the end of the
              line, behaves identically to ppoossssiibbllee--ccoommpplleettiioonnss.  This command			              line, behaves identically to ppoossssiibbllee--ccoommpplleettiioonnss.  This command
              is unbound by default.								              is unbound by default.
       ccoommpplleettee--ffiilleennaammee ((MM--//))									       ccoommpplleettee--ffiilleennaammee ((MM--//))
              Attempt filename completion on the text before point.				              Attempt filename completion on the text before point.
       ppoossssiibbllee--ffiilleennaammee--ccoommpplleettiioonnss ((CC--xx //))							       ppoossssiibbllee--ffiilleennaammee--ccoommpplleettiioonnss ((CC--xx //))
              List the possible completions of the text before point, treating			              List the possible completions of the text before point, treating
              it as a filename.									              it as a filename.
       ccoommpplleettee--uusseerrnnaammee ((MM--~~))									       ccoommpplleettee--uusseerrnnaammee ((MM--~~))
              Attempt completion on the text before point, treating  it  as  a			              Attempt completion on the text before point, treating  it  as  a
              username.										              username.
       ppoossssiibbllee--uusseerrnnaammee--ccoommpplleettiioonnss ((CC--xx ~~))							       ppoossssiibbllee--uusseerrnnaammee--ccoommpplleettiioonnss ((CC--xx ~~))
              List the possible completions of the text before point, treating			              List the possible completions of the text before point, treating
              it as a username.									              it as a username.
       ccoommpplleettee--vvaarriiaabbllee ((MM--$$))									       ccoommpplleettee--vvaarriiaabbllee ((MM--$$))
              Attempt completion on the text before point, treating  it  as  a			              Attempt completion on the text before point, treating  it  as  a
              shell variable.									              shell variable.
       ppoossssiibbllee--vvaarriiaabbllee--ccoommpplleettiioonnss ((CC--xx $$))							       ppoossssiibbllee--vvaarriiaabbllee--ccoommpplleettiioonnss ((CC--xx $$))
              List the possible completions of the text before point, treating			              List the possible completions of the text before point, treating
              it as a shell variable.								              it as a shell variable.
       ccoommpplleettee--hhoossttnnaammee ((MM--@@))									       ccoommpplleettee--hhoossttnnaammee ((MM--@@))
              Attempt completion on the text before point, treating  it  as  a			              Attempt completion on the text before point, treating  it  as  a
              hostname.										              hostname.
       ppoossssiibbllee--hhoossttnnaammee--ccoommpplleettiioonnss ((CC--xx @@))							       ppoossssiibbllee--hhoossttnnaammee--ccoommpplleettiioonnss ((CC--xx @@))
              List the possible completions of the text before point, treating			              List the possible completions of the text before point, treating
              it as a hostname.									              it as a hostname.
       ccoommpplleettee--ccoommmmaanndd ((MM--!!))									       ccoommpplleettee--ccoommmmaanndd ((MM--!!))
              Attempt completion on the text before point, treating  it  as  a			              Attempt completion on the text before point, treating  it  as  a
              command  name.   Command  completion  attempts to match the text			              command  name.   Command  completion  attempts to match the text
              against  aliases,  reserved  words,   shell   functions,   shell			              against  aliases,  reserved  words,   shell   functions,   shell
              builtins, and finally executable filenames, in that order.			              builtins, and finally executable filenames, in that order.
       ppoossssiibbllee--ccoommmmaanndd--ccoommpplleettiioonnss ((CC--xx !!))							       ppoossssiibbllee--ccoommmmaanndd--ccoommpplleettiioonnss ((CC--xx !!))
              List the possible completions of the text before point, treating			              List the possible completions of the text before point, treating
              it as a command name.								              it as a command name.
       ddyynnaammiicc--ccoommpplleettee--hhiissttoorryy ((MM--TTAABB))								       ddyynnaammiicc--ccoommpplleettee--hhiissttoorryy ((MM--TTAABB))
              Attempt completion on the text before point, comparing the  text			              Attempt completion on the text before point, comparing the  text
              against  lines  from  the  history  list for possible completion			              against  lines  from  the  history  list for possible completion
              matches.										              matches.
											      >	       ddaabbbbrreevv--eexxppaanndd
											      >	              Attempt menu completion on the text before point, comparing  the
											      >	              text against lines from the history list for possible completion
											      >	              matches.
       ccoommpplleettee--iinnttoo--bbrraacceess ((MM--{{))								       ccoommpplleettee--iinnttoo--bbrraacceess ((MM--{{))
              Perform filename completion and insert the list of possible com-			              Perform filename completion and insert the list of possible com-
              pletions  enclosed within braces so the list is available to the			              pletions  enclosed within braces so the list is available to the
              shell (see BBrraaccee EExxppaannssiioonn above).						              shell (see BBrraaccee EExxppaannssiioonn above).

   KKeeyybbooaarrdd MMaaccrrooss										   KKeeyybbooaarrdd MMaaccrrooss
       ssttaarrtt--kkbbdd--mmaaccrroo ((CC--xx (())									       ssttaarrtt--kkbbdd--mmaaccrroo ((CC--xx (())
              Begin saving the characters  typed  into  the  current  keyboard			              Begin saving the characters  typed  into  the  current  keyboard
              macro.										              macro.
       eenndd--kkbbdd--mmaaccrroo ((CC--xx ))))									       eenndd--kkbbdd--mmaaccrroo ((CC--xx ))))
              Stop saving the characters typed into the current keyboard macro			              Stop saving the characters typed into the current keyboard macro
              and store the definition.								              and store the definition.
       ccaallll--llaasstt--kkbbdd--mmaaccrroo ((CC--xx ee))								       ccaallll--llaasstt--kkbbdd--mmaaccrroo ((CC--xx ee))
              Re-execute the last keyboard macro defined, by making the  char-			              Re-execute the last keyboard macro defined, by making the  char-
              acters in the macro appear as if typed at the keyboard.				              acters in the macro appear as if typed at the keyboard.
											      >	       pprriinntt--llaasstt--kkbbdd--mmaaccrroo (())
											      >	              Print  the  last keyboard macro defined in a format suitable for
											      >	              the _i_n_p_u_t_r_c file.

   MMiisscceellllaanneeoouuss										   MMiisscceellllaanneeoouuss
       rree--rreeaadd--iinniitt--ffiillee ((CC--xx CC--rr))								       rree--rreeaadd--iinniitt--ffiillee ((CC--xx CC--rr))
              Read  in  the  contents of the _i_n_p_u_t_r_c file, and incorporate any		      |	              Read in the contents of the _i_n_p_u_t_r_c file,  and  incorporate  any
              bindings or variable assignments found there.					              bindings or variable assignments found there.
       aabboorrtt ((CC--gg))										       aabboorrtt ((CC--gg))
              Abort the current editing command and ring the  terminal's  bell		      |	              Abort  the  current editing command and ring the terminal's bell
              (subject to the setting of bbeellll--ssttyyllee).						              (subject to the setting of bbeellll--ssttyyllee).
       ddoo--uuppppeerrccaassee--vveerrssiioonn ((MM--aa,, MM--bb,, MM--_x,, ......))					      |	       ddoo--lloowweerrccaassee--vveerrssiioonn ((MM--AA,, MM--BB,, MM--_x,, ......))
              If  the  metafied character _x is lowercase, run the command that		      |	              If the metafied character _x is uppercase, run the  command  that
              is bound to the corresponding uppercase character.			      |	              is bound to the corresponding metafied lowercase character.  The
											      >	              behavior is undefined if _x is already lowercase.
       pprreeffiixx--mmeettaa ((EESSCC))									       pprreeffiixx--mmeettaa ((EESSCC))
              Metafy the next character typed.  EESSCC ff is equivalent to MMeettaa--ff.			              Metafy the next character typed.  EESSCC ff is equivalent to MMeettaa--ff.
       uunnddoo ((CC--__,, CC--xx CC--uu))									       uunnddoo ((CC--__,, CC--xx CC--uu))
              Incremental undo, separately remembered for each line.				              Incremental undo, separately remembered for each line.
       rreevveerrtt--lliinnee ((MM--rr))									       rreevveerrtt--lliinnee ((MM--rr))
              Undo  all changes made to this line.  This is like executing the			              Undo  all changes made to this line.  This is like executing the
              uunnddoo command enough times to return  the  line  to  its  initial			              uunnddoo command enough times to return  the  line  to  its  initial
              state.										              state.
       ttiillddee--eexxppaanndd ((MM--&&))									       ttiillddee--eexxppaanndd ((MM--&&))
              Perform tilde expansion on the current word.					              Perform tilde expansion on the current word.
       sseett--mmaarrkk ((CC--@@,, MM--<<ssppaaccee>>))								       sseett--mmaarrkk ((CC--@@,, MM--<<ssppaaccee>>))
              Set  the  mark to the point.  If a numeric argument is supplied,			              Set  the  mark to the point.  If a numeric argument is supplied,
              the mark is set to that position.							              the mark is set to that position.
       eexxcchhaannggee--ppooiinntt--aanndd--mmaarrkk ((CC--xx CC--xx))							       eexxcchhaannggee--ppooiinntt--aanndd--mmaarrkk ((CC--xx CC--xx))
              Swap the point with the mark.  The current  cursor  position  is			              Swap the point with the mark.  The current  cursor  position  is
              set  to the saved position, and the old cursor position is saved			              set  to the saved position, and the old cursor position is saved
              as the mark.									              as the mark.
       cchhaarraacctteerr--sseeaarrcchh ((CC--]]))									       cchhaarraacctteerr--sseeaarrcchh ((CC--]]))
              A character is read and point is moved to the next occurrence of			              A character is read and point is moved to the next occurrence of
              that  character.   A negative count searches for previous occur-			              that  character.   A negative count searches for previous occur-
              rences.										              rences.
       cchhaarraacctteerr--sseeaarrcchh--bbaacckkwwaarrdd ((MM--CC--]]))							       cchhaarraacctteerr--sseeaarrcchh--bbaacckkwwaarrdd ((MM--CC--]]))
              A character is read and point is moved to  the  previous  occur-			              A character is read and point is moved to  the  previous  occur-
              rence  of  that character.  A negative count searches for subse-			              rence  of  that character.  A negative count searches for subse-
              quent occurrences.								              quent occurrences.
											      >	       sskkiipp--ccssii--sseeqquueennccee
											      >	              Read enough characters to consume a multi-key sequence  such  as
											      >	              those  defined for keys like Home and End.  Such sequences begin
											      >	              with a Control Sequence Indicator (CSI), usually ESC-[.  If this
											      >	              sequence  is  bound  to "\[", keys producing such sequences will
											      >	              have no effect unless explicitly bound to  a  readline  command,
											      >	              instead  of  inserting stray characters into the editing buffer.
											      >	              This is unbound by default, but usually bound to ESC-[.
       iinnsseerrtt--ccoommmmeenntt ((MM--##))									       iinnsseerrtt--ccoommmmeenntt ((MM--##))
              Without a numeric argument,  the  value  of  the  readline  ccoomm--			              Without a numeric argument,  the  value  of  the  readline  ccoomm--
              mmeenntt--bbeeggiinn  variable is inserted at the beginning of the current			              mmeenntt--bbeeggiinn  variable is inserted at the beginning of the current
              line.  If a numeric argument is supplied, this command acts as a			              line.  If a numeric argument is supplied, this command acts as a
              toggle:   if  the characters at the beginning of the line do not		      |	              toggle:  if  the  characters at the beginning of the line do not
              match the value of ccoommmmeenntt--bbeeggiinn, the value is inserted,  other-			              match the value of ccoommmmeenntt--bbeeggiinn, the value is inserted,  other-
              wise the characters in ccoommmmeenntt--bbeeggiinn are deleted from the begin-			              wise the characters in ccoommmmeenntt--bbeeggiinn are deleted from the begin-
              ning of the line.  In either case, the line is accepted as if  a			              ning of the line.  In either case, the line is accepted as if  a
              newline  had  been  typed.   The  default value of ccoommmmeenntt--bbeeggiinn			              newline  had  been  typed.   The  default value of ccoommmmeenntt--bbeeggiinn
              causes this command to make the current line  a  shell  comment.			              causes this command to make the current line  a  shell  comment.
              If  a  numeric  argument  causes  the  comment  character  to be			              If  a  numeric  argument  causes  the  comment  character  to be
              removed, the line will be executed by the shell.					              removed, the line will be executed by the shell.
       gglloobb--ccoommpplleettee--wwoorrdd ((MM--gg))									       gglloobb--ccoommpplleettee--wwoorrdd ((MM--gg))
              The word before point is  treated  as  a  pattern  for  pathname			              The word before point is  treated  as  a  pattern  for  pathname
              expansion,  with  an asterisk implicitly appended.  This pattern			              expansion,  with  an asterisk implicitly appended.  This pattern
              is used to generate a list of matching file names  for  possible		      |	              is used to generate a list of matching  filenames  for  possible
              completions.									              completions.
       gglloobb--eexxppaanndd--wwoorrdd ((CC--xx **))									       gglloobb--eexxppaanndd--wwoorrdd ((CC--xx **))
              The  word  before  point  is  treated  as a pattern for pathname			              The  word  before  point  is  treated  as a pattern for pathname
              expansion, and the list of  matching  file  names  is  inserted,		      |	              expansion, and the  list  of  matching  filenames  is  inserted,
              replacing  the  word.   If  a  numeric  argument is supplied, an			              replacing  the  word.   If  a  numeric  argument is supplied, an
              asterisk is appended before pathname expansion.					              asterisk is appended before pathname expansion.
       gglloobb--lliisstt--eexxppaannssiioonnss ((CC--xx gg))								       gglloobb--lliisstt--eexxppaannssiioonnss ((CC--xx gg))
              The list  of  expansions  that  would  have  been  generated  by			              The list  of  expansions  that  would  have  been  generated  by
              gglloobb--eexxppaanndd--wwoorrdd  is  displayed,  and the line is redrawn.  If a			              gglloobb--eexxppaanndd--wwoorrdd  is  displayed,  and the line is redrawn.  If a
              numeric argument is supplied, an  asterisk  is  appended  before			              numeric argument is supplied, an  asterisk  is  appended  before
              pathname expansion.								              pathname expansion.
       dduummpp--ffuunnccttiioonnss										       dduummpp--ffuunnccttiioonnss
              Print  all  of the functions and their key bindings to the read-			              Print  all  of the functions and their key bindings to the read-
              line output stream.  If a numeric argument is supplied, the out-			              line output stream.  If a numeric argument is supplied, the out-
              put  is  formatted  in such a way that it can be made part of an			              put  is  formatted  in such a way that it can be made part of an
              _i_n_p_u_t_r_c file.									              _i_n_p_u_t_r_c file.
       dduummpp--vvaarriiaabblleess										       dduummpp--vvaarriiaabblleess
              Print all of the settable readline variables and their values to			              Print all of the settable readline variables and their values to
              the  readline output stream.  If a numeric argument is supplied,			              the  readline output stream.  If a numeric argument is supplied,
              the output is formatted in such a way that it can be  made  part			              the output is formatted in such a way that it can be  made  part
              of an _i_n_p_u_t_r_c file.								              of an _i_n_p_u_t_r_c file.
       dduummpp--mmaaccrrooss										       dduummpp--mmaaccrrooss
              Print  all of the readline key sequences bound to macros and the			              Print  all of the readline key sequences bound to macros and the
              strings they output.  If a numeric  argument  is  supplied,  the			              strings they output.  If a numeric  argument  is  supplied,  the
              output is formatted in such a way that it can be made part of an			              output is formatted in such a way that it can be made part of an
              _i_n_p_u_t_r_c file.									              _i_n_p_u_t_r_c file.
       ddiissppllaayy--sshheellll--vveerrssiioonn ((CC--xx CC--vv))								       ddiissppllaayy--sshheellll--vveerrssiioonn ((CC--xx CC--vv))
              Display version information about the current instance of  bbaasshh.			              Display version information about the current instance of  bbaasshh.

   PPrrooggrraammmmaabbllee CCoommpplleettiioonn									   PPrrooggrraammmmaabbllee CCoommpplleettiioonn
       When  word  completion  is  attempted  for an argument to a command for			       When  word  completion  is  attempted  for an argument to a command for
       which a completion specification (a _c_o_m_p_s_p_e_c) has  been  defined  using			       which a completion specification (a _c_o_m_p_s_p_e_c) has  been  defined  using
       the  ccoommpplleettee  builtin  (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS below), the pro-			       the  ccoommpplleettee  builtin  (see  SSHHEELLLL  BBUUIILLTTIINN  CCOOMMMMAANNDDSS below), the pro-
       grammable completion facilities are invoked.						       grammable completion facilities are invoked.

       First, the command name is identified.  If a compspec has been  defined		      |	       First, the command name is identified.  If  the  command  word  is  the
       for that command, the compspec is used to generate the list of possible		      |	       empty  string (completion attempted at the beginning of an empty line),
       completions for the word.  If the command word is a  full  pathname,  a		      |	       any compspec defined with the --EE option to  ccoommpplleettee  is  used.   If  a
       compspec  for  the full pathname is searched for first.  If no compspec		      |	       compspec  has  been  defined  for that command, the compspec is used to
       is found for the full pathname, an attempt is made to find  a  compspec		      |	       generate the list of possible completions for the word.  If the command
       for the portion following the final slash.					      |	       word  is  a full pathname, a compspec for the full pathname is searched
											      >	       for first.  If no compspec is found for the full pathname,  an  attempt
											      >	       is  made  to find a compspec for the portion following the final slash.
											      >	       If those searches do not result in a  compspec,  any  compspec  defined
											      >	       with  the --DD option to ccoommpplleettee is used as the default.  If there is no
											      >	       default compspec, bbaasshh attempts alias expansion on the command word  as
											      >	       a  final  resort,  and attempts to find a compspec for the command word
											      >	       from any successful expansion.

       Once  a  compspec  has  been  found, it is used to generate the list of		      |	       Once a compspec has been found, it is used  to  generate  the  list  of
       matching words.  If a compspec is not found, the default  bbaasshh  comple-		      |	       matching  words.   If a compspec is not found, the default bbaasshh comple-
       tion as described above under CCoommpplleettiinngg is performed.					       tion as described above under CCoommpplleettiinngg is performed.

       First,  the  actions  specified by the compspec are used.  Only matches		      |	       First, the actions specified by the compspec are  used.   Only  matches
       which are prefixed by the word being completed are returned.  When  the		      |	       which  are prefixed by the word being completed are returned.  When the
       --ff  or --dd option is used for filename or directory name completion, the		      |	       --ff or --dd option is used for filename or directory name completion,  the
       shell variable FFIIGGNNOORREE is used to filter the matches.					       shell variable FFIIGGNNOORREE is used to filter the matches.

       Any completions specified by a filename expansion  pattern  to  the  --GG		      |	       Any  completions  specified  by  a pathname expansion pattern to the --GG
       option are generated next.  The words generated by the pattern need not			       option are generated next.  The words generated by the pattern need not
       match the word being completed.  The GGLLOOBBIIGGNNOORREE shell variable  is  not		      |	       match  the  word being completed.  The GGLLOOBBIIGGNNOORREE shell variable is not
       used to filter the matches, but the FFIIGGNNOORREE variable is used.				       used to filter the matches, but the FFIIGGNNOORREE variable is used.

       Next,  the string specified as the argument to the --WW option is consid-		      |	       Next, the string specified as the argument to the --WW option is  consid-
       ered.  The string is first split using the characters in the  IIFFSS  spe-		      |	       ered.   The  string is first split using the characters in the IIFFSS spe-
       cial  variable  as delimiters.  Shell quoting is honored.  Each word is		      |	       cial variable as delimiters.  Shell quoting is honored.  Each  word  is
       then expanded using brace expansion,  tilde  expansion,  parameter  and		      |	       then  expanded  using  brace  expansion, tilde expansion, parameter and
       variable  expansion, command substitution, and arithmetic expansion, as		      |	       variable expansion, command substitution, and arithmetic expansion,  as
       described above under EEXXPPAANNSSIIOONN.  The results are split using the rules			       described above under EEXXPPAANNSSIIOONN.  The results are split using the rules
       described above under WWoorrdd SSpplliittttiinngg.  The results of the expansion are			       described above under WWoorrdd SSpplliittttiinngg.  The results of the expansion are
       prefix-matched against the word being completed, and the matching words			       prefix-matched against the word being completed, and the matching words
       become the possible completions.								       become the possible completions.

       After  these matches have been generated, any shell function or command		      |	       After these matches have been generated, any shell function or  command
       specified with the --FF and --CC options is invoked.  When the  command  or		      |	       specified  with  the --FF and --CC options is invoked.  When the command or
       function  is  invoked,  the  CCOOMMPP__LLIINNEE  and  CCOOMMPP__PPOOIINNTT  variables  are		      |	       function is invoked, the CCOOMMPP__LLIINNEE, CCOOMMPP__PPOOIINNTT, CCOOMMPP__KKEEYY, and CCOOMMPP__TTYYPPEE
       assigned values as described above under SShheellll VVaarriiaabblleess.  If  a  shell		      |	       variables are assigned values as described above under SShheellll VVaarriiaabblleess.
       function  is being invoked, the CCOOMMPP__WWOORRDDSS and CCOOMMPP__CCWWOORRDD variables are		      |	       If a shell function is being invoked,  the  CCOOMMPP__WWOORRDDSS  and  CCOOMMPP__CCWWOORRDD
       also set.  When the function or command is invoked, the first  argument		      |	       variables  are  also set.  When the function or command is invoked, the
       is  the  name  of  the command whose arguments are being completed, the		      |	       first argument ($$11) is the name of  the  command  whose  arguments  are
       second argument is the word being completed, and the third argument  is		      |	       being  completed, the second argument ($$22) is the word being completed,
       the  word  preceding  the  word  being completed on the current command		      |	       and the third argument ($$33) is the word preceding the word  being  com-
       line.  No filtering of the generated completions against the word being		      |	       pleted on the current command line.  No filtering of the generated com-
       completed is performed; the function or command has complete freedom in		      |	       pletions against the word being completed is performed; the function or
       generating the matches.								      |	       command has complete freedom in generating the matches.
											      |
       Any function specified with --FF is invoked first.  The function may  use		      |	       Any  function specified with --FF is invoked first.  The function may use
       any  of  the  shell facilities, including the ccoommppggeenn builtin described		      |	       any of the shell facilities, including the  ccoommppggeenn  builtin  described
       below, to generate the matches.  It must put the  possible  completions		      |	       below,  to  generate the matches.  It must put the possible completions
       in the CCOOMMPPRREEPPLLYY array variable.							      |	       in the CCOOMMPPRREEPPLLYY array variable, one per array element.
											      |
       Next,  any  command specified with the --CC option is invoked in an envi-		      |	       Next, any command specified with the --CC option is invoked in  an  envi-
       ronment equivalent to command substitution.  It should print a list  of		      |	       ronment  equivalent to command substitution.  It should print a list of
       completions,  one  per  line, to the standard output.  Backslash may be		      |	       completions, one per line, to the standard output.   Backslash  may  be
       used to escape a newline, if necessary.							       used to escape a newline, if necessary.

       After all of the possible completions are generated, any filter  speci-		      |	       After  all of the possible completions are generated, any filter speci-
       fied  with  the --XX option is applied to the list.  The filter is a pat-		      |	       fied with the --XX option is applied to the list.  The filter is  a  pat-
       tern as used for pathname expansion; a && in  the  pattern  is  replaced		      |	       tern  as  used  for  pathname expansion; a && in the pattern is replaced
       with  the text of the word being completed.  A literal && may be escaped		      |	       with the text of the word being completed.  A literal && may be  escaped
       with a backslash; the backslash is removed before attempting  a  match.		      |	       with  a  backslash; the backslash is removed before attempting a match.
       Any  completion that matches the pattern will be removed from the list.		      |	       Any completion that matches the pattern will be removed from the  list.
       A leading !! negates the pattern; in this case any completion not match-			       A leading !! negates the pattern; in this case any completion not match-
       ing the pattern will be removed.							      |	       ing the pattern will be removed.  If the nnooccaasseemmaattcchh  shell  option  is
											      >	       enabled,  the  match  is performed without regard to the case of alpha-
											      >	       betic characters.

       Finally, any prefix and suffix specified with the --PP and --SS options are			       Finally, any prefix and suffix specified with the --PP and --SS options are
       added to each member of the completion list, and the result is returned			       added to each member of the completion list, and the result is returned
       to the readline completion code as the list of possible completions.			       to the readline completion code as the list of possible completions.

       If  the previously-applied actions do not generate any matches, and the		      |	       If the previously-applied actions do not generate any matches, and  the
       --oo ddiirrnnaammeess option was supplied  to  ccoommpplleettee  when  the  compspec  was		      |	       --oo  ddiirrnnaammeess  option  was  supplied  to  ccoommpplleettee when the compspec was
       defined, directory name completion is attempted.						       defined, directory name completion is attempted.

       If  the  --oo  pplluussddiirrss option was supplied to ccoommpplleettee when the compspec		      |	       If the --oo pplluussddiirrss option was supplied to ccoommpplleettee  when  the  compspec
       was defined, directory name completion is attempted and any matches are			       was defined, directory name completion is attempted and any matches are
       added to the results of the other actions.						       added to the results of the other actions.

       By  default,  if a compspec is found, whatever it generates is returned		      |	       By default, if a compspec is found, whatever it generates  is  returned
       to the completion code as the full set of  possible  completions.   The		      |	       to  the  completion  code as the full set of possible completions.  The
       default bbaasshh completions are not attempted, and the readline default of			       default bbaasshh completions are not attempted, and the readline default of
       filename completion is disabled.  If the --oo bbaasshhddeeffaauulltt option was sup-			       filename completion is disabled.  If the --oo bbaasshhddeeffaauulltt option was sup-
       plied  to ccoommpplleettee when the compspec was defined, the bbaasshh default com-		      |	       plied to ccoommpplleettee when the compspec was defined, the bbaasshh default  com-
       pletions are attempted if the compspec generates no matches.  If the --oo			       pletions are attempted if the compspec generates no matches.  If the --oo
       ddeeffaauulltt  option was supplied to ccoommpplleettee when the compspec was defined,		      |	       ddeeffaauulltt option was supplied to ccoommpplleettee when the compspec was  defined,
       readline's default completion will be performed if the  compspec  (and,		      |	       readline's  default  completion will be performed if the compspec (and,
       if attempted, the default bbaasshh completions) generate no matches.				       if attempted, the default bbaasshh completions) generate no matches.

       When  a  compspec  indicates that directory name completion is desired,		      |	       When a compspec indicates that directory name  completion  is  desired,
       the programmable completion functions force readline to append a  slash		      |	       the  programmable completion functions force readline to append a slash
       to  completed names which are symbolic links to directories, subject to		      |	       to completed names which are symbolic links to directories, subject  to
       the value of the mmaarrkk--ddiirreeccttoorriieess readline variable, regardless of  the		      |	       the  value of the mmaarrkk--ddiirreeccttoorriieess readline variable, regardless of the
       setting of the mmaarrkk--ssyymmlliinnkkeedd--ddiirreeccttoorriieess readline variable.				       setting of the mmaarrkk--ssyymmlliinnkkeedd--ddiirreeccttoorriieess readline variable.

											      >	       There is some support for dynamically modifying completions.   This  is
											      >	       most  useful  when used in combination with a default completion speci-
											      >	       fied with ccoommpplleettee --DD.  It's possible for shell functions  executed  as
											      >	       completion  handlers  to  indicate that completion should be retried by
											      >	       returning an exit status of 124.  If a shell function returns 124,  and
											      >	       changes the compspec associated with the command on which completion is
											      >	       being attempted (supplied as the first argument when  the  function  is
											      >	       executed), programmable completion restarts from the beginning, with an
											      >	       attempt to find a new compspec for that command.  This allows a set  of
											      >	       completions  to be built dynamically as completion is attempted, rather
											      >	       than being loaded all at once.
											      >
											      >	       For instance, assuming that there is a library of compspecs, each  kept
											      >	       in  a  file  corresponding  to  the  name of the command, the following
											      >	       default completion function would load completions dynamically:
											      >
											      >	       _completion_loader()
											      >	       {
											      >	            . "/etc/bash_completion.d/$1.sh" >/dev/null 2>&1 && return 124
											      >	       }
											      >	       complete -D -F _completion_loader -o bashdefault -o default
											      >
											      >
HHIISSTTOORRYY												HHIISSTTOORRYY
       When  the  --oo  hhiissttoorryy  option to the sseett builtin is enabled, the shell		      |	       When the --oo hhiissttoorryy option to the sseett builtin  is  enabled,  the  shell
       provides access to the _c_o_m_m_a_n_d _h_i_s_t_o_r_y, the list of commands previously			       provides access to the _c_o_m_m_a_n_d _h_i_s_t_o_r_y, the list of commands previously
       typed.   The  value  of  the HHIISSTTSSIIZZEE variable is used as the number of		      |	       typed.  The value of the HHIISSTTSSIIZZEE variable is used  as  the  number  of
       commands to save in a history list.  The text of the last HHIISSTTSSIIZZEE com-			       commands to save in a history list.  The text of the last HHIISSTTSSIIZZEE com-
       mands  (default  500)  is  saved.  The shell stores each command in the		      |	       mands (default 500) is saved.  The shell stores  each  command  in  the
       history list prior to parameter and variable expansion  (see  EEXXPPAANNSSIIOONN		      |	       history  list  prior to parameter and variable expansion (see EEXXPPAANNSSIIOONN
       above)  but after history expansion is performed, subject to the values		      |	       above) but after history expansion is performed, subject to the  values
       of the shell variables HHIISSTTIIGGNNOORREE and HHIISSTTCCOONNTTRROOLL.					       of the shell variables HHIISSTTIIGGNNOORREE and HHIISSTTCCOONNTTRROOLL.

       On startup, the history is initialized from the file named by the vari-			       On startup, the history is initialized from the file named by the vari-
       able  HHIISSTTFFIILLEE  (default _~_/_._b_a_s_h___h_i_s_t_o_r_y).  The file named by the value		      |	       able HHIISSTTFFIILLEE (default _~_/_._b_a_s_h___h_i_s_t_o_r_y).  The file named by  the  value
       of HHIISSTTFFIILLEE is truncated, if necessary, to contain  no  more  than  the		      |	       of  HHIISSTTFFIILLEE  is  truncated,  if necessary, to contain no more than the
       number of lines specified by the value of HHIISSTTFFIILLEESSIIZZEE.  When an inter-		      |	       number of lines specified by the value of HHIISSTTFFIILLEESSIIZZEE.   If  HHIISSTTFFIILLEE--
       active shell exits, the last $$HHIISSTTSSIIZZEE lines are copied from  the  his-		      |	       SSIIZZEE  is unset, or set to null, a non-numeric value, or a numeric value
       tory list to $$HHIISSTTFFIILLEE.  If the hhiissttaappppeenndd shell option is enabled (see		      |	       less than zero, the history file is not truncated.   When  the  history
       the description of sshhoopptt under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below), the lines		      |	       file  is  read, lines beginning with the history comment character fol-
       are  appended  to the history file, otherwise the history file is over-		      |	       lowed immediately by a digit are interpreted as timestamps for the fol-
       written.  If HHIISSTTFFIILLEE is unset, or if the history file  is  unwritable,		      |	       lowing history line.  These timestamps are optionally displayed depend-
       the  history  is not saved.  After saving the history, the history file		      |	       ing on the value of the HHIISSTTTTIIMMEEFFOORRMMAATT variable.   When  a  shell  with
       is truncated to contain no more than HHIISSTTFFIILLEESSIIZZEE lines.  If  HHIISSTTFFIILLEE--		      |	       history  enabled  exits,  the  last $$HHIISSTTSSIIZZEE lines are copied from the
       SSIIZZEE is not set, no truncation is performed.					      |	       history list to $$HHIISSTTFFIILLEE.  If the hhiissttaappppeenndd shell option  is  enabled
											      >	       (see  the description of sshhoopptt under SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below), the
											      >	       lines are appended to the history file, otherwise the history  file  is
											      >	       overwritten.   If  HHIISSTTFFIILLEE  is  unset,  or  if  the  history  file  is
											      >	       unwritable, the history is not saved.  If the  HHIISSTTTTIIMMEEFFOORRMMAATT  variable
											      >	       is  set,  time  stamps are written to the history file, marked with the
											      >	       history comment character, so they may be preserved across  shell  ses-
											      >	       sions.   This  uses  the history comment character to distinguish time-
											      >	       stamps from other history lines.  After saving the history, the history
											      >	       file is truncated to contain no more than HHIISSTTFFIILLEESSIIZZEE lines.  If HHIISSTT--
											      >	       FFIILLEESSIIZZEE is unset, or set to null, a non-numeric value,  or  a  numeric
											      >	       value less than zero, the history file is not truncated.

       The  builtin  command ffcc (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below) may be used			       The  builtin  command ffcc (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below) may be used
       to list or edit and re-execute a portion of the history list.  The hhiiss--			       to list or edit and re-execute a portion of the history list.  The hhiiss--
       ttoorryy  builtin  may  be  used  to display or modify the history list and			       ttoorryy  builtin  may  be  used  to display or modify the history list and
       manipulate the history file.  When using command-line  editing,  search			       manipulate the history file.  When using command-line  editing,  search
       commands  are available in each editing mode that provide access to the			       commands  are available in each editing mode that provide access to the
       history list.										       history list.

       The shell allows control over which commands are saved on  the  history			       The shell allows control over which commands are saved on  the  history
       list.  The HHIISSTTCCOONNTTRROOLL and HHIISSTTIIGGNNOORREE variables may be set to cause the			       list.  The HHIISSTTCCOONNTTRROOLL and HHIISSTTIIGGNNOORREE variables may be set to cause the
       shell to save only a subset of the commands entered.  The ccmmddhhiisstt shell			       shell to save only a subset of the commands entered.  The ccmmddhhiisstt shell
       option,  if enabled, causes the shell to attempt to save each line of a			       option,  if enabled, causes the shell to attempt to save each line of a
       multi-line command in the same history entry, adding  semicolons  where			       multi-line command in the same history entry, adding  semicolons  where
       necessary  to preserve syntactic correctness.  The lliitthhiisstt shell option			       necessary  to preserve syntactic correctness.  The lliitthhiisstt shell option
       causes the shell to save the command with embedded newlines instead  of			       causes the shell to save the command with embedded newlines instead  of
       semicolons.  See the description of the sshhoopptt builtin below under SSHHEELLLL			       semicolons.  See the description of the sshhoopptt builtin below under SSHHEELLLL
       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  for  information  on  setting  and  unsetting  shell			       BBUUIILLTTIINN  CCOOMMMMAANNDDSS  for  information  on  setting  and  unsetting  shell
       options.											       options.

HHIISSTTOORRYY EEXXPPAANNSSIIOONN										HHIISSTTOORRYY EEXXPPAANNSSIIOONN
       The  shell  supports a history expansion feature that is similar to the			       The  shell  supports a history expansion feature that is similar to the
       history expansion in ccsshh..  This section describes what syntax  features		      |	       history expansion in ccsshh.  This section describes what syntax  features
       are  available.   This  feature  is  enabled by default for interactive			       are  available.   This  feature  is  enabled by default for interactive
       shells, and can be disabled using the ++HH option to the sseett builtin com-			       shells, and can be disabled using the ++HH option to the sseett builtin com-
       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  Non-interactive shells do not			       mand (see SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS below).  Non-interactive shells do not
       perform history expansion by default.							       perform history expansion by default.

       History expansions introduce words from the history list into the input			       History expansions introduce words from the history list into the input
       stream,  making  it  easy to repeat commands, insert the arguments to a			       stream,  making  it  easy to repeat commands, insert the arguments to a
       previous command into the current input line, or fix errors in previous			       previous command into the current input line, or fix errors in previous
       commands quickly.									       commands quickly.

       History  expansion  is  performed  immediately after a complete line is			       History  expansion  is  performed  immediately after a complete line is
       read, before the shell breaks it into words.  It  takes  place  in  two		      |	       read, before the shell breaks it into words, and is performed  on  each
       parts.   The  first is to determine which line from the history list to		      |	       line  individually  without  taking  quoting  on  previous  lines  into
       use during substitution.  The second is to select portions of that line		      |	       account.  It takes place in two parts.  The first is to determine which
       for inclusion into the current one.  The line selected from the history		      |	       line  from  the history list to use during substitution.  The second is
       is the _e_v_e_n_t, and the portions of that line that  are  acted  upon  are		      |	       to select portions of that line for inclusion  into  the  current  one.
       _w_o_r_d_s.   Various  _m_o_d_i_f_i_e_r_s  are  available  to manipulate the selected		      |	       The  line  selected  from the history is the _e_v_e_n_t, and the portions of
       words.  The line is broken into words in the same fashion as when read-		      |	       that line that are acted upon are _w_o_r_d_s.  Various _m_o_d_i_f_i_e_r_s are  avail-
       ing  input, so that several _m_e_t_a_c_h_a_r_a_c_t_e_r-separated words surrounded by		      |	       able  to  manipulate the selected words.  The line is broken into words
       quotes are considered one word.  History expansions are  introduced  by		      |	       in the same fashion as when reading input, so that several  _m_e_t_a_c_h_a_r_a_c_-
       the  appearance  of  the  history  expansion  character,  which is !! by		      |	       _t_e_r-separated words surrounded by quotes are considered one word.  His-
       default.  Only backslash (\\) and single quotes can  quote  the  history		      |	       tory expansions are introduced by the appearance of the history  expan-
       expansion character.								      |	       sion  character,  which is !! by default.  Only backslash (\\) and single
											      |	       quotes can quote the  history  expansion  character,  but  the  history
       Several  characters inhibit history expansion if found immediately fol-		      |	       expansion  character  is  also treated as quoted if it immediately pre-
       lowing the history expansion character, even if it is unquoted:  space,		      |	       cedes the closing double quote in a double-quoted string.
       tab,  newline,  carriage return, and ==.  If the eexxttgglloobb shell option is		      |
											      >	       Several characters inhibit history expansion if found immediately  fol-
											      >	       lowing  the history expansion character, even if it is unquoted: space,
											      >	       tab, newline, carriage return, and ==.  If the eexxttgglloobb shell  option  is
       enabled, (( will also inhibit expansion.							       enabled, (( will also inhibit expansion.

       Several shell options settable with the sshhoopptt builtin may  be  used  to		      |	       Several  shell  options  settable with the sshhoopptt builtin may be used to
       tailor  the  behavior  of  history  expansion.  If the hhiissttvveerriiffyy shell		      |	       tailor the behavior of history  expansion.   If  the  hhiissttvveerriiffyy  shell
       option is enabled (see the description of the sshhoopptt builtin), and rreeaadd--		      |	       option is enabled (see the description of the sshhoopptt builtin below), and
       lliinnee is being used, history substitutions are not immediately passed to		      |	       rreeaaddlliinnee is being  used,  history  substitutions  are  not  immediately
       the shell parser.  Instead, the expanded  line  is  reloaded  into  the		      |	       passed  to  the  shell  parser.  Instead, the expanded line is reloaded
       rreeaaddlliinnee editing buffer for further modification.  If rreeaaddlliinnee is being		      |	       into the rreeaaddlliinnee editing buffer for further modification.  If rreeaaddlliinnee
       used, and the hhiissttrreeeeddiitt shell option is enabled, a failed history sub-		      |	       is  being  used,  and  the hhiissttrreeeeddiitt shell option is enabled, a failed
       stitution will be reloaded into the rreeaaddlliinnee editing buffer for correc-		      |	       history substitution will be reloaded into the rreeaaddlliinnee editing  buffer
       tion.  The --pp option to the hhiissttoorryy builtin command may be used to  see		      |	       for  correction.   The  --pp option to the hhiissttoorryy builtin command may be
       what a history expansion will do before using it.  The --ss option to the		      |	       used to see what a history expansion will do before using it.   The  --ss
       hhiissttoorryy builtin may be used to add commands to the end of  the  history		      |	       option to the hhiissttoorryy builtin may be used to add commands to the end of
       list  without  actually  executing them, so that they are available for		      |	       the history list without actually executing  them,  so  that  they  are
       subsequent recall.								      |	       available for subsequent recall.

       The shell allows control of the various characters used by the  history		      |	       The  shell allows control of the various characters used by the history
       expansion mechanism (see the description of hhiissttcchhaarrss above under SShheellll			       expansion mechanism (see the description of hhiissttcchhaarrss above under SShheellll
       VVaarriiaabblleess).									      |	       VVaarriiaabblleess).   The shell uses the history comment character to mark his-
											      >	       tory timestamps when writing the history file.

   EEvveenntt DDeessiiggnnaattoorrss										   EEvveenntt DDeessiiggnnaattoorrss
       An event designator is a reference to a command line entry in the  his-			       An event designator is a reference to a command line entry in the  his-
       tory list.									      |	       tory  list.   Unless  the reference is absolute, events are relative to
											      >	       the current position in the history list.

       !!      Start  a  history substitution, except when followed by a bbllaannkk,		      |	       !!      Start a history substitution, except when followed by  a  bbllaannkk,
              newline, carriage return, = or ( (when the eexxttgglloobb shell  option		      |	              newline,  carriage return, = or ( (when the eexxttgglloobb shell option
              is enabled using the sshhoopptt builtin).						              is enabled using the sshhoopptt builtin).
       !!_n     Refer to command line _n.								       !!_n     Refer to command line _n.
       !!--_n    Refer to the current command line minus _n.				      |	       !!--_n    Refer to the current command minus _n.
       !!!!     Refer to the previous command.  This is a synonym for `!-1'.			       !!!!     Refer to the previous command.  This is a synonym for `!-1'.
       !!_s_t_r_i_n_g											       !!_s_t_r_i_n_g
              Refer to the most recent command starting with _s_t_r_i_n_g.			      |	              Refer to the most recent command preceding the current  position
											      >	              in the history list starting with _s_t_r_i_n_g.
       !!??_s_t_r_i_n_g[[??]]										       !!??_s_t_r_i_n_g[[??]]
              Refer  to the most recent command containing _s_t_r_i_n_g.  The trail-		      |	              Refer  to the most recent command preceding the current position
              ing ?? may be omitted if _s_t_r_i_n_g is followed immediately by a new-		      |	              in the history list containing _s_t_r_i_n_g.  The trailing  ??  may  be
              line.									      |	              omitted if _s_t_r_i_n_g is followed immediately by a newline.
       ^^_s_t_r_i_n_g_1^^_s_t_r_i_n_g_2^^									       ^^_s_t_r_i_n_g_1^^_s_t_r_i_n_g_2^^
              Quick  substitution.  Repeat the last command, replacing _s_t_r_i_n_g_1		      |	              Quick  substitution.   Repeat  the  previous  command, replacing
              with _s_t_r_i_n_g_2.  Equivalent to ``!!:s/_s_t_r_i_n_g_1/_s_t_r_i_n_g_2/'' (see MMoodd--		      |	              _s_t_r_i_n_g_1 with _s_t_r_i_n_g_2.  Equivalent  to  ``!!:s/_s_t_r_i_n_g_1/_s_t_r_i_n_g_2/''
              iiffiieerrss below).								      |	              (see MMooddiiffiieerrss below).
       !!##     The entire command line typed so far.						       !!##     The entire command line typed so far.

   WWoorrdd DDeessiiggnnaattoorrss										   WWoorrdd DDeessiiggnnaattoorrss
       Word  designators are used to select desired words from the event.  A ::			       Word  designators are used to select desired words from the event.  A ::
       separates the event specification from the word designator.  It may  be			       separates the event specification from the word designator.  It may  be
       omitted  if  the word designator begins with a ^^, $$, **, --, or %%.  Words			       omitted  if  the word designator begins with a ^^, $$, **, --, or %%.  Words
       are numbered from the beginning of the line, with the first word  being			       are numbered from the beginning of the line, with the first word  being
       denoted  by  0  (zero).  Words are inserted into the current line sepa-			       denoted  by  0  (zero).  Words are inserted into the current line sepa-
       rated by single spaces.									       rated by single spaces.

       00 ((zzeerroo))											       00 ((zzeerroo))
              The zeroth word.  For the shell, this is the command word.			              The zeroth word.  For the shell, this is the command word.
       _n      The _nth word.									       _n      The _nth word.
       ^^      The first argument.  That is, word 1.						       ^^      The first argument.  That is, word 1.
       $$      The last argument.							      |	       $$      The last word.  This is usually  the  last  argument,  but  will
											      >	              expand to the zeroth word if there is only one word in the line.
       %%      The word matched by the most recent `?_s_t_r_i_n_g?' search.				       %%      The word matched by the most recent `?_s_t_r_i_n_g?' search.
       _x--_y    A range of words; `-_y' abbreviates `0-_y'.						       _x--_y    A range of words; `-_y' abbreviates `0-_y'.
       **      All of the words but the zeroth.  This is a synonym  for  `_1_-_$'.			       **      All of the words but the zeroth.  This is a synonym  for  `_1_-_$'.
              It  is  not  an  error to use ** if there is just one word in the			              It  is  not  an  error to use ** if there is just one word in the
              event; the empty string is returned in that case.					              event; the empty string is returned in that case.
       xx**     Abbreviates _x_-_$.									       xx**     Abbreviates _x_-_$.
       xx--     Abbreviates _x_-_$ like xx**, but omits the last word.					       xx--     Abbreviates _x_-_$ like xx**, but omits the last word.

       If a word designator is supplied without an  event  specification,  the			       If a word designator is supplied without an  event  specification,  the
       previous command is used as the event.							       previous command is used as the event.

   MMooddiiffiieerrss											   MMooddiiffiieerrss
       After  the optional word designator, there may appear a sequence of one			       After  the optional word designator, there may appear a sequence of one
       or more of the following modifiers, each preceded by a `:'.				       or more of the following modifiers, each preceded by a `:'.

       hh      Remove a trailing file name component, leaving only the head.		      |	       hh      Remove a trailing filename component, leaving only the head.
       tt      Remove all leading file name components, leaving the tail.		      |	       tt      Remove all leading filename components, leaving the tail.
       rr      Remove a trailing suffix of the form _._x_x_x, leaving the basename.			       rr      Remove a trailing suffix of the form _._x_x_x, leaving the basename.
       ee      Remove all but the trailing suffix.						       ee      Remove all but the trailing suffix.
       pp      Print the new command but do not execute it.					       pp      Print the new command but do not execute it.
       qq      Quote the substituted words, escaping further substitutions.			       qq      Quote the substituted words, escaping further substitutions.
       xx      Quote  the  substituted words as with qq, but break into words at			       xx      Quote  the  substituted words as with qq, but break into words at
              bbllaannkkss and newlines.								              bbllaannkkss and newlines.
       ss//_o_l_d//_n_e_w//										       ss//_o_l_d//_n_e_w//
              Substitute _n_e_w for the first occurrence  of  _o_l_d  in  the  event			              Substitute _n_e_w for the first occurrence  of  _o_l_d  in  the  event
              line.   Any  delimiter  can  be  used  in place of /.  The final			              line.   Any  delimiter  can  be  used  in place of /.  The final
              delimiter is optional if it is the last character of  the  event			              delimiter is optional if it is the last character of  the  event
              line.   The delimiter may be quoted in _o_l_d and _n_e_w with a single			              line.   The delimiter may be quoted in _o_l_d and _n_e_w with a single
              backslash.  If & appears in _n_e_w, it is replaced by _o_l_d.  A  sin-			              backslash.  If & appears in _n_e_w, it is replaced by _o_l_d.  A  sin-
              gle  backslash  will  quote the &.  If _o_l_d is null, it is set to			              gle  backslash  will  quote the &.  If _o_l_d is null, it is set to
              the last _o_l_d substituted, or, if no previous  history  substitu-			              the last _o_l_d substituted, or, if no previous  history  substitu-
              tions took place, the last _s_t_r_i_n_g in a !!??_s_t_r_i_n_g[[??]]  search.			              tions took place, the last _s_t_r_i_n_g in a !!??_s_t_r_i_n_g[[??]]  search.
       &&      Repeat the previous substitution.							       &&      Repeat the previous substitution.
       gg      Cause changes to be applied over the entire event line.  This is			       gg      Cause changes to be applied over the entire event line.  This is
              used in conjunction with `::ss' (e.g.,  `::ggss//_o_l_d//_n_e_w//')  or  `::&&'.			              used in conjunction with `::ss' (e.g.,  `::ggss//_o_l_d//_n_e_w//')  or  `::&&'.
              If  used with `::ss', any delimiter can be used in place of /, and			              If  used with `::ss', any delimiter can be used in place of /, and
              the final delimiter is optional if it is the last  character  of			              the final delimiter is optional if it is the last  character  of
              the event line.  An aa may be used as a synonym for gg.				              the event line.  An aa may be used as a synonym for gg.
       GG      Apply  the following `ss' modifier once to each word in the event			       GG      Apply  the following `ss' modifier once to each word in the event
              line.										              line.

SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS										SSHHEELLLL BBUUIILLTTIINN CCOOMMMMAANNDDSS
       Unless otherwise noted, each builtin command documented in this section			       Unless otherwise noted, each builtin command documented in this section
       as accepting options preceded by -- accepts ---- to signify the end of the			       as accepting options preceded by -- accepts ---- to signify the end of the
       options.  For example, the ::, ttrruuee, ffaallssee, and  tteesstt  builtins  do  not		      |	       options.  The ::, ttrruuee, ffaallssee, and tteesstt/[[ builtins do not accept options
       accept options.									      |	       and  do  not treat ---- specially.  The eexxiitt, llooggoouutt, rreettuurrnn, bbrreeaakk, ccoonn--
											      >	       ttiinnuuee, lleett, and sshhiifftt builtins accept and process  arguments  beginning
											      >	       with  -- without requiring ----.  Other builtins that accept arguments but
											      >	       are not specified as accepting options  interpret  arguments  beginning
											      >	       with  --  as  invalid options and require ---- to prevent this interpreta-
											      >	       tion.
       :: [_a_r_g_u_m_e_n_t_s]										       :: [_a_r_g_u_m_e_n_t_s]
              No  effect;  the command does nothing beyond expanding _a_r_g_u_m_e_n_t_s		      |	              No effect; the command does nothing beyond  expanding  _a_r_g_u_m_e_n_t_s
              and performing any specified redirections.  A zero exit code  is		      |	              and performing any specified redirections.  The return status is
              returned.									      |	              zero.

        ..  _f_i_l_e_n_a_m_e [_a_r_g_u_m_e_n_t_s]									        ..  _f_i_l_e_n_a_m_e [_a_r_g_u_m_e_n_t_s]
       ssoouurrccee _f_i_l_e_n_a_m_e [_a_r_g_u_m_e_n_t_s]								       ssoouurrccee _f_i_l_e_n_a_m_e [_a_r_g_u_m_e_n_t_s]
              Read  and  execute  commands  from _f_i_l_e_n_a_m_e in the current shell		      |	              Read and execute commands from _f_i_l_e_n_a_m_e  in  the  current  shell
              environment and return the exit status of the last command  exe-		      |	              environment  and return the exit status of the last command exe-
              cuted from _f_i_l_e_n_a_m_e.  If _f_i_l_e_n_a_m_e does not contain a slash, file		      |	              cuted from _f_i_l_e_n_a_m_e.  If _f_i_l_e_n_a_m_e  does  not  contain  a  slash,
              names in PPAATTHH are used to find the  directory  containing  _f_i_l_e_-		      |	              filenames  in  PPAATTHH  are  used  to find the directory containing
              _n_a_m_e.   The  file  searched  for in PPAATTHH need not be executable.		      |	              _f_i_l_e_n_a_m_e.  The file searched for in PPAATTHH need not be executable.
              When bbaasshh is  not  in  _p_o_s_i_x  _m_o_d_e,  the  current  directory  is		      |	              When  bbaasshh  is  not  in  _p_o_s_i_x  _m_o_d_e,  the  current directory is
              searched  if no file is found in PPAATTHH.  If the ssoouurrcceeppaatthh option		      |	              searched if no file is found in PPAATTHH.  If the ssoouurrcceeppaatthh  option
              to the sshhoopptt builtin command is turned  off,  the  PPAATTHH  is  not		      |	              to  the  sshhoopptt  builtin  command  is turned off, the PPAATTHH is not
              searched.   If any _a_r_g_u_m_e_n_t_s are supplied, they become the posi-		      |	              searched.  If any _a_r_g_u_m_e_n_t_s are supplied, they become the  posi-
              tional parameters when  _f_i_l_e_n_a_m_e  is  executed.   Otherwise  the		      |	              tional  parameters  when  _f_i_l_e_n_a_m_e  is  executed.  Otherwise the
              positional  parameters  are unchanged.  The return status is the		      |	              positional parameters  are  unchanged.   If  the  --TT  option  is
              status of the last command exited within the  script  (0  if  no		      |	              enabled,  ssoouurrccee  inherits  any trap on DDEEBBUUGG; if it is not, any
              commands  are  executed),  and false if _f_i_l_e_n_a_m_e is not found or		      |	              DDEEBBUUGG trap string is saved  and  restored  around  the  call  to
											      >	              ssoouurrccee,  and ssoouurrccee unsets the DDEEBBUUGG trap while it executes.  If
											      >	              --TT is not set, and the sourced file changes the DDEEBBUUGG trap,  the
											      >	              new  value is retained when ssoouurrccee completes.  The return status
											      >	              is the status of the last command exited within the script (0 if
											      >	              no commands are executed), and false if _f_i_l_e_n_a_m_e is not found or
              cannot be read.									              cannot be read.

       aalliiaass [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]								       aalliiaass [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]
              AAlliiaass with no arguments or with the --pp option prints the list of			              AAlliiaass with no arguments or with the --pp option prints the list of
              aliases  in  the form aalliiaass _n_a_m_e=_v_a_l_u_e on standard output.  When			              aliases  in  the form aalliiaass _n_a_m_e=_v_a_l_u_e on standard output.  When
              arguments are supplied, an alias is defined for each _n_a_m_e  whose			              arguments are supplied, an alias is defined for each _n_a_m_e  whose
              _v_a_l_u_e is given.  A trailing space in  _v_a_l_u_e causes the next word		      |	              _v_a_l_u_e  is given.  A trailing space in _v_a_l_u_e causes the next word
              to be checked for alias substitution when the alias is expanded.			              to be checked for alias substitution when the alias is expanded.
              For  each  _n_a_m_e  in the argument list for which no _v_a_l_u_e is sup-			              For  each  _n_a_m_e  in the argument list for which no _v_a_l_u_e is sup-
              plied, the name and  value  of  the  alias  is  printed.   AAlliiaass			              plied, the name and  value  of  the  alias  is  printed.   AAlliiaass
              returns  true unless a _n_a_m_e is given for which no alias has been			              returns  true unless a _n_a_m_e is given for which no alias has been
              defined.										              defined.

       bbgg [_j_o_b_s_p_e_c ...]										       bbgg [_j_o_b_s_p_e_c ...]
              Resume each suspended job _j_o_b_s_p_e_c in the background,  as  if  it			              Resume each suspended job _j_o_b_s_p_e_c in the background,  as  if  it
              had been started with &&.  If _j_o_b_s_p_e_c is not present, the shell's			              had been started with &&.  If _j_o_b_s_p_e_c is not present, the shell's
              notion of the _c_u_r_r_e_n_t _j_o_b is used.  bbgg _j_o_b_s_p_e_c returns 0  unless			              notion of the _c_u_r_r_e_n_t _j_o_b is used.  bbgg _j_o_b_s_p_e_c returns 0  unless
              run  when  job control is disabled or, when run with job control			              run  when  job control is disabled or, when run with job control
              enabled, any specified _j_o_b_s_p_e_c was  not  found  or  was  started			              enabled, any specified _j_o_b_s_p_e_c was  not  found  or  was  started
              without job control.								              without job control.

       bbiinndd [--mm _k_e_y_m_a_p] [--llppssvvPPSSVV]							      |	       bbiinndd [--mm _k_e_y_m_a_p] [--llppssvvPPSSVVXX]
       bbiinndd [--mm _k_e_y_m_a_p] [--qq _f_u_n_c_t_i_o_n] [--uu _f_u_n_c_t_i_o_n] [--rr _k_e_y_s_e_q]					       bbiinndd [--mm _k_e_y_m_a_p] [--qq _f_u_n_c_t_i_o_n] [--uu _f_u_n_c_t_i_o_n] [--rr _k_e_y_s_e_q]
       bbiinndd [--mm _k_e_y_m_a_p] --ff _f_i_l_e_n_a_m_e								       bbiinndd [--mm _k_e_y_m_a_p] --ff _f_i_l_e_n_a_m_e
       bbiinndd [--mm _k_e_y_m_a_p] --xx _k_e_y_s_e_q:_s_h_e_l_l_-_c_o_m_m_a_n_d							       bbiinndd [--mm _k_e_y_m_a_p] --xx _k_e_y_s_e_q:_s_h_e_l_l_-_c_o_m_m_a_n_d
       bbiinndd [--mm _k_e_y_m_a_p] _k_e_y_s_e_q:_f_u_n_c_t_i_o_n_-_n_a_m_e							       bbiinndd [--mm _k_e_y_m_a_p] _k_e_y_s_e_q:_f_u_n_c_t_i_o_n_-_n_a_m_e
       bbiinndd _r_e_a_d_l_i_n_e_-_c_o_m_m_a_n_d								      |	       bbiinndd [--mm _k_e_y_m_a_p] _k_e_y_s_e_q:_r_e_a_d_l_i_n_e_-_c_o_m_m_a_n_d
              Display  current  rreeaaddlliinnee key and function bindings, bind a key			              Display  current  rreeaaddlliinnee key and function bindings, bind a key
              sequence to a rreeaaddlliinnee function or  macro,  or  set  a  rreeaaddlliinnee			              sequence to a rreeaaddlliinnee function or  macro,  or  set  a  rreeaaddlliinnee
              variable.   Each  non-option  argument  is a command as it would			              variable.   Each  non-option  argument  is a command as it would
              appear in _._i_n_p_u_t_r_c, but each binding or command must  be  passed			              appear in _._i_n_p_u_t_r_c, but each binding or command must  be  passed
              as  a  separate argument; e.g., '"\C-x\C-r": re-read-init-file'.			              as  a  separate argument; e.g., '"\C-x\C-r": re-read-init-file'.
              Options, if supplied, have the following meanings:				              Options, if supplied, have the following meanings:
              --mm _k_e_y_m_a_p										              --mm _k_e_y_m_a_p
                     Use _k_e_y_m_a_p as the keymap to be affected by the subsequent			                     Use _k_e_y_m_a_p as the keymap to be affected by the subsequent
                     bindings.  Acceptable _k_e_y_m_a_p names are _e_m_a_c_s_, _e_m_a_c_s_-_s_t_a_n_-			                     bindings.  Acceptable _k_e_y_m_a_p names are _e_m_a_c_s_, _e_m_a_c_s_-_s_t_a_n_-
                     _d_a_r_d_, _e_m_a_c_s_-_m_e_t_a_, _e_m_a_c_s_-_c_t_l_x_,  _v_i_,  _v_i_-_m_o_v_e_,  _v_i_-_c_o_m_m_a_n_d,			                     _d_a_r_d_, _e_m_a_c_s_-_m_e_t_a_, _e_m_a_c_s_-_c_t_l_x_,  _v_i_,  _v_i_-_m_o_v_e_,  _v_i_-_c_o_m_m_a_n_d,
                     and  _v_i_-_i_n_s_e_r_t.  _v_i is equivalent to _v_i_-_c_o_m_m_a_n_d; _e_m_a_c_s is		      |	                     and  _v_i_-_i_n_s_e_r_t.   _v_i is equivalent to _v_i_-_c_o_m_m_a_n_d (_v_i_-_m_o_v_e
                     equivalent to _e_m_a_c_s_-_s_t_a_n_d_a_r_d.					      |	                     is also a synonym); _e_m_a_c_s is  equivalent  to  _e_m_a_c_s_-_s_t_a_n_-
											      >	                     _d_a_r_d.
              --ll     List the names of all rreeaaddlliinnee functions.					              --ll     List the names of all rreeaaddlliinnee functions.
              --pp     Display rreeaaddlliinnee function names and bindings  in  such  a		      |	              --pp     Display  rreeaaddlliinnee  function  names and bindings in such a
                     way that they can be re-read.						                     way that they can be re-read.
              --PP     List current rreeaaddlliinnee function names and bindings.				              --PP     List current rreeaaddlliinnee function names and bindings.
              --vv     Display  rreeaaddlliinnee variable names and values in such a way		      <
                     that they can be re-read.						      <
              --VV     List current rreeaaddlliinnee variable names and values.			      <
              --ss     Display rreeaaddlliinnee key sequences bound to  macros  and  the			              --ss     Display rreeaaddlliinnee key sequences bound to  macros  and  the
                     strings  they  output  in such a way that they can be re-			                     strings  they  output  in such a way that they can be re-
                     read.									                     read.
              --SS     Display rreeaaddlliinnee key sequences bound to  macros  and  the			              --SS     Display rreeaaddlliinnee key sequences bound to  macros  and  the
                     strings they output.							                     strings they output.
											      >	              --vv     Display  rreeaaddlliinnee variable names and values in such a way
											      >	                     that they can be re-read.
											      >	              --VV     List current rreeaaddlliinnee variable names and values.
              --ff _f_i_l_e_n_a_m_e									              --ff _f_i_l_e_n_a_m_e
                     Read key bindings from _f_i_l_e_n_a_m_e.						                     Read key bindings from _f_i_l_e_n_a_m_e.
              --qq _f_u_n_c_t_i_o_n									              --qq _f_u_n_c_t_i_o_n
                     Query about which keys invoke the named _f_u_n_c_t_i_o_n.				                     Query about which keys invoke the named _f_u_n_c_t_i_o_n.
              --uu _f_u_n_c_t_i_o_n									              --uu _f_u_n_c_t_i_o_n
                     Unbind all keys bound to the named _f_u_n_c_t_i_o_n.				                     Unbind all keys bound to the named _f_u_n_c_t_i_o_n.
              --rr _k_e_y_s_e_q										              --rr _k_e_y_s_e_q
                     Remove any current binding for _k_e_y_s_e_q.					                     Remove any current binding for _k_e_y_s_e_q.
              --xx _k_e_y_s_e_q::_s_h_e_l_l_-_c_o_m_m_a_n_d								              --xx _k_e_y_s_e_q::_s_h_e_l_l_-_c_o_m_m_a_n_d
                     Cause  _s_h_e_l_l_-_c_o_m_m_a_n_d  to  be  executed whenever _k_e_y_s_e_q is		      |	                     Cause _s_h_e_l_l_-_c_o_m_m_a_n_d to be  executed  whenever  _k_e_y_s_e_q  is
                     entered.								      |	                     entered.   When _s_h_e_l_l_-_c_o_m_m_a_n_d is executed, the shell sets
											      >	                     the RREEAADDLLIINNEE__LLIINNEE variable to the contents of  the  rreeaadd--
											      >	                     lliinnee  line  buffer and the RREEAADDLLIINNEE__PPOOIINNTT variable to the
											      >	                     current location of the insertion point.  If the executed
											      >	                     command  changes  the  value  of  RREEAADDLLIINNEE__LLIINNEE  or RREEAADD--
											      >	                     LLIINNEE__PPOOIINNTT, those new values will  be  reflected  in  the
											      >	                     editing state.
											      >	              --XX     List  all  key  sequences bound to shell commands and the
											      >	                     associated commands in a format that  can  be  reused  as
											      >	                     input.

              The return value is 0 unless an unrecognized option is given  or		      |	              The  return value is 0 unless an unrecognized option is given or
              an error occurred.								              an error occurred.

       bbrreeaakk [_n]										       bbrreeaakk [_n]
              Exit  from  within a ffoorr, wwhhiillee, uunnttiill, or sseelleecctt loop.  If _n is		      |	              Exit from within a ffoorr, wwhhiillee, uunnttiill, or sseelleecctt loop.  If  _n  is
              specified, break _n levels.  _n must be >= 1.   If  _n  is  greater		      |	              specified,  break  _n  levels.   _n must be >= 1.  If _n is greater
              than  the  number  of  enclosing  loops, all enclosing loops are		      |	              than the number of enclosing  loops,  all  enclosing  loops  are
              exited.  The return value is 0 unless the shell is not executing		      |	              exited.   The  return value is 0 unless _n is not greater than or
              a loop when bbrreeaakk is executed.						      |	              equal to 1.

       bbuuiillttiinn _s_h_e_l_l_-_b_u_i_l_t_i_n [_a_r_g_u_m_e_n_t_s]							       bbuuiillttiinn _s_h_e_l_l_-_b_u_i_l_t_i_n [_a_r_g_u_m_e_n_t_s]
              Execute  the  specified shell builtin, passing it _a_r_g_u_m_e_n_t_s, and		      |	              Execute the specified shell builtin, passing it  _a_r_g_u_m_e_n_t_s,  and
              return its exit status.  This is useful when defining a function			              return its exit status.  This is useful when defining a function
              whose  name  is the same as a shell builtin, retaining the func-		      |	              whose name is the same as a shell builtin, retaining  the  func-
              tionality of the builtin within the function.  The ccdd builtin is			              tionality of the builtin within the function.  The ccdd builtin is
              commonly  redefined  this  way.   The  return status is false if		      |	              commonly redefined this way.  The  return  status  is  false  if
              _s_h_e_l_l_-_b_u_i_l_t_i_n is not a shell builtin command.					              _s_h_e_l_l_-_b_u_i_l_t_i_n is not a shell builtin command.

       ccdd [--LL||--PP] [_d_i_r]									      <
              Change the current directory to _d_i_r.  The variable HHOOMMEE  is  the		      <
              default  _d_i_r.   The  variable CCDDPPAATTHH defines the search path for		      <
              the directory containing _d_i_r.  Alternative  directory  names  in		      <
              CCDDPPAATTHH  are  separated by a colon (:).  A null directory name in		      <
              CCDDPPAATTHH is the same as the current directory,  i.e.,  ``..''.   If		      <
              _d_i_r  begins  with  a  slash (/), then CCDDPPAATTHH is not used. The --PP		      <
              option says to use the physical directory structure  instead  of		      <
              following  symbolic  links  (see  also  the --PP option to the sseett		      <
              builtin command); the --LL option forces symbolic links to be fol-		      <
              lowed.   An  argument  of -- is equivalent to $$OOLLDDPPWWDD.  If a non-		      <
              empty directory name from CCDDPPAATTHH is used, or if -- is  the  first		      <
              argument,  and  the directory change is successful, the absolute		      <
              pathname of the new working directory is written to the standard		      <
              output.   The return value is true if the directory was success-		      <
              fully changed; false otherwise.						      <
											      <
       ccaalllleerr [_e_x_p_r]										       ccaalllleerr [_e_x_p_r]
              Returns the context of any active subroutine call (a shell func-			              Returns the context of any active subroutine call (a shell func-
              tion  or a script executed with the .. or ssoouurrccee builtins.  With-		      |	              tion or a script executed with the .. or ssoouurrccee builtins).  With-
              out _e_x_p_r, ccaalllleerr displays the line number and source filename of			              out _e_x_p_r, ccaalllleerr displays the line number and source filename of
              the  current subroutine call.  If a non-negative integer is sup-		      |	              the current subroutine call.  If a non-negative integer is  sup-
              plied as _e_x_p_r, ccaalllleerr displays the line number, subroutine name,			              plied as _e_x_p_r, ccaalllleerr displays the line number, subroutine name,
              and  source  file  corresponding to that position in the current		      |	              and source file corresponding to that position  in  the  current
              execution call stack.  This extra information may be  used,  for		      |	              execution  call  stack.  This extra information may be used, for
              example,  to print a stack trace.  The current frame is frame 0.		      |	              example, to print a stack trace.  The current frame is frame  0.
              The return value is 0 unless the shell is not executing  a  sub-		      |	              The  return  value is 0 unless the shell is not executing a sub-
              routine  call or _e_x_p_r does not correspond to a valid position in		      |	              routine call or _e_x_p_r does not correspond to a valid position  in
              the call stack.									              the call stack.

											      >	       ccdd [--LL|[--PP [--ee]] [-@]] [_d_i_r]
											      >	              Change  the  current  directory to _d_i_r.  if _d_i_r is not supplied,
											      >	              the value of the HHOOMMEE shell variable is the default.  Any  addi-
											      >	              tional arguments following _d_i_r are ignored.  The variable CCDDPPAATTHH
											      >	              defines the search path for the directory containing  _d_i_r:  each
											      >	              directory  name  in  CCDDPPAATTHH  is  searched  for _d_i_r.  Alternative
											      >	              directory names in CCDDPPAATTHH are separated by a colon (:).  A  null
											      >	              directory  name  in CCDDPPAATTHH is the same as the current directory,
											      >	              i.e., ``..''.  If _d_i_r begins with a slash (/), then CCDDPPAATTHH is not
											      >	              used.   The  --PP  option  causes ccdd to use the physical directory
											      >	              structure by resolving symbolic links while traversing  _d_i_r  and
											      >	              before processing instances of _._. in _d_i_r (see also the --PP option
											      >	              to the sseett builtin command); the --LL option forces symbolic links
											      >	              to  be followed by resolving the link after processing instances
											      >	              of _._. in _d_i_r.  If _._. appears in _d_i_r, it is processed by removing
											      >	              the  immediately previous pathname component from _d_i_r, back to a
											      >	              slash or the beginning of _d_i_r.  If the  --ee  option  is  supplied
											      >	              with  --PP,  and  the current working directory cannot be success-
											      >	              fully determined after a successful directory  change,  ccdd  will
											      >	              return  an unsuccessful status.  On systems that support it, the
											      >	              --@@ option presents the extended  attributes  associated  with  a
											      >	              file  as  a directory.  An argument of -- is converted to $$OOLLDDPPWWDD
											      >	              before the directory change is attempted.  If a non-empty direc-
											      >	              tory  name  from  CCDDPPAATTHH is used, or if -- is the first argument,
											      >	              and the directory change is successful, the absolute pathname of
											      >	              the  new  working  directory  is written to the standard output.
											      >	              The return value is  true  if  the  directory  was  successfully
											      >	              changed; false otherwise.
											      >
       ccoommmmaanndd [--ppVVvv] _c_o_m_m_a_n_d [_a_r_g ...]								       ccoommmmaanndd [--ppVVvv] _c_o_m_m_a_n_d [_a_r_g ...]
              Run _c_o_m_m_a_n_d with _a_r_g_s  suppressing  the  normal  shell  function		      |	              Run  _c_o_m_m_a_n_d  with  _a_r_g_s  suppressing  the normal shell function
              lookup.  Only builtin commands or commands found in the PPAATTHH are			              lookup.  Only builtin commands or commands found in the PPAATTHH are
              executed.  If the --pp option is given, the search for _c_o_m_m_a_n_d  is		      |	              executed.   If the --pp option is given, the search for _c_o_m_m_a_n_d is
              performed  using  a default value for PPAATTHH that is guaranteed to		      |	              performed using a default value for PPAATTHH that is  guaranteed  to
              find all of the standard utilities.  If  either  the  --VV  or  --vv		      |	              find  all  of  the  standard  utilities.  If either the --VV or --vv
              option is supplied, a description of _c_o_m_m_a_n_d is printed.  The --vv			              option is supplied, a description of _c_o_m_m_a_n_d is printed.  The --vv
              option causes a single word indicating the command or file  name		      |	              option  causes  a single word indicating the command or filename
              used to invoke _c_o_m_m_a_n_d to be displayed; the --VV option produces a			              used to invoke _c_o_m_m_a_n_d to be displayed; the --VV option produces a
              more verbose description.  If the --VV or --vv option  is  supplied,		      |	              more  verbose  description.  If the --VV or --vv option is supplied,
              the  exit  status  is  0 if _c_o_m_m_a_n_d was found, and 1 if not.  If		      |	              the exit status is 0 if _c_o_m_m_a_n_d was found, and  1  if  not.   If
              neither option is supplied and an error occurred or _c_o_m_m_a_n_d can-			              neither option is supplied and an error occurred or _c_o_m_m_a_n_d can-
              not  be found, the exit status is 127.  Otherwise, the exit sta-		      |	              not be found, the exit status is 127.  Otherwise, the exit  sta-
              tus of the ccoommmmaanndd builtin is the exit status of _c_o_m_m_a_n_d.				              tus of the ccoommmmaanndd builtin is the exit status of _c_o_m_m_a_n_d.

       ccoommppggeenn [_o_p_t_i_o_n] [_w_o_r_d]									       ccoommppggeenn [_o_p_t_i_o_n] [_w_o_r_d]
              Generate possible completion matches for _w_o_r_d according  to  the		      |	              Generate  possible  completion matches for _w_o_r_d according to the
              _o_p_t_i_o_ns,  which  may  be  any  option  accepted  by the ccoommpplleettee		      |	              _o_p_t_i_o_ns, which may  be  any  option  accepted  by  the  ccoommpplleettee
              builtin with the exception of --pp and --rr, and write  the  matches		      |	              builtin  with  the exception of --pp and --rr, and write the matches
              to  the  standard  output.  When using the --FF or --CC options, the		      |	              to the standard output.  When using the --FF or  --CC  options,  the
              various shell  variables  set  by  the  programmable  completion		      |	              various  shell  variables  set  by  the  programmable completion
              facilities, while available, will not have useful values.				              facilities, while available, will not have useful values.

              The  matches  will  be  generated in the same way as if the pro-		      |	              The matches will be generated in the same way  as  if  the  pro-
              grammable completion code had generated  them  directly  from  a		      |	              grammable  completion  code  had  generated them directly from a
              completion specification with the same flags.  If _w_o_r_d is speci-			              completion specification with the same flags.  If _w_o_r_d is speci-
              fied, only those completions matching _w_o_r_d will be displayed.			              fied, only those completions matching _w_o_r_d will be displayed.

              The return value is true unless an invalid option  is  supplied,		      |	              The  return  value is true unless an invalid option is supplied,
              or no matches were generated.							              or no matches were generated.

       ccoommpplleettee  [--aabbccddeeffggjjkkssuuvv] [--oo _c_o_m_p_-_o_p_t_i_o_n] [--AA _a_c_t_i_o_n] [--GG _g_l_o_b_p_a_t] [--WW		      |	       ccoommpplleettee [--aabbccddeeffggjjkkssuuvv] [--oo _c_o_m_p_-_o_p_t_i_o_n] [--DDEEII] [--AA _a_c_t_i_o_n] [--GG  _g_l_o_b_-
       _w_o_r_d_l_i_s_t] [--PP _p_r_e_f_i_x] [--SS _s_u_f_f_i_x]						      |	       _p_a_t] [--WW _w_o_r_d_l_i_s_t] [--FF _f_u_n_c_t_i_o_n] [--CC _c_o_m_m_a_n_d]
              [--XX _f_i_l_t_e_r_p_a_t] [--FF _f_u_n_c_t_i_o_n] [--CC _c_o_m_m_a_n_d] _n_a_m_e [_n_a_m_e _._._.]			      |	              [--XX _f_i_l_t_e_r_p_a_t] [--PP _p_r_e_f_i_x] [--SS _s_u_f_f_i_x] _n_a_m_e [_n_a_m_e _._._.]
       ccoommpplleettee --pprr [_n_a_m_e ...]								      |	       ccoommpplleettee --pprr [--DDEEII] [_n_a_m_e ...]
              Specify  how arguments to each _n_a_m_e should be completed.  If the		      |	              Specify how arguments to each _n_a_m_e should be completed.  If  the
              --pp option is supplied, or if no options are  supplied,  existing		      |	              --pp  option  is supplied, or if no options are supplied, existing
              completion  specifications are printed in a way that allows them		      |	              completion specifications are printed in a way that allows  them
              to be reused as input.  The --rr option removes a completion spec-			              to be reused as input.  The --rr option removes a completion spec-
              ification  for each _n_a_m_e, or, if no _n_a_m_es are supplied, all com-		      |	              ification for each _n_a_m_e, or, if no _n_a_m_es are supplied, all  com-
              pletion specifications.							      |	              pletion specifications.  The --DD option indicates that other sup-
											      >	              plied options and actions should apply to the  ``default''  com-
											      >	              mand  completion; that is, completion attempted on a command for
											      >	              which no completion has previously been defined.  The --EE  option
											      >	              indicates  that  other supplied options and actions should apply
											      >	              to ``empty'' command completion; that is,  completion  attempted
											      >	              on  a  blank  line.  The --II option indicates that other supplied
											      >	              options and actions should apply to  completion  on  the  inital
											      >	              non-assignment  word  on  the line, or after a command delimiter
											      >	              such as ;; or ||, which is usually command  name  completion.   If
											      >	              multiple  options  are  supplied, the --DD option takes precedence
											      >	              over --EE, and both take precedence over --II.  If any of --DD, --EE, or
											      >	              --II  are  supplied,  any  other _n_a_m_e arguments are ignored; these
											      >	              completions only apply to the case specified by the option.

              The process of applying  these  completion  specifications  when			              The process of applying  these  completion  specifications  when
              word  completion  is  attempted  is  described  above under PPrroo--			              word  completion  is  attempted  is  described  above under PPrroo--
              ggrraammmmaabbllee CCoommpplleettiioonn.								              ggrraammmmaabbllee CCoommpplleettiioonn.

              Other options, if specified, have the following  meanings.   The			              Other options, if specified, have the following  meanings.   The
              arguments  to the --GG, --WW, and --XX options (and, if necessary, the			              arguments  to the --GG, --WW, and --XX options (and, if necessary, the
              --PP and --SS options) should be quoted to protect them from  expan-			              --PP and --SS options) should be quoted to protect them from  expan-
              sion before the ccoommpplleettee builtin is invoked.					              sion before the ccoommpplleettee builtin is invoked.
              --oo _c_o_m_p_-_o_p_t_i_o_n									              --oo _c_o_m_p_-_o_p_t_i_o_n
                      The  _c_o_m_p_-_o_p_t_i_o_n  controls  several aspects of the comp-			                      The  _c_o_m_p_-_o_p_t_i_o_n  controls  several aspects of the comp-
                      spec's behavior beyond the simple generation of  comple-			                      spec's behavior beyond the simple generation of  comple-
                      tions.  _c_o_m_p_-_o_p_t_i_o_n may be one of:					                      tions.  _c_o_m_p_-_o_p_t_i_o_n may be one of:
                      bbaasshhddeeffaauulltt								                      bbaasshhddeeffaauulltt
                              Perform the rest of the default bbaasshh completions			                              Perform the rest of the default bbaasshh completions
                              if the compspec generates no matches.				                              if the compspec generates no matches.
                      ddeeffaauulltt Use readline's default  filename  completion  if			                      ddeeffaauulltt Use readline's default  filename  completion  if
                              the compspec generates no matches.				                              the compspec generates no matches.
                      ddiirrnnaammeess									                      ddiirrnnaammeess
                              Perform  directory  name completion if the comp-			                              Perform  directory  name completion if the comp-
                              spec generates no matches.					                              spec generates no matches.
                      ffiilleennaammeess									                      ffiilleennaammeess
                              Tell readline that the compspec generates  file-			                              Tell readline that the compspec generates  file-
                              names,  so  it can perform any filename-specific			                              names,  so  it can perform any filename-specific
                              processing (like adding  a  slash  to  directory			                              processing (like adding  a  slash  to  directory
                              names or suppressing trailing spaces).  Intended		      |	                              names,  quoting special characters, or suppress-
                              to be used with shell functions.				      |	                              ing trailing spaces).  Intended to be used  with
											      >	                              shell functions.
											      >	                      nnooqquuoottee Tell  readline  not to quote the completed words
											      >	                              if they are filenames (quoting filenames is  the
											      >	                              default).
											      >	                      nnoossoorrtt  Tell  readline  not to sort the list of possible
											      >	                              completions alphabetically.
                      nnoossppaaccee Tell  readline  not  to  append  a  space   (the			                      nnoossppaaccee Tell  readline  not  to  append  a  space   (the
                              default)  to  words  completed at the end of the			                              default)  to  words  completed at the end of the
                              line.								                              line.
                      pplluussddiirrss									                      pplluussddiirrss
                              After any matches defined by  the  compspec  are			                              After any matches defined by  the  compspec  are
                              generated,    directory   name   completion   is			                              generated,    directory   name   completion   is
                              attempted and  any  matches  are  added  to  the			                              attempted and  any  matches  are  added  to  the
                              results of the other actions.					                              results of the other actions.
              --AA _a_c_t_i_o_n										              --AA _a_c_t_i_o_n
                      The  _a_c_t_i_o_n  may  be  one of the following to generate a			                      The  _a_c_t_i_o_n  may  be  one of the following to generate a
                      list of possible completions:						                      list of possible completions:
                      aalliiaass   Alias names.  May also be specified as --aa.			                      aalliiaass   Alias names.  May also be specified as --aa.
                      aarrrraayyvvaarr									                      aarrrraayyvvaarr
                              Array variable names.						                              Array variable names.
                      bbiinnddiinngg RReeaaddlliinnee key binding names.					                      bbiinnddiinngg RReeaaddlliinnee key binding names.
                      bbuuiillttiinn Names of shell builtin commands.   May  also  be			                      bbuuiillttiinn Names of shell builtin commands.   May  also  be
                              specified as --bb.							                              specified as --bb.
                      ccoommmmaanndd Command names.  May also be specified as --cc.			                      ccoommmmaanndd Command names.  May also be specified as --cc.
                      ddiirreeccttoorryy									                      ddiirreeccttoorryy
                              Directory names.  May also be specified as --dd.			                              Directory names.  May also be specified as --dd.
                      ddiissaabblleedd									                      ddiissaabblleedd
                              Names of disabled shell builtins.					                              Names of disabled shell builtins.
                      eennaabblleedd Names of enabled shell builtins.					                      eennaabblleedd Names of enabled shell builtins.
                      eexxppoorrtt  Names  of exported shell variables.  May also be			                      eexxppoorrtt  Names  of exported shell variables.  May also be
                              specified as --ee.							                              specified as --ee.
                      ffiillee    File names.  May also be specified as --ff.				                      ffiillee    File names.  May also be specified as --ff.
                      ffuunnccttiioonn									                      ffuunnccttiioonn
                              Names of shell functions.						                              Names of shell functions.
                      ggrroouupp   Group names.  May also be specified as --gg.			                      ggrroouupp   Group names.  May also be specified as --gg.
                      hheellppttooppiicc									                      hheellppttooppiicc
                              Help topics as accepted by the hheellpp builtin.			                              Help topics as accepted by the hheellpp builtin.
                      hhoossttnnaammee									                      hhoossttnnaammee
                              Hostnames, as taken from the file  specified  by			                              Hostnames, as taken from the file  specified  by
                              the HHOOSSTTFFIILLEE shell variable.					                              the HHOOSSTTFFIILLEE shell variable.
                      jjoobb     Job  names,  if job control is active.  May also			                      jjoobb     Job  names,  if job control is active.  May also
                              be specified as --jj.						                              be specified as --jj.
                      kkeeyywwoorrdd Shell reserved words.  May also be specified  as			                      kkeeyywwoorrdd Shell reserved words.  May also be specified  as
                              --kk.								                              --kk.
                      rruunnnniinngg Names of running jobs, if job control is active.			                      rruunnnniinngg Names of running jobs, if job control is active.
                      sseerrvviiccee Service names.  May also be specified as --ss.			                      sseerrvviiccee Service names.  May also be specified as --ss.
                      sseettoopptt  Valid arguments for the --oo  option  to  the  sseett			                      sseettoopptt  Valid arguments for the --oo  option  to  the  sseett
                              builtin.								                              builtin.
                      sshhoopptt   Shell  option  names  as  accepted  by the sshhoopptt			                      sshhoopptt   Shell  option  names  as  accepted  by the sshhoopptt
                              builtin.								                              builtin.
                      ssiiggnnaall  Signal names.							                      ssiiggnnaall  Signal names.
                      ssttooppppeedd Names of stopped jobs, if job control is active.			                      ssttooppppeedd Names of stopped jobs, if job control is active.
                      uusseerr    User names.  May also be specified as --uu.				                      uusseerr    User names.  May also be specified as --uu.
                      vvaarriiaabbllee									                      vvaarriiaabbllee
                              Names of all shell variables.  May also be spec-			                              Names of all shell variables.  May also be spec-
                              ified as --vv.							                              ified as --vv.
              --GG _g_l_o_b_p_a_t								      <
                      The filename expansion pattern _g_l_o_b_p_a_t  is  expanded  to		      <
                      generate the possible completions.				      <
              --WW _w_o_r_d_l_i_s_t								      <
                      The  _w_o_r_d_l_i_s_t  is  split using the characters in the IIFFSS		      <
                      special variable as delimiters, and each resultant  word		      <
                      is  expanded.   The possible completions are the members		      <
                      of the resultant list which match the  word  being  com-		      <
                      pleted.								      <
              --CC _c_o_m_m_a_n_d									              --CC _c_o_m_m_a_n_d
                      _c_o_m_m_a_n_d  is  executed in a subshell environment, and its		      |	                      _c_o_m_m_a_n_d is executed in a subshell environment,  and  its
                      output is used as the possible completions.				                      output is used as the possible completions.
              --FF _f_u_n_c_t_i_o_n									              --FF _f_u_n_c_t_i_o_n
                      The shell function _f_u_n_c_t_i_o_n is executed in  the  current		      |	                      The  shell  function _f_u_n_c_t_i_o_n is executed in the current
                      shell  environment.  When it finishes, the possible com-		      |	                      shell environment.  When the function is  executed,  the
                      pletions are retrieved from the value of  the  CCOOMMPPRREEPPLLYY		      |	                      first  argument  ($$11)  is  the name of the command whose
                      array variable.							      |	                      arguments are being completed, the second argument  ($$22)
              --XX _f_i_l_t_e_r_p_a_t								      |	                      is the word being completed, and the third argument ($$33)
                      _f_i_l_t_e_r_p_a_t  is  a pattern as used for filename expansion.		      |	                      is the word preceding the word being  completed  on  the
                      It is applied to the list of possible completions gener-		      |	                      current  command  line.   When it finishes, the possible
                      ated  by  the  preceding options and arguments, and each		      |	                      completions are retrieved from the value of the  CCOOMMPPRREE--
                      completion matching _f_i_l_t_e_r_p_a_t is removed from the  list.		      |	                      PPLLYY array variable.
                      A  leading  !!  in _f_i_l_t_e_r_p_a_t negates the pattern; in this		      |	              --GG _g_l_o_b_p_a_t
                      case, any completion not matching _f_i_l_t_e_r_p_a_t is  removed.		      |	                      The  pathname  expansion  pattern _g_l_o_b_p_a_t is expanded to
											      >	                      generate the possible completions.
              --PP _p_r_e_f_i_x										              --PP _p_r_e_f_i_x
                      _p_r_e_f_i_x  is  added at the beginning of each possible com-		      |	                      _p_r_e_f_i_x is added at the beginning of each  possible  com-
                      pletion after all other options have been applied.			                      pletion after all other options have been applied.
              --SS _s_u_f_f_i_x										              --SS _s_u_f_f_i_x
                      _s_u_f_f_i_x is appended to each possible completion after all			                      _s_u_f_f_i_x is appended to each possible completion after all
                      other options have been applied.						                      other options have been applied.
											      >	              --WW _w_o_r_d_l_i_s_t
											      >	                      The _w_o_r_d_l_i_s_t is split using the characters  in  the  IIFFSS
											      >	                      special  variable as delimiters, and each resultant word
											      >	                      is expanded.  Shell quoting is honored within  _w_o_r_d_l_i_s_t,
											      >	                      in order to provide a mechanism for the words to contain
											      >	                      shell metacharacters or characters in the value of  IIFFSS.
											      >	                      The  possible  completions are the members of the resul-
											      >	                      tant list which match the word being completed.
											      >	              --XX _f_i_l_t_e_r_p_a_t
											      >	                      _f_i_l_t_e_r_p_a_t is a pattern as used for  pathname  expansion.
											      >	                      It is applied to the list of possible completions gener-
											      >	                      ated by the preceding options and  arguments,  and  each
											      >	                      completion  matching _f_i_l_t_e_r_p_a_t is removed from the list.
											      >	                      A leading !! in _f_i_l_t_e_r_p_a_t negates the  pattern;  in  this
											      >	                      case,  any completion not matching _f_i_l_t_e_r_p_a_t is removed.

              The  return  value is true unless an invalid option is supplied,		      |	              The return value is true unless an invalid option  is  supplied,
              an option other than --pp or --rr is supplied without a  _n_a_m_e  argu-		      |	              an  option  other than --pp or --rr is supplied without a _n_a_m_e argu-
              ment,  an  attempt  is made to remove a completion specification		      |	              ment, an attempt is made to remove  a  completion  specification
              for a _n_a_m_e for which no specification exists, or an error occurs			              for a _n_a_m_e for which no specification exists, or an error occurs
              adding a completion specification.						              adding a completion specification.

											      >	       ccoommppoopptt [--oo _o_p_t_i_o_n] [--DDEEII] [++oo _o_p_t_i_o_n] [_n_a_m_e]
											      >	              Modify  completion  options  for  each  _n_a_m_e  according  to  the
											      >	              _o_p_t_i_o_ns,  or  for the currently-executing completion if no _n_a_m_es
											      >	              are supplied.  If no _o_p_t_i_o_ns are given, display  the  completion
											      >	              options  for  each _n_a_m_e or the current completion.  The possible
											      >	              values of _o_p_t_i_o_n  are  those  valid  for  the  ccoommpplleettee  builtin
											      >	              described  above.   The  --DD option indicates that other supplied
											      >	              options should apply to the ``default'' command completion; that
											      >	              is,  completion  attempted  on a command for which no completion
											      >	              has previously been defined.  The --EE option indicates that other
											      >	              supplied  options  should apply to ``empty'' command completion;
											      >	              that is, completion attempted on a blank line.   The  --II  option
											      >	              indicates that other supplied options should apply to completion
											      >	              on the inital non-assignment word on the line, or after  a  com-
											      >	              mand  delimiter  such  as  ;; or ||, which is usually command name
											      >	              completion.
											      >
											      >	              The return value is true unless an invalid option  is  supplied,
											      >	              an attempt is made to modify the options for a _n_a_m_e for which no
											      >	              completion specification exists, or an output error occurs.
											      >
       ccoonnttiinnuuee [_n]										       ccoonnttiinnuuee [_n]
              Resume the next iteration of the enclosing ffoorr, wwhhiillee, uunnttiill, or			              Resume the next iteration of the enclosing ffoorr, wwhhiillee, uunnttiill, or
              sseelleecctt loop.  If _n is specified, resume  at  the  _nth  enclosing		      |	              sseelleecctt  loop.   If  _n  is specified, resume at the _nth enclosing
              loop.   _n  must  be  >=  1.   If _n is greater than the number of		      |	              loop.  _n must be >= 1.  If _n  is  greater  than  the  number  of
              enclosing loops, the  last  enclosing  loop  (the  ``top-level''		      |	              enclosing  loops,  the  last  enclosing  loop (the ``top-level''
              loop) is resumed.  The return value is 0 unless the shell is not		      |	              loop) is resumed.  The return value is 0 unless _n is not greater
              executing a loop when ccoonnttiinnuuee is executed.				      |	              than or equal to 1.
											      |
       ddeeccllaarree [--aaffFFiirrttxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]					      |	       ddeeccllaarree [--aaAAffFFggiillnnrrttuuxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]
       ttyyppeesseett [--aaffFFiirrttxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]					      |	       ttyyppeesseett [--aaAAffFFggiillnnrrttuuxx] [--pp] [_n_a_m_e[=_v_a_l_u_e] ...]
              Declare variables and/or give them attributes.  If no _n_a_m_es  are		      |	              Declare  variables and/or give them attributes.  If no _n_a_m_es are
              given  then display the values of variables.  The --pp option will		      |	              given then display the values of variables.  The --pp option  will
              display the attributes and values of  each  _n_a_m_e.   When  --pp  is		      |	              display the attributes and values of each _n_a_m_e.  When --pp is used
              used,  additional  options  are ignored.  The --FF option inhibits		      |	              with _n_a_m_e arguments, additional options, other than --ff  and  --FF,
              the display of function definitions; only the function name  and		      |	              are  ignored.   When  --pp  is supplied without _n_a_m_e arguments, it
              attributes are printed.  If the eexxttddeebbuugg shell option is enabled		      |	              will display the attributes and values of all  variables  having
              using sshhoopptt, the source file name  and  line  number  where  the		      |	              the attributes specified by the additional options.  If no other
              function  is  defined  are  displayed  as  well.   The --FF option		      |	              options  are  supplied  with  --pp,  ddeeccllaarree  will   display   the
              implies --ff.  The following options can be used to restrict  out-		      |	              attributes  and  values  of  all shell variables.  The --ff option
              put  to  variables with the specified attribute or to give vari-		      |	              will restrict the display to shell  functions.   The  --FF  option
              ables attributes:								      |	              inhibits  the display of function definitions; only the function
              --aa     Each _n_a_m_e is an array variable (see AArrrraayyss above).			      |	              name and attributes are printed.  If the eexxttddeebbuugg  shell  option
											      >	              is  enabled  using  sshhoopptt,  the source file name and line number
											      >	              where each _n_a_m_e is defined are displayed as well.  The --FF option
											      >	              implies  --ff.   The  --gg  option forces variables to be created or
											      >	              modified at the global scope, even when ddeeccllaarree is executed in a
											      >	              shell  function.  It is ignored in all other cases.  The follow-
											      >	              ing options can be used to restrict output to variables with the
											      >	              specified attribute or to give variables attributes:
											      >	              --aa     Each  _n_a_m_e  is  an  indexed  array  variable  (see AArrrraayyss
											      >	                     above).
											      >	              --AA     Each _n_a_m_e is an associative array  variable  (see  AArrrraayyss
											      >	                     above).
              --ff     Use function names only.							              --ff     Use function names only.
              --ii     The variable is treated as an integer; arithmetic evalua-			              --ii     The variable is treated as an integer; arithmetic evalua-
                     tion  (see  AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN )) is performed when the		      |	                     tion (see AARRIITTHHMMEETTIICC EEVVAALLUUAATTIIOONN above) is performed  when
                     variable is assigned a value.					      |	                     the variable is assigned a value.
											      >	              --ll     When  the  variable  is  assigned a value, all upper-case
											      >	                     characters are converted to lower-case.   The  upper-case
											      >	                     attribute is disabled.
											      >	              --nn     Give  each  _n_a_m_e  the _n_a_m_e_r_e_f attribute, making it a name
											      >	                     reference to another variable.  That  other  variable  is
											      >	                     defined  by  the  value of _n_a_m_e.  All references, assign-
											      >	                     ments, and attribute modifications to _n_a_m_e, except  those
											      >	                     using  or changing the --nn attribute itself, are performed
											      >	                     on the variable referenced by _n_a_m_e's value.  The  nameref
											      >	                     attribute cannot be applied to array variables.
              --rr     Make _n_a_m_es readonly.  These names cannot then be assigned			              --rr     Make _n_a_m_es readonly.  These names cannot then be assigned
                     values by subsequent assignment statements or unset.			                     values by subsequent assignment statements or unset.
              --tt     Give  each  _n_a_m_e  the  _t_r_a_c_e attribute.  Traced functions		      |	              --tt     Give each _n_a_m_e the  _t_r_a_c_e  attribute.   Traced  functions
                     inherit the DDEEBBUUGG  and  RREETTUURRNN  traps  from  the  calling		      |	                     inherit  the  DDEEBBUUGG  and  RREETTUURRNN  traps  from the calling
                     shell.   The  trace  attribute has no special meaning for		      |	                     shell.  The trace attribute has no  special  meaning  for
                     variables.									                     variables.
              --xx     Mark _n_a_m_es for export  to  subsequent  commands  via  the		      |	              --uu     When  the  variable  is  assigned a value, all lower-case
											      >	                     characters are converted to upper-case.   The  lower-case
											      >	                     attribute is disabled.
											      >	              --xx     Mark  _n_a_m_es  for  export  to  subsequent commands via the
                     environment.								                     environment.

              Using  `+'  instead of `-' turns off the attribute instead, with		      |	              Using `+' instead of `-' turns off the attribute  instead,  with
              the exception that ++aa may not be used to destroy an array  vari-		      |	              the  exceptions  that ++aa and ++AA may not be used to destroy array
              able.   When  used in a function, makes each _n_a_m_e local, as with		      |	              variables and ++rr will not remove the readonly  attribute.   When
              the llooccaall command.  If a variable name is  followed  by  =_v_a_l_u_e,		      |	              used in a function, ddeeccllaarree and ttyyppeesseett make each _n_a_m_e local, as
              the  value of the variable is set to _v_a_l_u_e.  The return value is		      |	              with the llooccaall command, unless the --gg option is supplied.  If  a
              0 unless an invalid option is encountered, an attempt is made to		      |	              variable  name  is followed by =_v_a_l_u_e, the value of the variable
              define  a  function  using ``-f foo=bar'', an attempt is made to		      |	              is set to _v_a_l_u_e.  When using --aa or --AA and the  compound  assign-
              assign a value to a readonly variable, an  attempt  is  made  to		      |	              ment  syntax to create array variables, additional attributes do
              assign  a  value to an array variable without using the compound		      |	              not take effect until subsequent assignments.  The return  value
              assignment syntax (see AArrrraayyss above), one of the _n_a_m_e_s is not  a		      |	              is 0 unless an invalid option is encountered, an attempt is made
              valid  shell variable name, an attempt is made to turn off read-		      |	              to define a function using ``-f foo=bar'', an attempt is made to
              only status for a readonly variable, an attempt is made to  turn		      |	              assign  a  value  to  a readonly variable, an attempt is made to
											      >	              assign a value to an array variable without using  the  compound
											      >	              assignment  syntax (see AArrrraayyss above), one of the _n_a_m_e_s is not a
											      >	              valid shell variable name, an attempt is made to turn off  read-
											      >	              only  status for a readonly variable, an attempt is made to turn
              off array status for an array variable, or an attempt is made to			              off array status for an array variable, or an attempt is made to
              display a non-existent function with --ff.						              display a non-existent function with --ff.

       ddiirrss [[--ccllppvv]] [[++_n]] [[--_n]]									       ddiirrss [[--ccllppvv]] [[++_n]] [[--_n]]
              Without options,  displays  the  list  of  currently  remembered		      |	              Without  options,  displays  the  list  of  currently remembered
              directories.   The  default  display  is  on  a single line with		      |	              directories.  The default display  is  on  a  single  line  with
              directory names separated by spaces.  Directories are  added  to		      |	              directory  names  separated by spaces.  Directories are added to
              the  list  with  the  ppuusshhdd  command;  the  ppooppdd command removes		      |	              the list with  the  ppuusshhdd  command;  the  ppooppdd  command  removes
              entries from the list.							      |	              entries  from  the  list.   The  current directory is always the
											      >	              first directory in the stack.
											      >	              --cc     Clears  the  directory  stack  by  deleting  all  of  the
											      >	                     entries.
											      >	              --ll     Produces  a  listing  using  full  pathnames; the default
											      >	                     listing format uses a tilde to denote the home directory.
											      >	              --pp     Print the directory stack with one entry per line.
											      >	              --vv     Print  the  directory stack with one entry per line, pre-
											      >	                     fixing each entry with its index in the stack.
              ++_n     Displays the _nth entry counting from the left of the list			              ++_n     Displays the _nth entry counting from the left of the list
                     shown by ddiirrss when invoked without options, starting with			                     shown by ddiirrss when invoked without options, starting with
                     zero.									                     zero.
              --_n     Displays the _nth entry counting from  the  right  of  the			              --_n     Displays the _nth entry counting from  the  right  of  the
                     list shown by ddiirrss when invoked without options, starting			                     list shown by ddiirrss when invoked without options, starting
                     with zero.									                     with zero.
              --cc     Clears  the  directory  stack  by  deleting  all  of  the		      <
                     entries.								      <
              --ll     Produces  a  longer  listing;  the default listing format		      <
                     uses a tilde to denote the home directory.				      <
              --pp     Print the directory stack with one entry per line.			      <
              --vv     Print the directory stack with one entry per  line,  pre-		      <
                     fixing each entry with its index in the stack.			      <

              The  return value is 0 unless an invalid option is supplied or _n		      |	              The return value is 0 unless an invalid option is supplied or  _n
              indexes beyond the end of the directory stack.					              indexes beyond the end of the directory stack.

       ddiissoowwnn [--aarr] [--hh] [_j_o_b_s_p_e_c ...]							      |	       ddiissoowwnn [--aarr] [--hh] [_j_o_b_s_p_e_c ... | _p_i_d ... ]
              Without options, each _j_o_b_s_p_e_c  is  removed  from  the  table  of		      |	              Without  options,  remove  each _j_o_b_s_p_e_c from the table of active
              active  jobs.   If  the  --hh option is given, each _j_o_b_s_p_e_c is not		      |	              jobs.  If _j_o_b_s_p_e_c is not present, and neither the --aa nor the  --rr
              removed from the table, but is marked so that SSIIGGHHUUPP is not sent		      |	              option  is  supplied, the _c_u_r_r_e_n_t _j_o_b is used.  If the --hh option
              to  the  job  if  the shell receives a SSIIGGHHUUPP.  If no _j_o_b_s_p_e_c is		      |	              is given, each _j_o_b_s_p_e_c is not removed from  the  table,  but  is
              present, and neither the --aa nor the --rr option is  supplied,  the		      |	              marked  so  that  SSIIGGHHUUPP  is  not  sent  to the job if the shell
              _c_u_r_r_e_n_t  _j_o_b  is used.  If no _j_o_b_s_p_e_c is supplied, the --aa option		      |	              receives a SSIIGGHHUUPP.  If no _j_o_b_s_p_e_c is  supplied,  the  --aa  option
              means to remove or mark all jobs; the --rr option without  a  _j_o_b_-		      |	              means  to  remove or mark all jobs; the --rr option without a _j_o_b_-
              _s_p_e_c  argument  restricts operation to running jobs.  The return		      |	              _s_p_e_c argument restricts operation to running jobs.   The  return
              value is 0 unless a _j_o_b_s_p_e_c does not specify a valid job.				              value is 0 unless a _j_o_b_s_p_e_c does not specify a valid job.

       eecchhoo [--nneeEE] [_a_r_g ...]									       eecchhoo [--nneeEE] [_a_r_g ...]
              Output the _a_r_gs, separated by spaces,  followed  by  a  newline.		      |	              Output  the  _a_r_gs,  separated  by spaces, followed by a newline.
              The return status is always 0.  If --nn is specified, the trailing		      |	              The return status is 0 unless a write error occurs.   If  --nn  is
              newline is suppressed.  If the --ee option is  given,  interpreta-		      |	              specified, the trailing newline is suppressed.  If the --ee option
              tion  of  the following backslash-escaped characters is enabled.		      |	              is given,  interpretation  of  the  following  backslash-escaped
              The --EE option disables the interpretation of these escape  char-		      |	              characters  is  enabled.  The --EE option disables the interpreta-
              acters,  even  on systems where they are interpreted by default.		      |	              tion of these escape characters, even on systems where they  are
              The xxppgg__eecchhoo shell option may be used to  dynamically  determine		      |	              interpreted  by  default.  The xxppgg__eecchhoo shell option may be used
              whether  or not eecchhoo expands these escape characters by default.		      |	              to dynamically determine  whether  or  not  eecchhoo  expands  these
              eecchhoo does not interpret ---- to mean the  end  of  options.   eecchhoo		      |	              escape  characters  by  default.   eecchhoo does not interpret ---- to
              interprets the following escape sequences:				      |	              mean the end of options.  eecchhoo interprets the  following  escape
											      >	              sequences:
              \\aa     alert (bell)								              \\aa     alert (bell)
              \\bb     backspace									              \\bb     backspace
              \\cc     suppress trailing newline						      |	              \\cc     suppress further output
              \\ee     an escape character						      |	              \\ee
											      >	              \\EE     an escape character
              \\ff     form feed									              \\ff     form feed
              \\nn     new line									              \\nn     new line
              \\rr     carriage return								              \\rr     carriage return
              \\tt     horizontal tab								              \\tt     horizontal tab
              \\vv     vertical tab								              \\vv     vertical tab
              \\\\     backslash									              \\\\     backslash
              \\00_n_n_n  the  eight-bit  character  whose value is the octal value			              \\00_n_n_n  the  eight-bit  character  whose value is the octal value
                     _n_n_n (zero to three octal digits)						                     _n_n_n (zero to three octal digits)
              \\xx_H_H   the eight-bit character whose value  is  the  hexadecimal			              \\xx_H_H   the eight-bit character whose value  is  the  hexadecimal
                     value _H_H (one or two hex digits)						                     value _H_H (one or two hex digits)
											      >	              \\uu_H_H_H_H the  Unicode (ISO/IEC 10646) character whose value is the
											      >	                     hexadecimal value _H_H_H_H (one to four hex digits)
											      >	              \\UU_H_H_H_H_H_H_H_H
											      >	                     the Unicode (ISO/IEC 10646) character whose value is  the
											      >	                     hexadecimal value _H_H_H_H_H_H_H_H (one to eight hex digits)

       eennaabbllee [--aaddnnppss] [--ff _f_i_l_e_n_a_m_e] [_n_a_m_e ...]						      |	       eennaabbllee [--aa] [--ddnnppss] [--ff _f_i_l_e_n_a_m_e] [_n_a_m_e ...]
              Enable  and disable builtin shell commands.  Disabling a builtin			              Enable  and disable builtin shell commands.  Disabling a builtin
              allows a disk command which has the same name as a shell builtin			              allows a disk command which has the same name as a shell builtin
              to  be  executed without specifying a full pathname, even though			              to  be  executed without specifying a full pathname, even though
              the shell normally searches for builtins before  disk  commands.			              the shell normally searches for builtins before  disk  commands.
              If  --nn  is  used,  each  _n_a_m_e  is disabled; otherwise, _n_a_m_e_s are			              If  --nn  is  used,  each  _n_a_m_e  is disabled; otherwise, _n_a_m_e_s are
              enabled.  For example, to use the tteesstt binary found via the PPAATTHH			              enabled.  For example, to use the tteesstt binary found via the PPAATTHH
              instead  of  the  shell builtin version, run ``enable -n test''.			              instead  of  the  shell builtin version, run ``enable -n test''.
              The --ff option means to load the new builtin  command  _n_a_m_e  from			              The --ff option means to load the new builtin  command  _n_a_m_e  from
              shared object _f_i_l_e_n_a_m_e, on systems that support dynamic loading.			              shared object _f_i_l_e_n_a_m_e, on systems that support dynamic loading.
              The --dd option will delete a builtin previously loaded  with  --ff.			              The --dd option will delete a builtin previously loaded  with  --ff.
              If no _n_a_m_e arguments are given, or if the --pp option is supplied,			              If no _n_a_m_e arguments are given, or if the --pp option is supplied,
              a list of shell builtins is printed.  With no other option argu-			              a list of shell builtins is printed.  With no other option argu-
              ments,  the  list consists of all enabled shell builtins.  If --nn			              ments,  the  list consists of all enabled shell builtins.  If --nn
              is supplied, only disabled builtins are printed.  If --aa is  sup-			              is supplied, only disabled builtins are printed.  If --aa is  sup-
              plied,  the  list printed includes all builtins, with an indica-			              plied,  the  list printed includes all builtins, with an indica-
              tion of whether or not each is enabled.  If --ss is supplied,  the			              tion of whether or not each is enabled.  If --ss is supplied,  the
              output  is restricted to the POSIX _s_p_e_c_i_a_l builtins.  The return			              output  is restricted to the POSIX _s_p_e_c_i_a_l builtins.  The return
              value is 0 unless a _n_a_m_e is not a shell builtin or there  is  an			              value is 0 unless a _n_a_m_e is not a shell builtin or there  is  an
              error loading a new builtin from a shared object.					              error loading a new builtin from a shared object.

       eevvaall [_a_r_g ...]										       eevvaall [_a_r_g ...]
              The  _a_r_gs  are read and concatenated together into a single com-			              The  _a_r_gs  are read and concatenated together into a single com-
              mand.  This command is then read and executed by the shell,  and			              mand.  This command is then read and executed by the shell,  and
              its  exit status is returned as the value of eevvaall.  If there are			              its  exit status is returned as the value of eevvaall.  If there are
              no _a_r_g_s, or only null arguments, eevvaall returns 0.					              no _a_r_g_s, or only null arguments, eevvaall returns 0.

       eexxeecc [--ccll] [--aa _n_a_m_e] [_c_o_m_m_a_n_d [_a_r_g_u_m_e_n_t_s]]						       eexxeecc [--ccll] [--aa _n_a_m_e] [_c_o_m_m_a_n_d [_a_r_g_u_m_e_n_t_s]]
              If _c_o_m_m_a_n_d is specified, it replaces the shell.  No new  process			              If _c_o_m_m_a_n_d is specified, it replaces the shell.  No new  process
              is  created.  The _a_r_g_u_m_e_n_t_s become the arguments to _c_o_m_m_a_n_d.  If			              is  created.  The _a_r_g_u_m_e_n_t_s become the arguments to _c_o_m_m_a_n_d.  If
              the --ll option is supplied, the shell places a dash at the begin-			              the --ll option is supplied, the shell places a dash at the begin-
              ning of the zeroth arg passed to _c_o_m_m_a_n_d.  This is what _l_o_g_i_n(1)		      |	              ning  of  the  zeroth  argument passed to _c_o_m_m_a_n_d.  This is what
              does.  The --cc option causes _c_o_m_m_a_n_d to be executed with an empty		      |	              _l_o_g_i_n(1) does.  The --cc option causes _c_o_m_m_a_n_d to be executed with
              environment.   If  --aa  is supplied, the shell passes _n_a_m_e as the		      |	              an  empty environment.  If --aa is supplied, the shell passes _n_a_m_e
              zeroth argument to the executed command.  If _c_o_m_m_a_n_d  cannot  be		      |	              as the zeroth argument to the executed command.  If _c_o_m_m_a_n_d can-
              executed  for some reason, a non-interactive shell exits, unless		      |	              not  be executed for some reason, a non-interactive shell exits,
              the shell option eexxeeccffaaiill is enabled, in which case  it  returns		      |	              unless the eexxeeccffaaiill shell option is enabled.  In that  case,  it
              failure.   An interactive shell returns failure if the file can-		      |	              returns  failure.   An  interactive shell returns failure if the
              not be executed.  If _c_o_m_m_a_n_d is not specified, any  redirections		      |	              file cannot be executed.  A subshell  exits  unconditionally  if
              take  effect  in  the current shell, and the return status is 0.		      |	              eexxeecc  fails.  If _c_o_m_m_a_n_d is not specified, any redirections take
              If there is a redirection error, the return status is 1.			      |	              effect in the current shell, and the return  status  is  0.   If
											      >	              there is a redirection error, the return status is 1.

       eexxiitt [_n]											       eexxiitt [_n]
              Cause the shell to exit with a status of _n.  If  _n  is  omitted,		      |	              Cause  the  shell  to exit with a status of _n.  If _n is omitted,
              the exit status is that of the last command executed.  A trap on			              the exit status is that of the last command executed.  A trap on
              EEXXIITT is executed before the shell terminates.					              EEXXIITT is executed before the shell terminates.

       eexxppoorrtt [--ffnn] [_n_a_m_e[=_w_o_r_d]] ...								       eexxppoorrtt [--ffnn] [_n_a_m_e[=_w_o_r_d]] ...
       eexxppoorrtt --pp										       eexxppoorrtt --pp
              The supplied _n_a_m_e_s are marked for automatic export to the  envi-		      |	              The  supplied _n_a_m_e_s are marked for automatic export to the envi-
              ronment  of subsequently executed commands.  If the --ff option is		      |	              ronment of subsequently executed commands.  If the --ff option  is
              given, the _n_a_m_e_s refer to functions.  If no _n_a_m_e_s are given,  or		      |	              given,  the _n_a_m_e_s refer to functions.  If no _n_a_m_e_s are given, or
              if  the  --pp  option  is  supplied,  a list of all names that are		      |	              if the --pp option is supplied, a list of names  of  all  exported
              exported in this shell is printed.  The  --nn  option  causes  the		      |	              variables  is printed.  The --nn option causes the export property
              export  property  to  be  removed from each _n_a_m_e.  If a variable		      |	              to be removed from each _n_a_m_e.  If a variable name is followed by
              name is followed by =_w_o_r_d, the value of the variable is  set  to		      |	              =_w_o_r_d, the value of the variable is set to _w_o_r_d.  eexxppoorrtt returns
              _w_o_r_d.   eexxppoorrtt  returns  an  exit  status of 0 unless an invalid		      |	              an exit status of 0 unless an invalid option is encountered, one
              option is encountered, one of the _n_a_m_e_s is  not  a  valid  shell		      |	              of  the  _n_a_m_e_s is not a valid shell variable name, or --ff is sup-
              variable name, or --ff is supplied with a _n_a_m_e that is not a func-		      |	              plied with a _n_a_m_e that is not a function.
              tion.									      <

       ffcc [--ee _e_n_a_m_e] [--nnllrr] [_f_i_r_s_t] [_l_a_s_t]						      |	       ffcc [--ee _e_n_a_m_e] [--llnnrr] [_f_i_r_s_t] [_l_a_s_t]
       ffcc --ss [_p_a_t=_r_e_p] [_c_m_d]									       ffcc --ss [_p_a_t=_r_e_p] [_c_m_d]
              Fix Command.  In the first form, a range of commands from  _f_i_r_s_t		      |	              The first form selects a range of commands from  _f_i_r_s_t  to  _l_a_s_t
              to  _l_a_s_t  is selected from the history list.  _F_i_r_s_t and _l_a_s_t may		      |	              from  the  history  list  and  displays or edits and re-executes
              be specified as a string (to locate the last  command  beginning		      |	              them.  _F_i_r_s_t and _l_a_s_t may be specified as a  string  (to  locate
              with  that  string)  or  as  a number (an index into the history		      |	              the  last command beginning with that string) or as a number (an
              list, where a negative number is used as an offset from the cur-		      |	              index into the history list, where a negative number is used  as
              rent command number).  If _l_a_s_t is not specified it is set to the		      |	              an  offset  from  the  current  command number).  If _l_a_s_t is not
              current command for listing (so that ``fc -l  -10''  prints  the		      |	              specified, it is set to the current command for listing (so that
              last 10 commands) and to _f_i_r_s_t otherwise.  If _f_i_r_s_t is not spec-		      |	              ``fc  -l  -10'' prints the last 10 commands) and to _f_i_r_s_t other-
              ified it is set to the previous command for editing and -16  for		      |	              wise.  If _f_i_r_s_t is not specified, it is set to the previous com-
              listing.									      |	              mand for editing and -16 for listing.

              The  --nn option suppresses the command numbers when listing.  The			              The  --nn option suppresses the command numbers when listing.  The
              --rr option reverses the order of the commands.  If the --ll  option			              --rr option reverses the order of the commands.  If the --ll  option
              is  given,  the  commands are listed on standard output.  Other-			              is  given,  the  commands are listed on standard output.  Other-
              wise, the editor given by _e_n_a_m_e is invoked on a file  containing			              wise, the editor given by _e_n_a_m_e is invoked on a file  containing
              those  commands.  If _e_n_a_m_e is not given, the value of the FFCCEEDDIITT			              those  commands.  If _e_n_a_m_e is not given, the value of the FFCCEEDDIITT
              variable is used, and the value of EEDDIITTOORR if FFCCEEDDIITT is not  set.			              variable is used, and the value of EEDDIITTOORR if FFCCEEDDIITT is not  set.
              If  neither  variable  is set, _v_i is used.  When editing is com-			              If  neither  variable  is set, _v_i is used.  When editing is com-
              plete, the edited commands are echoed and executed.				              plete, the edited commands are echoed and executed.

              In the second form, _c_o_m_m_a_n_d is re-executed after  each  instance			              In the second form, _c_o_m_m_a_n_d is re-executed after  each  instance
              of  _p_a_t  is replaced by _r_e_p.  A useful alias to use with this is		      |	              of  _p_a_t  is replaced by _r_e_p.  _C_o_m_m_a_n_d is interpreted the same as
              ``r="fc -s"'', so that typing ``r cc''  runs  the  last  command		      |	              _f_i_r_s_t above.  A useful alias to use with this is ``r="fc  -s"'',
              beginning with ``cc'' and typing ``r'' re-executes the last com-		      |	              so  that  typing  ``r  cc'' runs the last command beginning with
              mand.									      |	              ``cc'' and typing ``r'' re-executes the last command.

              If the first form is used, the  return  value  is  0  unless  an			              If the first form is used, the  return  value  is  0  unless  an
              invalid  option  is encountered or _f_i_r_s_t or _l_a_s_t specify history			              invalid  option  is encountered or _f_i_r_s_t or _l_a_s_t specify history
              lines out of range.  If the --ee option is  supplied,  the  return			              lines out of range.  If the --ee option is  supplied,  the  return
              value is the value of the last command executed or failure if an			              value is the value of the last command executed or failure if an
              error occurs with the temporary file of commands.  If the second			              error occurs with the temporary file of commands.  If the second
              form  is  used, the return status is that of the command re-exe-			              form  is  used, the return status is that of the command re-exe-
              cuted, unless _c_m_d does not specify  a  valid  history  line,  in			              cuted, unless _c_m_d does not specify  a  valid  history  line,  in
              which case ffcc returns failure.							              which case ffcc returns failure.

       ffgg [_j_o_b_s_p_e_c]										       ffgg [_j_o_b_s_p_e_c]
              Resume  _j_o_b_s_p_e_c  in the foreground, and make it the current job.			              Resume  _j_o_b_s_p_e_c  in the foreground, and make it the current job.
              If _j_o_b_s_p_e_c is not present, the shell's notion of the _c_u_r_r_e_n_t _j_o_b			              If _j_o_b_s_p_e_c is not present, the shell's notion of the _c_u_r_r_e_n_t _j_o_b
              is  used.   The  return value is that of the command placed into			              is  used.   The  return value is that of the command placed into
              the foreground, or failure if run when job control  is  disabled			              the foreground, or failure if run when job control  is  disabled
              or, when run with job control enabled, if _j_o_b_s_p_e_c does not spec-			              or, when run with job control enabled, if _j_o_b_s_p_e_c does not spec-
              ify a valid job or _j_o_b_s_p_e_c specifies  a  job  that  was  started			              ify a valid job or _j_o_b_s_p_e_c specifies  a  job  that  was  started
              without job control.								              without job control.

       ggeettooppttss _o_p_t_s_t_r_i_n_g _n_a_m_e [_a_r_g_s]								       ggeettooppttss _o_p_t_s_t_r_i_n_g _n_a_m_e [_a_r_g_s]
              ggeettooppttss  is used by shell procedures to parse positional parame-			              ggeettooppttss  is used by shell procedures to parse positional parame-
              ters.  _o_p_t_s_t_r_i_n_g contains the option  characters  to  be  recog-			              ters.  _o_p_t_s_t_r_i_n_g contains the option  characters  to  be  recog-
              nized;  if  a  character  is  followed by a colon, the option is			              nized;  if  a  character  is  followed by a colon, the option is
              expected to have an argument, which should be separated from  it			              expected to have an argument, which should be separated from  it
              by  white space.  The colon and question mark characters may not			              by  white space.  The colon and question mark characters may not
              be used as option characters.  Each time it is invoked,  ggeettooppttss			              be used as option characters.  Each time it is invoked,  ggeettooppttss
              places  the next option in the shell variable _n_a_m_e, initializing			              places  the next option in the shell variable _n_a_m_e, initializing
              _n_a_m_e if it does not exist, and the index of the next argument to			              _n_a_m_e if it does not exist, and the index of the next argument to
              be processed into the variable OOPPTTIINNDD.  OOPPTTIINNDD is initialized to			              be processed into the variable OOPPTTIINNDD.  OOPPTTIINNDD is initialized to
              1 each time the shell or a shell script  is  invoked.   When  an			              1 each time the shell or a shell script  is  invoked.   When  an
              option  requires  an argument, ggeettooppttss places that argument into			              option  requires  an argument, ggeettooppttss places that argument into
              the variable OOPPTTAARRGG.  The shell does not reset OOPPTTIINNDD  automati-			              the variable OOPPTTAARRGG.  The shell does not reset OOPPTTIINNDD  automati-
              cally;  it  must  be  manually  reset  between multiple calls to			              cally;  it  must  be  manually  reset  between multiple calls to
              ggeettooppttss within the same shell invocation if a new set of parame-			              ggeettooppttss within the same shell invocation if a new set of parame-
              ters is to be used.								              ters is to be used.

              When  the  end  of  options is encountered, ggeettooppttss exits with a			              When  the  end  of  options is encountered, ggeettooppttss exits with a
              return value greater than zero.  OOPPTTIINNDD is set to the  index  of			              return value greater than zero.  OOPPTTIINNDD is set to the  index  of
              the first non-option argument, and nnaammee is set to ?.			      |	              the first non-option argument, and _n_a_m_e is set to ?.

              ggeettooppttss  normally  parses the positional parameters, but if more			              ggeettooppttss  normally  parses the positional parameters, but if more
              arguments are given in _a_r_g_s, ggeettooppttss parses those instead.			              arguments are given in _a_r_g_s, ggeettooppttss parses those instead.

              ggeettooppttss can report errors in two ways.  If the  first  character			              ggeettooppttss can report errors in two ways.  If the  first  character
              of  _o_p_t_s_t_r_i_n_g  is  a  colon, _s_i_l_e_n_t error reporting is used.  In			              of  _o_p_t_s_t_r_i_n_g  is  a  colon, _s_i_l_e_n_t error reporting is used.  In
              normal operation diagnostic messages are  printed  when  invalid		      |	              normal operation, diagnostic messages are printed  when  invalid
              options  or  missing  option  arguments are encountered.  If the			              options  or  missing  option  arguments are encountered.  If the
              variable OOPPTTEERRRR is set to 0, no  error  messages  will  be  dis-			              variable OOPPTTEERRRR is set to 0, no  error  messages  will  be  dis-
              played, even if the first character of _o_p_t_s_t_r_i_n_g is not a colon.			              played, even if the first character of _o_p_t_s_t_r_i_n_g is not a colon.

              If an invalid option is seen, ggeettooppttss places ? into _n_a_m_e and, if			              If an invalid option is seen, ggeettooppttss places ? into _n_a_m_e and, if
              not  silent,  prints  an  error  message  and unsets OOPPTTAARRGG.  If			              not  silent,  prints  an  error  message  and unsets OOPPTTAARRGG.  If
              ggeettooppttss is silent, the  option  character  found  is  placed  in			              ggeettooppttss is silent, the  option  character  found  is  placed  in
              OOPPTTAARRGG and no diagnostic message is printed.					              OOPPTTAARRGG and no diagnostic message is printed.

              If  a required argument is not found, and ggeettooppttss is not silent,			              If  a required argument is not found, and ggeettooppttss is not silent,
              a question mark (??) is placed in _n_a_m_e, OOPPTTAARRGG is  unset,  and  a			              a question mark (??) is placed in _n_a_m_e, OOPPTTAARRGG is  unset,  and  a
              diagnostic  message  is  printed.   If ggeettooppttss is silent, then a			              diagnostic  message  is  printed.   If ggeettooppttss is silent, then a
              colon (::) is placed in _n_a_m_e and OOPPTTAARRGG  is  set  to  the  option			              colon (::) is placed in _n_a_m_e and OOPPTTAARRGG  is  set  to  the  option
              character found.									              character found.

              ggeettooppttss  returns true if an option, specified or unspecified, is			              ggeettooppttss  returns true if an option, specified or unspecified, is
              found.  It returns false if the end of options is encountered or			              found.  It returns false if the end of options is encountered or
              an error occurs.									              an error occurs.

       hhaasshh [--llrr] [--pp _f_i_l_e_n_a_m_e] [--ddtt] [_n_a_m_e]							       hhaasshh [--llrr] [--pp _f_i_l_e_n_a_m_e] [--ddtt] [_n_a_m_e]
              For  each  _n_a_m_e, the full file name of the command is determined		      |	              Each time hhaasshh is invoked, the full pathname of the command _n_a_m_e
              by searching the directories in $$PPAATTHH and remembered.  If the --pp		      |	              is determined by searching the directories in $$PPAATTHH  and  remem-
              option is supplied, no path search is performed, and _f_i_l_e_n_a_m_e is		      |	              bered.  Any previously-remembered pathname is discarded.  If the
              used as the full file name of the command.  The --rr option causes		      |	              --pp option is supplied, no path search is performed, and _f_i_l_e_n_a_m_e
              the  shell  to  forget  all remembered locations.  The --dd option		      |	              is  used  as  the  full  filename of the command.  The --rr option
              causes the shell to forget the remembered location of each _n_a_m_e.		      |	              causes the shell to forget all  remembered  locations.   The  --dd
              If  the  --tt  option is supplied, the full pathname to which each		      |	              option  causes  the  shell  to forget the remembered location of
              _n_a_m_e corresponds is printed.  If  multiple  _n_a_m_e  arguments  are		      |	              each _n_a_m_e.  If the --tt option is supplied, the full  pathname  to
              supplied  with  --tt,  the  _n_a_m_e is printed before the hashed full		      |	              which  each _n_a_m_e corresponds is printed.  If multiple _n_a_m_e argu-
              pathname.  The --ll option causes output to be displayed in a for-		      |	              ments are supplied with --tt,  the  _n_a_m_e  is  printed  before  the
              mat  that may be reused as input.  If no arguments are given, or		      |	              hashed  full  pathname.   The --ll option causes output to be dis-
              if only --ll is supplied, information about remembered commands is		      |	              played in a format that may be reused as input.  If no arguments
              printed.   The  return status is true unless a _n_a_m_e is not found		      |	              are  given,  or if only --ll is supplied, information about remem-
              or an invalid option is supplied.						      |	              bered commands is printed.  The return status is true  unless  a
											      |	              _n_a_m_e is not found or an invalid option is supplied.
       hheellpp [--ss] [_p_a_t_t_e_r_n]								      |
              Display helpful information about builtin commands.  If  _p_a_t_t_e_r_n		      |	       hheellpp [--ddmmss] [_p_a_t_t_e_r_n]
              is  specified, hheellpp gives detailed help on all commands matching		      |	              Display  helpful information about builtin commands.  If _p_a_t_t_e_r_n
              _p_a_t_t_e_r_n; otherwise help for all the builtins and  shell  control		      |	              is specified, hheellpp gives detailed help on all commands  matching
              structures  is printed.  The --ss option restricts the information		      |	              _p_a_t_t_e_r_n;  otherwise  help for all the builtins and shell control
              displayed to a short usage synopsis.  The  return  status  is  0		      |	              structures is printed.
              unless no command matches _p_a_t_t_e_r_n.					      |	              --dd     Display a short description of each _p_a_t_t_e_r_n
											      >	              --mm     Display the description of each _p_a_t_t_e_r_n in a manpage-like
											      >	                     format
											      >	              --ss     Display only a short usage synopsis for each _p_a_t_t_e_r_n
											      >
											      >	              The return status is 0 unless no command matches _p_a_t_t_e_r_n.

       hhiissttoorryy [[_n]]										       hhiissttoorryy [[_n]]
       hhiissttoorryy --cc										       hhiissttoorryy --cc
       hhiissttoorryy --dd _o_f_f_s_e_t									       hhiissttoorryy --dd _o_f_f_s_e_t
											      >	       hhiissttoorryy --dd _s_t_a_r_t-_e_n_d
       hhiissttoorryy --aannrrww [_f_i_l_e_n_a_m_e]									       hhiissttoorryy --aannrrww [_f_i_l_e_n_a_m_e]
       hhiissttoorryy --pp _a_r_g [_a_r_g _._._.]									       hhiissttoorryy --pp _a_r_g [_a_r_g _._._.]
       hhiissttoorryy --ss _a_r_g [_a_r_g _._._.]									       hhiissttoorryy --ss _a_r_g [_a_r_g _._._.]
              With no options, display the command history list with line num-			              With no options, display the command history list with line num-
              bers.  Lines listed with a ** have been modified.  An argument of			              bers.  Lines listed with a ** have been modified.  An argument of
              _n  lists only the last _n lines.  If the shell variable HHIISSTTTTIIMMEE--			              _n  lists only the last _n lines.  If the shell variable HHIISSTTTTIIMMEE--
              FFOORRMMAATT is set and not null, it is used as a  format  string  for			              FFOORRMMAATT is set and not null, it is used as a  format  string  for
              _s_t_r_f_t_i_m_e(3)  to display the time stamp associated with each dis-			              _s_t_r_f_t_i_m_e(3)  to display the time stamp associated with each dis-
              played history entry.  No intervening blank is  printed  between			              played history entry.  No intervening blank is  printed  between
              the  formatted  time stamp and the history line.  If _f_i_l_e_n_a_m_e is			              the  formatted  time stamp and the history line.  If _f_i_l_e_n_a_m_e is
              supplied, it is used as the name of the history  file;  if  not,			              supplied, it is used as the name of the history  file;  if  not,
              the  value  of HHIISSTTFFIILLEE is used.  Options, if supplied, have the			              the  value  of HHIISSTTFFIILLEE is used.  Options, if supplied, have the
              following meanings:								              following meanings:
              --cc     Clear the history list by deleting all the entries.			              --cc     Clear the history list by deleting all the entries.
              --dd _o_f_f_s_e_t										              --dd _o_f_f_s_e_t
                     Delete the history entry at position _o_f_f_s_e_t.			      |	                     Delete the history entry at position _o_f_f_s_e_t.   If  _o_f_f_s_e_t
              --aa     Append the ``new'' history lines (history  lines  entered		      |	                     is negative, it is interpreted as relative to one greater
                     since  the  beginning of the current bbaasshh session) to the		      |	                     than the last history position, so negative indices count
											      >	                     back  from  the  end  of  the history, and an index of -1
											      >	                     refers to the current hhiissttoorryy --dd command.
											      >	              --dd _s_t_a_r_t-_e_n_d
											      >	                     Delete the history entries between  positions  _s_t_a_r_t  and
											      >	                     _e_n_d,  inclusive.   Positive and negative values for _s_t_a_r_t
											      >	                     and _e_n_d are interpreted as described above.
											      >	              --aa     Append the ``new'' history lines  to  the  history  file.
											      >	                     These  are  history  lines entered since the beginning of
											      >	                     the current bbaasshh session, but not already appended to the
                     history file.								                     history file.
              --nn     Read the history lines not already read from the  history		      |	              --nn     Read  the history lines not already read from the history
                     file  into  the  current  history  list.  These are lines		      |	                     file into the current  history  list.   These  are  lines
                     appended to the history file since the beginning  of  the		      |	                     appended  to  the history file since the beginning of the
                     current bbaasshh session.							                     current bbaasshh session.
              --rr     Read the contents of the history file and use them as the		      |	              --rr     Read the contents of the history file and append them  to
                     current history.							      |	                     the current history list.
              --ww     Write the current history to the history file,  overwrit-		      |	              --ww     Write the current history list to the history file, over-
                     ing the history file's contents.					      |	                     writing the history file's contents.
              --pp     Perform  history  substitution  on the following _a_r_g_s and		      |	              --pp     Perform history substitution on the  following  _a_r_g_s  and
                     display the result on  the  standard  output.   Does  not		      |	                     display  the  result  on  the  standard output.  Does not
                     store  the results in the history list.  Each _a_r_g must be		      |	                     store the results in the history list.  Each _a_r_g must  be
                     quoted to disable normal history expansion.				                     quoted to disable normal history expansion.
              --ss     Store the _a_r_g_s in the history list  as  a  single  entry.		      |	              --ss     Store  the  _a_r_g_s  in  the history list as a single entry.
                     The  last  command  in the history list is removed before		      |	                     The last command in the history list  is  removed  before
                     the _a_r_g_s are added.							                     the _a_r_g_s are added.

              If the HHIISSTTTTIIMMEEFFOORRMMAATT is set, the time stamp information associ-		      |	              If  the  HHIISSTTTTIIMMEEFFOORRMMAATT variable is set, the time stamp informa-
              ated  with  each  history  entry is written to the history file.		      |	              tion associated with each history entry is written to  the  his-
              The return value is 0 unless an invalid option  is  encountered,		      |	              tory  file, marked with the history comment character.  When the
              an  error  occurs  while reading or writing the history file, an		      |	              history file is read, lines beginning with the  history  comment
              invalid _o_f_f_s_e_t is supplied as an argument to --dd, or the  history		      |	              character  followed  immediately  by  a digit are interpreted as
              expansion supplied as an argument to --pp fails.				      |	              timestamps for the following history entry.  The return value is
											      >	              0 unless an invalid option is encountered, an error occurs while
											      >	              reading or writing the history file, an invalid _o_f_f_s_e_t  is  sup-
											      >	              plied as an argument to --dd, or the history expansion supplied as
											      >	              an argument to --pp fails.

       jjoobbss [--llnnpprrss] [ _j_o_b_s_p_e_c ... ]								       jjoobbss [--llnnpprrss] [ _j_o_b_s_p_e_c ... ]
       jjoobbss --xx _c_o_m_m_a_n_d [ _a_r_g_s ... ]								       jjoobbss --xx _c_o_m_m_a_n_d [ _a_r_g_s ... ]
              The first form lists the active jobs.  The options have the fol-			              The first form lists the active jobs.  The options have the fol-
              lowing meanings:									              lowing meanings:
              --ll     List process IDs in addition to the normal information.			              --ll     List process IDs in addition to the normal information.
              --pp     List only the process  ID  of  the  job's  process  group		      <
                     leader.								      <
              --nn     Display  information  only  about  jobs that have changed			              --nn     Display  information  only  about  jobs that have changed
                     status since the user was last notified of their  status.			                     status since the user was last notified of their  status.
              --rr     Restrict output to running jobs.					      |	              --pp     List  only  the  process  ID  of  the job's process group
              --ss     Restrict output to stopped jobs.					      |	                     leader.
											      >	              --rr     Display only running jobs.
											      >	              --ss     Display only stopped jobs.

              If  _j_o_b_s_p_e_c  is given, output is restricted to information about		      |	              If _j_o_b_s_p_e_c is given, output is restricted to  information  about
              that job.  The return status is 0 unless an  invalid  option  is		      |	              that  job.   The  return status is 0 unless an invalid option is
              encountered or an invalid _j_o_b_s_p_e_c is supplied.					              encountered or an invalid _j_o_b_s_p_e_c is supplied.

              If the --xx option is supplied, jjoobbss replaces any _j_o_b_s_p_e_c found in			              If the --xx option is supplied, jjoobbss replaces any _j_o_b_s_p_e_c found in
              _c_o_m_m_a_n_d or _a_r_g_s with the corresponding  process  group  ID,  and		      |	              _c_o_m_m_a_n_d  or  _a_r_g_s  with  the corresponding process group ID, and
              executes _c_o_m_m_a_n_d passing it _a_r_g_s, returning its exit status.			              executes _c_o_m_m_a_n_d passing it _a_r_g_s, returning its exit status.

       kkiillll [--ss _s_i_g_s_p_e_c | --nn _s_i_g_n_u_m | --_s_i_g_s_p_e_c] [_p_i_d | _j_o_b_s_p_e_c] ...				       kkiillll [--ss _s_i_g_s_p_e_c | --nn _s_i_g_n_u_m | --_s_i_g_s_p_e_c] [_p_i_d | _j_o_b_s_p_e_c] ...
       kkiillll --ll [_s_i_g_s_p_e_c | _e_x_i_t___s_t_a_t_u_s]							      |	       kkiillll --ll|--LL [_s_i_g_s_p_e_c | _e_x_i_t___s_t_a_t_u_s]
              Send  the  signal  named  by  _s_i_g_s_p_e_c or _s_i_g_n_u_m to the processes		      |	              Send the signal named by _s_i_g_s_p_e_c  or  _s_i_g_n_u_m  to  the  processes
              named by _p_i_d or _j_o_b_s_p_e_c.  _s_i_g_s_p_e_c is either  a  case-insensitive		      |	              named  by  _p_i_d or _j_o_b_s_p_e_c.  _s_i_g_s_p_e_c is either a case-insensitive
              signal  name such as SSIIGGKKIILLLL (with or without the SSIIGG prefix) or		      |	              signal name such as SSIIGGKKIILLLL (with or without the SSIIGG prefix)  or
              a signal number; _s_i_g_n_u_m is a signal number.  If _s_i_g_s_p_e_c  is  not		      |	              a  signal  number; _s_i_g_n_u_m is a signal number.  If _s_i_g_s_p_e_c is not
              present,  then  SSIIGGTTEERRMM is assumed.  An argument of --ll lists the		      |	              present, then SSIIGGTTEERRMM is assumed.  An argument of --ll  lists  the
              signal names.  If any arguments are supplied when --ll  is  given,		      |	              signal  names.   If any arguments are supplied when --ll is given,
              the  names  of  the  signals  corresponding to the arguments are		      |	              the names of the signals  corresponding  to  the  arguments  are
              listed, and the return status is 0.  The _e_x_i_t___s_t_a_t_u_s argument to			              listed, and the return status is 0.  The _e_x_i_t___s_t_a_t_u_s argument to
              --ll  is  a  number  specifying either a signal number or the exit		      |	              --ll is a number specifying either a signal  number  or  the  exit
              status of a process terminated by a signal.  kkiillll  returns  true		      |	              status  of  a  process terminated by a signal.  The --LL option is
              if  at  least  one  signal was successfully sent, or false if an		      |	              equivalent to --ll.  kkiillll returns true if at least one signal  was
              error occurs or an invalid option is encountered.				      |	              successfully  sent,  or  false  if an error occurs or an invalid
											      >	              option is encountered.

       lleett _a_r_g [_a_r_g ...]									       lleett _a_r_g [_a_r_g ...]
              Each _a_r_g is an arithmetic expression to be evaluated (see AARRIITTHH--			              Each _a_r_g is an arithmetic expression to be evaluated (see AARRIITTHH--
              MMEETTIICC  EEVVAALLUUAATTIIOONN).  If the last _a_r_g evaluates to 0, lleett returns		      |	              MMEETTIICC  EEVVAALLUUAATTIIOONN  above).   If the last _a_r_g evaluates to 0, lleett
              1; 0 is returned otherwise.						      |	              returns 1; 0 is returned otherwise.

       llooccaall [_o_p_t_i_o_n] [_n_a_m_e[=_v_a_l_u_e] ...]						      |	       llooccaall [_o_p_t_i_o_n] [_n_a_m_e[=_v_a_l_u_e] ... | - ]
              For each argument, a local variable named _n_a_m_e is  created,  and			              For each argument, a local variable named _n_a_m_e is  created,  and
              assigned  _v_a_l_u_e.   The _o_p_t_i_o_n can be any of the options accepted			              assigned  _v_a_l_u_e.   The _o_p_t_i_o_n can be any of the options accepted
              by ddeeccllaarree.  When llooccaall is used within a function, it causes the			              by ddeeccllaarree.  When llooccaall is used within a function, it causes the
              variable  _n_a_m_e  to have a visible scope restricted to that func-			              variable  _n_a_m_e  to have a visible scope restricted to that func-
              tion and its children.  With no operands, llooccaall writes a list of		      |	              tion and its children.  If _n_a_m_e is -, the set of  shell  options
              local  variables  to the standard output.  It is an error to use		      |	              is  made  local to the function in which llooccaall is invoked: shell
              llooccaall when not within a function.  The return status is 0 unless		      |	              options changed using the sseett builtin inside  the  function  are
              llooccaall  is  used outside a function, an invalid _n_a_m_e is supplied,		      |	              restored  to  their  original  values when the function returns.
              or _n_a_m_e is a readonly variable.						      |	              With no operands, llooccaall writes a list of local variables to  the
											      >	              standard  output.  It is an error to use llooccaall when not within a
											      >	              function.  The return status is 0 unless llooccaall is used outside a
											      >	              function,  an  invalid  _n_a_m_e  is supplied, or _n_a_m_e is a readonly
											      >	              variable.

       llooggoouutt Exit a login shell.								       llooggoouutt Exit a login shell.

											      >	       mmaappffiillee [--dd _d_e_l_i_m] [--nn _c_o_u_n_t] [--OO _o_r_i_g_i_n] [--ss _c_o_u_n_t] [--tt] [--uu  _f_d]  [--CC
											      >	       _c_a_l_l_b_a_c_k] [--cc _q_u_a_n_t_u_m] [_a_r_r_a_y]
											      >	       rreeaaddaarrrraayy [--dd _d_e_l_i_m] [--nn _c_o_u_n_t] [--OO _o_r_i_g_i_n] [--ss _c_o_u_n_t] [--tt] [--uu _f_d] [--CC
											      >	       _c_a_l_l_b_a_c_k] [--cc _q_u_a_n_t_u_m] [_a_r_r_a_y]
											      >	              Read lines from the standard input into the indexed array  vari-
											      >	              able  _a_r_r_a_y, or from file descriptor _f_d if the --uu option is sup-
											      >	              plied.  The variable MMAAPPFFIILLEE is the default _a_r_r_a_y.  Options,  if
											      >	              supplied, have the following meanings:
											      >	              --dd     The  first  character  of _d_e_l_i_m is used to terminate each
											      >	                     input line, rather than newline.  If _d_e_l_i_m is  the  empty
											      >	                     string, mmaappffiillee will terminate a line when it reads a NUL
											      >	                     character.
											      >	              --nn     Copy at most _c_o_u_n_t lines.  If _c_o_u_n_t is 0, all  lines  are
											      >	                     copied.
											      >	              --OO     Begin  assigning  to  _a_r_r_a_y at index _o_r_i_g_i_n.  The default
											      >	                     index is 0.
											      >	              --ss     Discard the first _c_o_u_n_t lines read.
											      >	              --tt     Remove a trailing _d_e_l_i_m (default newline) from each  line
											      >	                     read.
											      >	              --uu     Read  lines  from file descriptor _f_d instead of the stan-
											      >	                     dard input.
											      >	              --CC     Evaluate _c_a_l_l_b_a_c_k each time _q_u_a_n_t_u_m lines are read.   The
											      >	                     --cc option specifies _q_u_a_n_t_u_m.
											      >	              --cc     Specify  the  number  of  lines read between each call to
											      >	                     _c_a_l_l_b_a_c_k.
											      >
											      >	              If --CC is specified without --cc,  the  default  quantum  is  5000.
											      >	              When _c_a_l_l_b_a_c_k is evaluated, it is supplied the index of the next
											      >	              array element to be assigned and the line to be assigned to that
											      >	              element  as  additional  arguments.  _c_a_l_l_b_a_c_k is evaluated after
											      >	              the line is read but before the array element is assigned.
											      >
											      >	              If not supplied with an  explicit  origin,  mmaappffiillee  will  clear
											      >	              _a_r_r_a_y before assigning to it.
											      >
											      >	              mmaappffiillee  returns successfully unless an invalid option or option
											      >	              argument is supplied, _a_r_r_a_y is invalid or  unassignable,  or  if
											      >	              _a_r_r_a_y is not an indexed array.
											      >
       ppooppdd [-nn] [+_n] [-_n]									       ppooppdd [-nn] [+_n] [-_n]
              Removes entries from the directory stack.   With  no  arguments,		      |	              Removes  entries  from  the directory stack.  With no arguments,
              removes  the  top directory from the stack, and performs a ccdd to		      |	              removes the top directory from the stack, and performs a  ccdd  to
              the new top directory.  Arguments, if supplied, have the follow-			              the new top directory.  Arguments, if supplied, have the follow-
              ing meanings:									              ing meanings:
              ++_n     Removes  the _nth entry counting from the left of the list		      |	              --nn     Suppresses the normal change of directory  when  removing
                     shown by ddiirrss, starting with zero.  For  example:  ``popd		      |	                     directories  from  the  stack,  so that only the stack is
											      >	                     manipulated.
											      >	              ++_n     Removes the _nth entry counting from the left of the  list
											      >	                     shown  by  ddiirrss, starting with zero.  For example: ``popd
                     +0'' removes the first directory, ``popd +1'' the second.			                     +0'' removes the first directory, ``popd +1'' the second.
              --_n     Removes the _nth entry counting from the right of the list			              --_n     Removes the _nth entry counting from the right of the list
                     shown  by  ddiirrss, starting with zero.  For example: ``popd		      |	                     shown by ddiirrss, starting with zero.  For  example:  ``popd
                     -0'' removes the last directory, ``popd -1'' the next  to		      |	                     -0''  removes the last directory, ``popd -1'' the next to
                     last.									                     last.
              --nn     Suppresses  the  normal change of directory when removing		      <
                     directories from the stack, so that  only  the  stack  is		      <
                     manipulated.							      <

              If  the ppooppdd command is successful, a ddiirrss is performed as well,		      |	              If the ppooppdd command is successful, a ddiirrss is performed as  well,
              and the return status is 0.  ppooppdd returns false  if  an  invalid		      |	              and  the  return  status is 0.  ppooppdd returns false if an invalid
              option is encountered, the directory stack is empty, a non-exis-			              option is encountered, the directory stack is empty, a non-exis-
              tent directory stack entry is specified, or the directory change			              tent directory stack entry is specified, or the directory change
              fails.										              fails.

       pprriinnttff [--vv _v_a_r] _f_o_r_m_a_t [_a_r_g_u_m_e_n_t_s]							       pprriinnttff [--vv _v_a_r] _f_o_r_m_a_t [_a_r_g_u_m_e_n_t_s]
              Write  the  formatted _a_r_g_u_m_e_n_t_s to the standard output under the		      |	              Write the formatted _a_r_g_u_m_e_n_t_s to the standard output  under  the
              control of the _f_o_r_m_a_t.  The _f_o_r_m_a_t is a character  string  which		      |	              control  of  the  _f_o_r_m_a_t.  The --vv option causes the output to be
              contains  three  types  of  objects: plain characters, which are		      |	              assigned to the variable _v_a_r rather than being  printed  to  the
              simply copied to standard output,  character  escape  sequences,		      |	              standard output.
              which  are converted and copied to the standard output, and for-		      |
              mat specifications, each of which causes printing  of  the  next		      |	              The  _f_o_r_m_a_t  is a character string which contains three types of
              successive _a_r_g_u_m_e_n_t.  In addition to the standard _p_r_i_n_t_f(1) for-		      |	              objects: plain characters, which are simply copied  to  standard
              mats, %%bb causes pprriinnttff to expand backslash escape  sequences  in		      |	              output,  character  escape  sequences,  which  are converted and
              the  corresponding  _a_r_g_u_m_e_n_t  (except that \\cc terminates output,		      |	              copied to the standard output, and format  specifications,  each
              backslashes in \\'', \\"", and \\?? are not removed, and octal escapes		      |	              of  which  causes  printing of the next successive _a_r_g_u_m_e_n_t.  In
              beginning  with \\00 may contain up to four digits), and %%qq causes		      |	              addition to the standard _p_r_i_n_t_f(1) format specifications, pprriinnttff
              pprriinnttff to output the corresponding _a_r_g_u_m_e_n_t in a format that can		      |	              interprets the following extensions:
              be reused as shell input.							      |	              %%bb     causes pprriinnttff to expand backslash escape sequences in the
											      |	                     corresponding _a_r_g_u_m_e_n_t in the same way as eecchhoo --ee.
              The  --vv  option causes the output to be assigned to the variable		      |	              %%qq     causes pprriinnttff to output the corresponding _a_r_g_u_m_e_n_t  in  a
              _v_a_r rather than being printed to the standard output.			      |	                     format that can be reused as shell input.
											      >	              %%((_d_a_t_e_f_m_t))TT
											      >	                     causes  pprriinnttff  to  output the date-time string resulting
											      >	                     from using _d_a_t_e_f_m_t as a format  string  for  _s_t_r_f_t_i_m_e(3).
											      >	                     The corresponding _a_r_g_u_m_e_n_t is an integer representing the
											      >	                     number of seconds since the epoch.  Two special  argument
											      >	                     values  may  be used: -1 represents the current time, and
											      >	                     -2 represents the time the  shell  was  invoked.   If  no
											      >	                     argument  is  specified,  conversion behaves as if -1 had
											      >	                     been given.  This is an exception  to  the  usual  pprriinnttff
											      >	                     behavior.
											      >
											      >	              Arguments  to non-string format specifiers are treated as C con-
											      >	              stants, except that a leading plus or minus sign is allowed, and
											      >	              if  the leading character is a single or double quote, the value
											      >	              is the ASCII value of the following character.

              The _f_o_r_m_a_t is reused as necessary to consume all  of  the  _a_r_g_u_-			              The _f_o_r_m_a_t is reused as necessary to consume all  of  the  _a_r_g_u_-
              _m_e_n_t_s.  If the _f_o_r_m_a_t requires more _a_r_g_u_m_e_n_t_s than are supplied,			              _m_e_n_t_s.  If the _f_o_r_m_a_t requires more _a_r_g_u_m_e_n_t_s than are supplied,
              the extra format specifications behave as if  a  zero  value  or			              the extra format specifications behave as if  a  zero  value  or
              null  string,  as  appropriate,  had  been supplied.  The return			              null  string,  as  appropriate,  had  been supplied.  The return
              value is zero on success, non-zero on failure.					              value is zero on success, non-zero on failure.

       ppuusshhdd [--nn] [_d_i_r]									      <
       ppuusshhdd [--nn] [+_n] [-_n]									       ppuusshhdd [--nn] [+_n] [-_n]
											      >	       ppuusshhdd [--nn] [_d_i_r]
              Adds a directory to the top of the directory stack,  or  rotates			              Adds a directory to the top of the directory stack,  or  rotates
              the  stack,  making the new top of the stack the current working			              the  stack,  making the new top of the stack the current working
              directory.  With no arguments, exchanges the top two directories		      |	              directory.  With no  arguments,  ppuusshhdd  exchanges  the  top  two
              and  returns 0, unless the directory stack is empty.  Arguments,		      |	              directories  and returns 0, unless the directory stack is empty.
              if supplied, have the following meanings:					      |	              Arguments, if supplied, have the following meanings:
											      >	              --nn     Suppresses the normal change of directory  when  rotating
											      >	                     or  adding  directories  to  the  stack, so that only the
											      >	                     stack is manipulated.
              ++_n     Rotates the stack so that  the  _nth  directory  (counting			              ++_n     Rotates the stack so that  the  _nth  directory  (counting
                     from  the  left  of the list shown by ddiirrss, starting with			                     from  the  left  of the list shown by ddiirrss, starting with
                     zero) is at the top.							                     zero) is at the top.
              --_n     Rotates the stack so that  the  _nth  directory  (counting			              --_n     Rotates the stack so that  the  _nth  directory  (counting
                     from  the  right of the list shown by ddiirrss, starting with			                     from  the  right of the list shown by ddiirrss, starting with
                     zero) is at the top.							                     zero) is at the top.
              --nn     Suppresses the normal change  of  directory  when  adding		      <
                     directories  to  the  stack,  so  that  only the stack is		      <
                     manipulated.							      <
              _d_i_r    Adds _d_i_r to the directory stack at the top, making it the			              _d_i_r    Adds _d_i_r to the directory stack at the top, making it the
                     new current working directory.					      |	                     new  current working directory as if it had been supplied
											      >	                     as the argument to the ccdd builtin.

              If the ppuusshhdd command is successful, a ddiirrss is performed as well.			              If the ppuusshhdd command is successful, a ddiirrss is performed as well.
              If the first form is used, ppuusshhdd returns 0 unless the cd to  _d_i_r		      |	              If  the first form is used, ppuusshhdd returns 0 unless the cd to _d_i_r
              fails.   With the second form, ppuusshhdd returns 0 unless the direc-		      |	              fails.  With the second form, ppuusshhdd returns 0 unless the  direc-
              tory stack is empty, a non-existent directory stack  element  is		      |	              tory  stack  is empty, a non-existent directory stack element is
              specified,  or the directory change to the specified new current		      |	              specified, or the directory change to the specified new  current
              directory fails.									              directory fails.

       ppwwdd [--LLPP]										       ppwwdd [--LLPP]
              Print the absolute pathname of the  current  working  directory.		      |	              Print  the  absolute  pathname of the current working directory.
              The pathname printed contains no symbolic links if the --PP option			              The pathname printed contains no symbolic links if the --PP option
              is supplied or the --oo pphhyyssiiccaall option to the sseett builtin command			              is supplied or the --oo pphhyyssiiccaall option to the sseett builtin command
              is  enabled.  If the --LL option is used, the pathname printed may		      |	              is enabled.  If the --LL option is used, the pathname printed  may
              contain symbolic links.  The return status is 0 unless an  error		      |	              contain  symbolic links.  The return status is 0 unless an error
              occurs  while  reading  the  name of the current directory or an		      |	              occurs while reading the name of the  current  directory  or  an
              invalid option is supplied.							              invalid option is supplied.

       rreeaadd [--eerrss] [--uu _f_d] [--tt _t_i_m_e_o_u_t] [--aa _a_n_a_m_e] [--pp _p_r_o_m_p_t] [--nn _n_c_h_a_r_s] [--dd		      |	       rreeaadd [--eerrss] [--aa _a_n_a_m_e] [--dd _d_e_l_i_m] [--ii _t_e_x_t] [--nn _n_c_h_a_r_s] [--NN _n_c_h_a_r_s] [--pp
       _d_e_l_i_m] [_n_a_m_e ...]								      |	       _p_r_o_m_p_t] [--tt _t_i_m_e_o_u_t] [--uu _f_d] [_n_a_m_e ...]
              One line is read from the  standard  input,  or  from  the  file		      |	              One  line  is  read  from  the  standard input, or from the file
              descriptor  _f_d supplied as an argument to the --uu option, and the		      |	              descriptor _f_d supplied as an argument to the  --uu  option,  split
											      >	              into  words  as  described  above  under WWoorrdd SSpplliittttiinngg, and the
              first word is assigned to the first _n_a_m_e, the second word to the			              first word is assigned to the first _n_a_m_e, the second word to the
              second  _n_a_m_e, and so on, with leftover words and their interven-		      |	              second _n_a_m_e, and so on.  If there are more words than names, the
              ing separators assigned to the last _n_a_m_e.  If  there  are  fewer		      |	              remaining words and their intervening delimiters are assigned to
              words read from the input stream than names, the remaining names		      |	              the  last  _n_a_m_e.   If  there are fewer words read from the input
              are assigned empty values.  The characters in IIFFSS  are  used  to		      |	              stream than names, the remaining names are assigned  empty  val-
              split  the  line into words.  The backslash character (\\) may be		      |	              ues.   The  characters  in  IIFFSS  are used to split the line into
              used to remove any special meaning for the next  character  read		      |	              words  using  the  same  rules  the  shell  uses  for  expansion
              and  for line continuation.  Options, if supplied, have the fol-		      |	              (described above under WWoorrdd SSpplliittttiinngg).  The backslash character
              lowing meanings:								      |	              (\\) may be used to remove any special meaning for the next char-
											      >	              acter  read  and  for  line continuation.  Options, if supplied,
											      >	              have the following meanings:
              --aa _a_n_a_m_e										              --aa _a_n_a_m_e
                     The words are assigned to sequential indices of the array			                     The words are assigned to sequential indices of the array
                     variable _a_n_a_m_e, starting at 0.  _a_n_a_m_e is unset before any			                     variable _a_n_a_m_e, starting at 0.  _a_n_a_m_e is unset before any
                     new  values  are  assigned.   Other  _n_a_m_e  arguments  are			                     new  values  are  assigned.   Other  _n_a_m_e  arguments  are
                     ignored.									                     ignored.
              --dd _d_e_l_i_m										              --dd _d_e_l_i_m
                     The  first  character  of  _d_e_l_i_m is used to terminate the			                     The  first  character  of  _d_e_l_i_m is used to terminate the
                     input line, rather than newline.					      |	                     input line, rather than newline.  If _d_e_l_i_m is  the  empty
											      >	                     string,  rreeaadd  will  terminate a line when it reads a NUL
											      >	                     character.
              --ee     If the standard input is coming from a terminal, rreeaaddlliinnee			              --ee     If the standard input is coming from a terminal, rreeaaddlliinnee
                     (see RREEAADDLLIINNEE above) is used to obtain the line.			      |	                     (see  RREEAADDLLIINNEE  above) is used to obtain the line.  Read-
											      >	                     line uses the current (or default, if  line  editing  was
											      >	                     not  previously  active) editing settings, but uses Read-
											      >	                     line's default filename completion.
											      >	              --ii _t_e_x_t
											      >	                     If rreeaaddlliinnee is being used  to  read  the  line,  _t_e_x_t  is
											      >	                     placed into the editing buffer before editing begins.
              --nn _n_c_h_a_r_s										              --nn _n_c_h_a_r_s
                     rreeaadd  returns after reading _n_c_h_a_r_s characters rather than			                     rreeaadd  returns after reading _n_c_h_a_r_s characters rather than
                     waiting for a complete line of input.				      |	                     waiting for a complete line of input, but honors a delim-
											      >	                     iter  if fewer than _n_c_h_a_r_s characters are read before the
											      >	                     delimiter.
											      >	              --NN _n_c_h_a_r_s
											      >	                     rreeaadd returns  after  reading  exactly  _n_c_h_a_r_s  characters
											      >	                     rather  than waiting for a complete line of input, unless
											      >	                     EOF is encountered or rreeaadd times out.  Delimiter  charac-
											      >	                     ters  encountered  in the input are not treated specially
											      >	                     and do not cause rreeaadd to return until  _n_c_h_a_r_s  characters
											      >	                     are  read.   The result is not split on the characters in
											      >	                     IIFFSS; the intent is that the variable is assigned  exactly
											      >	                     the characters read (with the exception of backslash; see
											      >	                     the --rr option below).
              --pp _p_r_o_m_p_t										              --pp _p_r_o_m_p_t
                     Display _p_r_o_m_p_t on standard error, without a trailing new-			                     Display _p_r_o_m_p_t on standard error, without a trailing new-
                     line, before attempting to read any input.  The prompt is			                     line, before attempting to read any input.  The prompt is
                     displayed only if input is coming from a terminal.				                     displayed only if input is coming from a terminal.
              --rr     Backslash does not act as an escape character.  The back-			              --rr     Backslash does not act as an escape character.  The back-
                     slash  is considered to be part of the line.  In particu-			                     slash  is considered to be part of the line.  In particu-
                     lar, a backslash-newline pair may not be used as  a  line		      |	                     lar, a backslash-newline pair may not then be used  as  a
                     continuation.							      |	                     line continuation.
              --ss     Silent mode.  If input is coming from a terminal, charac-			              --ss     Silent mode.  If input is coming from a terminal, charac-
                     ters are not echoed.							                     ters are not echoed.
              --tt _t_i_m_e_o_u_t									              --tt _t_i_m_e_o_u_t
                     Cause rreeaadd to time out and return failure if  a  complete			                     Cause rreeaadd to time out and return failure if  a  complete
                     line  of  input is not read within _t_i_m_e_o_u_t seconds.  This		      |	                     line  of  input  (or a specified number of characters) is
                     option has no effect if rreeaadd is not  reading  input  from		      |	                     not read within _t_i_m_e_o_u_t seconds.  _t_i_m_e_o_u_t may be a  deci-
                     the terminal or a pipe.						      |	                     mal  number with a fractional portion following the deci-
											      >	                     mal point.  This option is  only  effective  if  rreeaadd  is
											      >	                     reading  input  from  a  terminal, pipe, or other special
											      >	                     file; it has no effect when reading from  regular  files.
											      >	                     If rreeaadd times out, rreeaadd saves any partial input read into
											      >	                     the specified variable  _n_a_m_e.   If  _t_i_m_e_o_u_t  is  0,  rreeaadd
											      >	                     returns  immediately,  without  trying  to read any data.
											      >	                     The exit status is 0 if input is available on the  speci-
											      >	                     fied  file descriptor, non-zero otherwise.  The exit sta-
											      >	                     tus is greater than 128 if the timeout is exceeded.
              --uu _f_d  Read input from file descriptor _f_d.					              --uu _f_d  Read input from file descriptor _f_d.

              If no _n_a_m_e_s are supplied, the line read is assigned to the vari-			              If no _n_a_m_e_s are supplied, the line read is assigned to the vari-
              able RREEPPLLYY.  The return code  is  zero,  unless  end-of-file  is		      |	              able  RREEPPLLYY.   The  exit  status  is zero, unless end-of-file is
              encountered,  rreeaadd  times  out, or an invalid file descriptor is		      |	              encountered, rreeaadd times out (in which case the status is greater
              supplied as the argument to --uu.						      |	              than  128),  a variable assignment error (such as assigning to a
											      |	              readonly variable) occurs, or an invalid file descriptor is sup-
       rreeaaddoonnllyy [--aappff] [_n_a_m_e[=_w_o_r_d] ...]						      |	              plied as the argument to --uu.
              The given _n_a_m_e_s are marked readonly; the values of  these  _n_a_m_e_s		      |
              may  not  be changed by subsequent assignment.  If the --ff option		      |	       rreeaaddoonnllyy [--aaAAff] [--pp] [_n_a_m_e[=_w_o_r_d] ...]
              is supplied, the functions corresponding to  the  _n_a_m_e_s  are  so		      |	              The  given  _n_a_m_e_s are marked readonly; the values of these _n_a_m_e_s
              marked.  The --aa option restricts the variables to arrays.  If no		      |	              may not be changed by subsequent assignment.  If the  --ff  option
              _n_a_m_e arguments are given, or if the --pp  option  is  supplied,  a		      |	              is  supplied,  the  functions  corresponding to the _n_a_m_e_s are so
              list  of  all  readonly  names is printed.  The --pp option causes		      |	              marked.  The  --aa  option  restricts  the  variables  to  indexed
              output to be displayed in a format that may be reused as  input.		      |	              arrays;  the  --AA  option  restricts the variables to associative
              If  a variable name is followed by =_w_o_r_d, the value of the vari-		      |	              arrays.  If both options are supplied, --AA takes precedence.   If
              able is set to _w_o_r_d.  The return status is 0 unless  an  invalid		      |	              no  _n_a_m_e arguments are given, or if the --pp option is supplied, a
              option  is  encountered,  one  of the _n_a_m_e_s is not a valid shell		      |	              list of all readonly names is printed.  The other options may be
              variable name, or --ff is supplied with a _n_a_m_e that is not a func-		      |	              used  to  restrict the output to a subset of the set of readonly
              tion.									      |	              names.  The --pp option causes output to be displayed in a  format
											      >	              that  may be reused as input.  If a variable name is followed by
											      >	              =_w_o_r_d, the value of the variable is set  to  _w_o_r_d.   The  return
											      >	              status  is 0 unless an invalid option is encountered, one of the
											      >	              _n_a_m_e_s is not a valid shell variable name, or --ff is supplied with
											      >	              a _n_a_m_e that is not a function.

       rreettuurrnn [_n]										       rreettuurrnn [_n]
              Causes  a function to exit with the return value specified by _n.		      |	              Causes  a function to stop executing and return the value speci-
              If _n is omitted, the return status is that of the  last  command		      |	              fied by _n to its caller.  If _n is omitted, the return status  is
              executed  in the function body.  If used outside a function, but		      |	              that  of  the  last  command  executed in the function body.  If
              during execution of a script by  the  ..   (ssoouurrccee)  command,  it		      |	              rreettuurrnn is executed by a trap handler, the last command  used  to
              causes the shell to stop executing that script and return either		      |	              determine  the  status  is  the last command executed before the
              _n or the exit status of the last  command  executed  within  the		      |	              trap handler.  If rreettuurrnn is executed during a  DDEEBBUUGG  trap,  the
              script  as  the  exit  status  of the script.  If used outside a		      |	              last  command  used  to determine the status is the last command
              function and not during execution of a script by ..,  the  return		      |	              executed by the trap handler  before  rreettuurrnn  was  invoked.   If
              status is false.  Any command associated with the RREETTUURRNN trap is		      |	              rreettuurrnn  is  used  outside  a function, but during execution of a
              executed before execution resumes after the function or  script.		      |	              script by the ..  (ssoouurrccee) command, it causes the shell  to  stop
											      |	              executing  that script and return either _n or the exit status of
       sseett [----aabbeeffhhkkmmnnppttuuvvxxBBCCHHPP] [--oo _o_p_t_i_o_n] [_a_r_g ...]					      |	              the last command executed within the script as the  exit  status
              Without  options,  the name and value of each shell variable are		      |	              of  the script.  If _n is supplied, the return value is its least
											      >	              significant 8 bits.  The return status is non-zero if rreettuurrnn  is
											      >	              supplied  a  non-numeric argument, or is used outside a function
											      >	              and not during execution of a script by .. or ssoouurrccee.   Any  com-
											      >	              mand  associated  with the RREETTUURRNN trap is executed before execu-
											      >	              tion resumes after the function or script.
											      >
											      >	       sseett [----aabbeeffhhkkmmnnppttuuvvxxBBCCEEHHPPTT] [--oo _o_p_t_i_o_n_-_n_a_m_e] [_a_r_g ...]
											      >	       sseett [++aabbeeffhhkkmmnnppttuuvvxxBBCCEEHHPPTT] [++oo _o_p_t_i_o_n_-_n_a_m_e] [_a_r_g ...]
											      >	              Without options, the name and value of each shell  variable  are
              displayed in a format that can be reused as input for setting or			              displayed in a format that can be reused as input for setting or
              resetting the currently-set variables.  Read-only variables can-			              resetting the currently-set variables.  Read-only variables can-
              not be reset.  In _p_o_s_i_x _m_o_d_e, only shell variables  are  listed.		      |	              not  be  reset.  In _p_o_s_i_x _m_o_d_e, only shell variables are listed.
              The  output  is  sorted  according  to the current locale.  When		      |	              The output is sorted according  to  the  current  locale.   When
              options are specified, they set or unset shell attributes.   Any		      |	              options  are specified, they set or unset shell attributes.  Any
              arguments  remaining after the options are processed are treated		      |	              arguments remaining after option processing are treated as  val-
              as values for the positional parameters  and  are  assigned,  in		      |	              ues for the positional parameters and are assigned, in order, to
              order, to $$11, $$22, ......  $$_n.  Options, if specified, have the fol-		      |	              $$11, $$22, ......  $$_n.  Options,  if  specified,  have  the  following
              lowing meanings:								      |	              meanings:
              --aa      Automatically mark variables  and  functions  which  are		      |	              --aa      Each variable or function that is created or modified is
                      modified  or  created  for  export to the environment of		      |	                      given the export attribute and marked for export to  the
                      subsequent commands.						      |	                      environment of subsequent commands.
              --bb      Report the status of terminated background jobs  immedi-		      |	              --bb      Report  the status of terminated background jobs immedi-
                      ately, rather than before the next primary prompt.  This			                      ately, rather than before the next primary prompt.  This
                      is effective only when job control is enabled.				                      is effective only when job control is enabled.
              --ee      Exit immediately if a _s_i_m_p_l_e _c_o_m_m_a_n_d (see SSHHEELLLL  GGRRAAMMMMAARR		      |	              --ee      Exit  immediately  if a _p_i_p_e_l_i_n_e (which may consist of a
                      above) exits with a non-zero status.  The shell does not		      |	                      single _s_i_m_p_l_e _c_o_m_m_a_n_d), a _l_i_s_t, or  a  _c_o_m_p_o_u_n_d  _c_o_m_m_a_n_d
                      exit if the command that fails is part  of  the  command		      |	                      (see SSHHEELLLL GGRRAAMMMMAARR above), exits with a non-zero status.
                      list  immediately  following  a  wwhhiillee or uunnttiill keyword,		      |	                      The shell does not exit if the  command  that  fails  is
                      part of the test in an _i_f statement, part of a &&&& or  ||||		      |	                      part  of  the command list immediately following a wwhhiillee
                      list, or if the command's return value is being inverted		      |	                      or uunnttiill keyword, part of the test following the  iiff  or
                      via !!.  A trap on EERRRR, if set, is  executed  before  the		      |	                      eelliiff  reserved  words, part of any command executed in a
                      shell exits.							      |	                      &&&& or |||| list except the command following the final  &&&&
											      >	                      or ||||, any command in a pipeline but the last, or if the
											      >	                      command's return value is being inverted with !!.   If  a
											      >	                      compound  command  other  than a subshell returns a non-
											      >	                      zero status because a command failed while --ee was  being
											      >	                      ignored,  the  shell  does  not exit.  A trap on EERRRR, if
											      >	                      set, is executed before the shell  exits.   This  option
											      >	                      applies to the shell environment and each subshell envi-
											      >	                      ronment separately (see  CCOOMMMMAANNDD  EEXXEECCUUTTIIOONN  EENNVVIIRROONNMMEENNTT
											      >	                      above), and may cause subshells to exit before executing
											      >	                      all the commands in the subshell.
											      >
											      >	                      If a compound command or shell function  executes  in  a
											      >	                      context  where --ee is being ignored, none of the commands
											      >	                      executed within the compound command  or  function  body
											      >	                      will  be  affected  by the --ee setting, even if --ee is set
											      >	                      and a command returns a failure status.  If  a  compound
											      >	                      command  or  shell function sets --ee while executing in a
											      >	                      context where --ee is ignored, that setting will not  have
											      >	                      any  effect  until  the  compound command or the command
											      >	                      containing the function call completes.
              --ff      Disable pathname expansion.						              --ff      Disable pathname expansion.
              --hh      Remember  the location of commands as they are looked up		      |	              --hh      Remember the location of commands as they are looked  up
                      for execution.  This is enabled by default.				                      for execution.  This is enabled by default.
              --kk      All arguments in the form of assignment  statements  are		      |	              --kk      All  arguments  in the form of assignment statements are
                      placed  in the environment for a command, not just those		      |	                      placed in the environment for a command, not just  those
                      that precede the command name.						                      that precede the command name.
              --mm      Monitor mode.  Job control is enabled.  This  option  is		      |	              --mm      Monitor  mode.   Job control is enabled.  This option is
                      on  by  default  for  interactive shells on systems that		      |	                      on by default for interactive  shells  on  systems  that
                      support it (see JJOOBB  CCOONNTTRROOLL  above).   Background  pro-		      |	                      support  it  (see JJOOBB CCOONNTTRROOLL above).  All processes run
                      cesses  run  in a separate process group and a line con-		      |	                      in a separate process group.  When a background job com-
                      taining their exit status is printed upon their  comple-		      |	                      pletes, the shell prints a line containing its exit sta-
                      tion.								      |	                      tus.
              --nn      Read commands but do not execute them.  This may be used			              --nn      Read commands but do not execute them.  This may be used
                      to check a shell script  for  syntax  errors.   This  is		      |	                      to  check  a  shell  script  for syntax errors.  This is
                      ignored by interactive shells.						                      ignored by interactive shells.
              --oo _o_p_t_i_o_n_-_n_a_m_e									              --oo _o_p_t_i_o_n_-_n_a_m_e
                      The _o_p_t_i_o_n_-_n_a_m_e can be one of the following:				                      The _o_p_t_i_o_n_-_n_a_m_e can be one of the following:
                      aalllleexxppoorrtt									                      aalllleexxppoorrtt
                              Same as --aa.							                              Same as --aa.
                      bbrraacceeeexxppaanndd								                      bbrraacceeeexxppaanndd
                              Same as --BB.							                              Same as --BB.
                      eemmaaccss   Use  an  emacs-style command line editing inter-		      |	                      eemmaaccss   Use an emacs-style command line  editing  inter-
                              face.  This is enabled by default when the shell			                              face.  This is enabled by default when the shell
                              is interactive, unless the shell is started with			                              is interactive, unless the shell is started with
                              the ----nnooeeddiittiinngg option.					      |	                              the  ----nnooeeddiittiinngg  option.  This also affects the
											      >	                              editing interface used for rreeaadd --ee.
											      >	                      eerrrreexxiitt Same as --ee.
                      eerrrrttrraaccee									                      eerrrrttrraaccee
                              Same as --EE.							                              Same as --EE.
                      ffuunnccttrraaccee									                      ffuunnccttrraaccee
                              Same as --TT.							                              Same as --TT.
                      eerrrreexxiitt Same as --ee.						      <
                      hhaasshhaallll Same as --hh.							                      hhaasshhaallll Same as --hh.
                      hhiisstteexxppaanndd								                      hhiisstteexxppaanndd
                              Same as --HH.							                              Same as --HH.
                      hhiissttoorryy Enable command history, as described above under			                      hhiissttoorryy Enable command history, as described above under
                              HHIISSTTOORRYY.  This option is on by default in inter-			                              HHIISSTTOORRYY.  This option is on by default in inter-
                              active shells.							                              active shells.
                      iiggnnoorreeeeooff									                      iiggnnoorreeeeooff
                              The  effect  is  as   if   the   shell   command			                              The  effect  is  as   if   the   shell   command
                              ``IGNOREEOF=10''  had  been  executed (see SShheellll			                              ``IGNOREEOF=10''  had  been  executed (see SShheellll
                              VVaarriiaabblleess above).							                              VVaarriiaabblleess above).
                      kkeeyywwoorrdd Same as --kk.							                      kkeeyywwoorrdd Same as --kk.
                      mmoonniittoorr Same as --mm.							                      mmoonniittoorr Same as --mm.
                      nnoocclloobbbbeerr									                      nnoocclloobbbbeerr
                              Same as --CC.							                              Same as --CC.
                      nnooeexxeecc  Same as --nn.							                      nnooeexxeecc  Same as --nn.
                      nnoogglloobb  Same as --ff.  nnoolloogg Currently ignored.			      |	                      nnoogglloobb  Same as --ff.
											      >	                      nnoolloogg   Currently ignored.
                      nnoottiiffyy  Same as --bb.							                      nnoottiiffyy  Same as --bb.
                      nnoouunnsseett Same as --uu.							                      nnoouunnsseett Same as --uu.
                      oonneeccmmdd  Same as --tt.							                      oonneeccmmdd  Same as --tt.
                      pphhyyssiiccaall									                      pphhyyssiiccaall
                              Same as --PP.							                              Same as --PP.
                      ppiippeeffaaiill									                      ppiippeeffaaiill
                              If set, the return value of a  pipeline  is  the			                              If set, the return value of a  pipeline  is  the
                              value  of  the  last (rightmost) command to exit			                              value  of  the  last (rightmost) command to exit
                              with a non-zero status, or zero if all  commands			                              with a non-zero status, or zero if all  commands
                              in  the pipeline exit successfully.  This option			                              in  the pipeline exit successfully.  This option
                              is disabled by default.						                              is disabled by default.
                      ppoossiixx   Change the behavior of bbaasshh  where  the  default			                      ppoossiixx   Change the behavior of bbaasshh  where  the  default
                              operation  differs  from  the  POSIX standard to			                              operation  differs  from  the  POSIX standard to
                              match the standard (_p_o_s_i_x _m_o_d_e).				      |	                              match the standard (_p_o_s_i_x _m_o_d_e).  See  SSEEEE  AALLSSOO
											      >	                              below for a reference to a document that details
											      >	                              how posix mode affects bash's behavior.
                      pprriivviilleeggeedd								                      pprriivviilleeggeedd
                              Same as --pp.							                              Same as --pp.
                      vveerrbboossee Same as --vv.							                      vveerrbboossee Same as --vv.
                      vvii      Use a vi-style command line editing interface.		      |	                      vvii      Use a vi-style command line  editing  interface.
											      >	                              This also affects the editing interface used for
											      >	                              rreeaadd --ee.
                      xxttrraaccee  Same as --xx.							                      xxttrraaccee  Same as --xx.
                      If --oo is supplied with no _o_p_t_i_o_n_-_n_a_m_e, the values of the			                      If --oo is supplied with no _o_p_t_i_o_n_-_n_a_m_e, the values of the
                      current  options are printed.  If ++oo is supplied with no			                      current  options are printed.  If ++oo is supplied with no
                      _o_p_t_i_o_n_-_n_a_m_e, a series of sseett commands  to  recreate  the			                      _o_p_t_i_o_n_-_n_a_m_e, a series of sseett commands  to  recreate  the
                      current  option  settings  is  displayed on the standard			                      current  option  settings  is  displayed on the standard
                      output.									                      output.
              --pp      Turn on _p_r_i_v_i_l_e_g_e_d mode.  In this  mode,  the  $$EENNVV  and			              --pp      Turn on _p_r_i_v_i_l_e_g_e_d mode.  In this  mode,  the  $$EENNVV  and
                      $$BBAASSHH__EENNVV  files  are not processed, shell functions are			                      $$BBAASSHH__EENNVV  files  are not processed, shell functions are
                      not inherited from the environment,  and  the  SSHHEELLLLOOPPTTSS		      |	                      not inherited from the environment, and  the  SSHHEELLLLOOPPTTSS,
                      variable,  if it appears in the environment, is ignored.		      |	                      BBAASSHHOOPPTTSS,  CCDDPPAATTHH,  and  GGLLOOBBIIGGNNOORREE  variables,  if they
                      If the shell is started with the effective user  (group)		      |	                      appear in the environment, are ignored.  If the shell is
                      id  not  equal  to  the real user (group) id, and the --pp		      |	                      started  with the effective user (group) id not equal to
                      option is not supplied, these actions are taken and  the		      |	                      the real user (group) id, and the --pp option is not  sup-
                      effective user id is set to the real user id.  If the --pp		      |	                      plied, these actions are taken and the effective user id
                      option is supplied at startup, the effective user id  is		      |	                      is set to the real user id.  If the --pp  option  is  sup-
                      not reset.  Turning this option off causes the effective		      |	                      plied  at  startup,  the effective user id is not reset.
                      user and group ids to be set to the real user and  group		      |	                      Turning this option off causes the  effective  user  and
                      ids.								      |	                      group ids to be set to the real user and group ids.
              --tt      Exit after reading and executing one command.				              --tt      Exit after reading and executing one command.
              --uu      Treat unset variables as an error when performing param-		      |	              --uu      Treat unset variables and parameters other than the spe-
                      eter expansion.  If expansion is attempted on  an  unset		      |	                      cial parameters "@" and "*" as an error when  performing
                      variable, the shell prints an error message, and, if not		      |	                      parameter  expansion.   If  expansion is attempted on an
                      interactive, exits with a non-zero status.			      |	                      unset variable or parameter, the shell prints  an  error
											      >	                      message,  and, if not interactive, exits with a non-zero
											      >	                      status.
              --vv      Print shell input lines as they are read.					              --vv      Print shell input lines as they are read.
              --xx      After expanding each _s_i_m_p_l_e _c_o_m_m_a_n_d, ffoorr  command,  ccaassee			              --xx      After expanding each _s_i_m_p_l_e _c_o_m_m_a_n_d, ffoorr  command,  ccaassee
                      command, sseelleecctt command, or arithmetic ffoorr command, dis-			                      command, sseelleecctt command, or arithmetic ffoorr command, dis-
                      play the expanded value of PPSS44, followed by the  command			                      play the expanded value of PPSS44, followed by the  command
                      and its expanded arguments or associated word list.			                      and its expanded arguments or associated word list.
              --BB      The  shell performs brace expansion (see BBrraaccee EExxppaannssiioonn			              --BB      The  shell performs brace expansion (see BBrraaccee EExxppaannssiioonn
                      above).  This is on by default.						                      above).  This is on by default.
              --CC      If set, bbaasshh does not overwrite an  existing  file  with			              --CC      If set, bbaasshh does not overwrite an  existing  file  with
                      the  >>,  >>&&,  and <<>> redirection operators.  This may be			                      the  >>,  >>&&,  and <<>> redirection operators.  This may be
                      overridden when creating output files by using the redi-			                      overridden when creating output files by using the redi-
                      rection operator >>|| instead of >>.						                      rection operator >>|| instead of >>.
              --EE      If set, any trap on EERRRR is inherited by shell functions,			              --EE      If set, any trap on EERRRR is inherited by shell functions,
                      command substitutions, and commands executed in  a  sub-			                      command substitutions, and commands executed in  a  sub-
                      shell  environment.  The EERRRR trap is normally not inher-			                      shell  environment.  The EERRRR trap is normally not inher-
                      ited in such cases.							                      ited in such cases.
              --HH      Enable !!  style history substitution.  This option is on			              --HH      Enable !!  style history substitution.  This option is on
                      by default when the shell is interactive.					                      by default when the shell is interactive.
              --PP      If  set,  the  shell does not follow symbolic links when		      |	              --PP      If  set,  the shell does not resolve symbolic links when
                      executing commands such as ccdd that  change  the  current			                      executing commands such as ccdd that  change  the  current
                      working  directory.   It  uses  the  physical  directory			                      working  directory.   It  uses  the  physical  directory
                      structure instead.  By default, bbaasshh follows the logical			                      structure instead.  By default, bbaasshh follows the logical
                      chain  of  directories  when  performing  commands which			                      chain  of  directories  when  performing  commands which
                      change the current directory.						                      change the current directory.
              --TT      If set, any traps on DDEEBBUUGG and RREETTUURRNN are  inherited  by			              --TT      If set, any traps on DDEEBBUUGG and RREETTUURRNN are  inherited  by
                      shell  functions,  command  substitutions,  and commands			                      shell  functions,  command  substitutions,  and commands
                      executed in  a  subshell  environment.   The  DDEEBBUUGG  and			                      executed in  a  subshell  environment.   The  DDEEBBUUGG  and
                      RREETTUURRNN traps are normally not inherited in such cases.			                      RREETTUURRNN traps are normally not inherited in such cases.
              ----      If  no arguments follow this option, then the positional			              ----      If  no arguments follow this option, then the positional
                      parameters are unset.  Otherwise, the positional parame-			                      parameters are unset.  Otherwise, the positional parame-
                      ters  are  set  to  the _a_r_gs, even if some of them begin			                      ters  are  set  to  the _a_r_gs, even if some of them begin
                      with a --.									                      with a --.
              --       Signal the end of options, cause all remaining  _a_r_gs  to			              --       Signal the end of options, cause all remaining  _a_r_gs  to
                      be assigned to the positional parameters.  The --xx and --vv			                      be assigned to the positional parameters.  The --xx and --vv
                      options are turned off.  If there are no _a_r_gs, the posi-			                      options are turned off.  If there are no _a_r_gs, the posi-
                      tional parameters remain unchanged.					                      tional parameters remain unchanged.

              The  options are off by default unless otherwise noted.  Using +			              The  options are off by default unless otherwise noted.  Using +
              rather than - causes  these  options  to  be  turned  off.   The			              rather than - causes  these  options  to  be  turned  off.   The
              options  can  also be specified as arguments to an invocation of			              options  can  also be specified as arguments to an invocation of
              the shell.  The current set of options may be found in $$--.   The			              the shell.  The current set of options may be found in $$--.   The
              return status is always true unless an invalid option is encoun-			              return status is always true unless an invalid option is encoun-
              tered.										              tered.

       sshhiifftt [_n]										       sshhiifftt [_n]
              The positional parameters from _n+1 ... are renamed  to  $$11  ........			              The positional parameters from _n+1 ... are renamed  to  $$11  ........
              Parameters  represented  by  the  numbers  $$## down to $$##-_n+1 are			              Parameters  represented  by  the  numbers  $$## down to $$##-_n+1 are
              unset.  _n must be a non-negative number less than  or  equal  to			              unset.  _n must be a non-negative number less than  or  equal  to
              $$##.   If  _n is 0, no parameters are changed.  If _n is not given,			              $$##.   If  _n is 0, no parameters are changed.  If _n is not given,
              it is assumed to be 1.  If _n is greater than $$##, the  positional			              it is assumed to be 1.  If _n is greater than $$##, the  positional
              parameters  are  not changed.  The return status is greater than			              parameters  are  not changed.  The return status is greater than
              zero if _n is greater than $$## or less than zero; otherwise 0.			              zero if _n is greater than $$## or less than zero; otherwise 0.

       sshhoopptt [--ppqqssuu] [--oo] [_o_p_t_n_a_m_e ...]								       sshhoopptt [--ppqqssuu] [--oo] [_o_p_t_n_a_m_e ...]
              Toggle the values of variables controlling optional shell behav-		      |	              Toggle the values of settings controlling optional shell  behav-
              ior.  With no options, or with the --pp option, a list of all set-		      |	              ior.   The settings can be either those listed below, or, if the
              table options is displayed, with an indication of whether or not		      |	              --oo option is used, those available with the --oo option to the sseett
              each  is  set.  The --pp option causes output to be displayed in a		      |	              builtin command.  With no options, or with the --pp option, a list
              form that may be reused as input.  Other options have  the  fol-		      |	              of all settable options is  displayed,  with  an  indication  of
              lowing meanings:								      |	              whether or not each is set; if _o_p_t_n_a_m_e_s are supplied, the output
											      >	              is restricted to those options.  The --pp option causes output  to
											      >	              be  displayed  in  a  form  that  may be reused as input.  Other
											      >	              options have the following meanings:
              --ss     Enable (set) each _o_p_t_n_a_m_e.							              --ss     Enable (set) each _o_p_t_n_a_m_e.
              --uu     Disable (unset) each _o_p_t_n_a_m_e.						              --uu     Disable (unset) each _o_p_t_n_a_m_e.
              --qq     Suppresses  normal output (quiet mode); the return status		      |	              --qq     Suppresses normal output (quiet mode); the return  status
                     indicates whether the _o_p_t_n_a_m_e is set or unset.  If multi-			                     indicates whether the _o_p_t_n_a_m_e is set or unset.  If multi-
                     ple  _o_p_t_n_a_m_e arguments are given with --qq, the return sta-		      |	                     ple _o_p_t_n_a_m_e arguments are given with --qq, the return  sta-
                     tus is zero if all _o_p_t_n_a_m_e_s are enabled; non-zero  other-		      |	                     tus  is zero if all _o_p_t_n_a_m_e_s are enabled; non-zero other-
                     wise.									                     wise.
              --oo     Restricts  the  values of _o_p_t_n_a_m_e to be those defined for		      |	              --oo     Restricts the values of _o_p_t_n_a_m_e to be those  defined  for
                     the --oo option to the sseett builtin.						                     the --oo option to the sseett builtin.

              If either --ss or --uu is used with no _o_p_t_n_a_m_e arguments,  the  dis-		      |	              If  either  --ss  or  --uu  is used with no _o_p_t_n_a_m_e arguments, sshhoopptt
              play is limited to those options which are set or unset, respec-		      |	              shows only those options which are set or  unset,  respectively.
              tively.  Unless otherwise noted, the sshhoopptt options are  disabled		      |	              Unless  otherwise  noted, the sshhoopptt options are disabled (unset)
              (unset) by default.							      |	              by default.
											      |
              The  return  status when listing options is zero if all _o_p_t_n_a_m_e_s		      |	              The return status when listing options is zero if  all  _o_p_t_n_a_m_e_s
              are enabled, non-zero  otherwise.   When  setting  or  unsetting		      |	              are  enabled,  non-zero  otherwise.   When  setting or unsetting
              options,  the  return  status is zero unless an _o_p_t_n_a_m_e is not a		      |	              options, the return status is zero unless an _o_p_t_n_a_m_e  is  not  a
              valid shell option.								              valid shell option.

              The list of sshhoopptt options is:							              The list of sshhoopptt options is:

											      >	              aassssoocc__eexxppaanndd__oonnccee
											      >	                      If  set,  the  shell  suppresses  multiple evaluation of
											      >	                      associative array subscripts during  arithmetic  expres-
											      >	                      sion  evaluation, while executing builtins that can per-
											      >	                      form variable assignments, and while executing  builtins
											      >	                      that perform array dereferencing.
											      >	              aauuttooccdd  If  set,  a command name that is the name of a directory
											      >	                      is executed as if it were the argument to  the  ccdd  com-
											      >	                      mand.  This option is only used by interactive shells.
              ccddaabbllee__vvaarrss									              ccddaabbllee__vvaarrss
                      If set, an argument to the ccdd builtin  command  that  is		      |	                      If  set,  an  argument to the ccdd builtin command that is
                      not  a directory is assumed to be the name of a variable		      |	                      not a directory is assumed to be the name of a  variable
                      whose value is the directory to change to.				                      whose value is the directory to change to.
              ccddssppeellll If set, minor errors in the spelling of a directory com-			              ccddssppeellll If set, minor errors in the spelling of a directory com-
                      ponent  in  a  ccdd command will be corrected.  The errors		      |	                      ponent in a ccdd command will be  corrected.   The  errors
                      checked for are transposed characters, a missing charac-			                      checked for are transposed characters, a missing charac-
                      ter,  and  one  character  too many.  If a correction is		      |	                      ter, and one character too many.   If  a  correction  is
                      found, the corrected file name is printed, and the  com-		      |	                      found,  the  corrected filename is printed, and the com-
                      mand  proceeds.  This option is only used by interactive		      |	                      mand proceeds.  This option is only used by  interactive
                      shells.									                      shells.
              cchheecckkhhaasshh										              cchheecckkhhaasshh
                      If set, bbaasshh checks that a command found in the hash ta-			                      If set, bbaasshh checks that a command found in the hash ta-
                      ble  exists  before  trying  to execute it.  If a hashed		      |	                      ble exists before trying to execute  it.   If  a  hashed
                      command no longer exists, a normal path search  is  per-		      |	                      command  no  longer exists, a normal path search is per-
                      formed.									                      formed.
											      >	              cchheecckkjjoobbss
											      >	                      If set, bbaasshh lists the status of any stopped and running
											      >	                      jobs  before  exiting an interactive shell.  If any jobs
											      >	                      are running, this causes the exit to be deferred until a
											      >	                      second  exit is attempted without an intervening command
											      >	                      (see JJOOBB CCOONNTTRROOLL above).   The  shell  always  postpones
											      >	                      exiting if any jobs are stopped.
              cchheecckkwwiinnssiizzee									              cchheecckkwwiinnssiizzee
                      If  set,  bbaasshh checks the window size after each command		      |	                      If  set, bbaasshh checks the window size after each external
                      and, if necessary, updates the values of LLIINNEESS and  CCOOLL--		      |	                      (non-builtin) command and,  if  necessary,  updates  the
                      UUMMNNSS.								      |	                      values  of LLIINNEESS and CCOOLLUUMMNNSS.  This option is enabled by
              ccmmddhhiisstt If  set,  bbaasshh attempts to save all lines of a multiple-		      |	                      default.
                      line command in the same  history  entry.   This  allows		      |	              ccmmddhhiisstt If set, bbaasshh attempts to save all lines of  a  multiple-
                      easy re-editing of multi-line commands.				      |	                      line  command  in  the  same history entry.  This allows
											      >	                      easy re-editing of multi-line commands.  This option  is
											      >	                      enabled  by  default,  but only has an effect if command
											      >	                      history is enabled, as described above under HHIISSTTOORRYY.
              ccoommppaatt3311										              ccoommppaatt3311
                      If set, bbaasshh changes its behavior to that of version 3.1			                      If set, bbaasshh changes its behavior to that of version 3.1
                      with respect to quoted arguments to the conditional com-		      |	                      with  respect  to quoted arguments to the [[[[ conditional
                      mand's =~ operator.						      |	                      command's ==~~ operator and locale-specific string compar-
											      >	                      ison  when  using  the  [[[[ conditional command's << and >>
											      >	                      operators.  Bash versions prior to  bash-4.1  use  ASCII
											      >	                      collation and _s_t_r_c_m_p(3); bash-4.1 and later use the cur-
											      >	                      rent locale's collation sequence and _s_t_r_c_o_l_l(3).
											      >	              ccoommppaatt3322
											      >	                      If set, bbaasshh changes its behavior to that of version 3.2
											      >	                      with  respect  to locale-specific string comparison when
											      >	                      using the [[[[ conditional command's  <<  and  >>  operators
											      >	                      (see  previous  item)  and  the effect of interrupting a
											      >	                      command list.  Bash versions 3.2  and  earlier  continue
											      >	                      with  the  next command in the list after one terminates
											      >	                      due to an interrupt.
											      >	              ccoommppaatt4400
											      >	                      If set, bbaasshh changes its behavior to that of version 4.0
											      >	                      with  respect  to locale-specific string comparison when
											      >	                      using the [[[[ conditional command's  <<  and  >>  operators
											      >	                      (see  description  of ccoommppaatt3311) and the effect of inter-
											      >	                      rupting a command list.  Bash  versions  4.0  and  later
											      >	                      interrupt  the  list as if the shell received the inter-
											      >	                      rupt; previous versions continue with the  next  command
											      >	                      in the list.
											      >	              ccoommppaatt4411
											      >	                      If  set, bbaasshh, when in _p_o_s_i_x _m_o_d_e, treats a single quote
											      >	                      in a double-quoted  parameter  expansion  as  a  special
											      >	                      character.   The  single quotes must match (an even num-
											      >	                      ber) and the characters between the  single  quotes  are
											      >	                      considered  quoted.   This is the behavior of posix mode
											      >	                      through version 4.1.  The default bash behavior  remains
											      >	                      as in previous versions.
											      >	              ccoommppaatt4422
											      >	                      If  set, bbaasshh does not process the replacement string in
											      >	                      the pattern  substitution  word  expansion  using  quote
											      >	                      removal.
											      >	              ccoommppaatt4433
											      >	                      If  set,  bbaasshh  does  not  print a warning message if an
											      >	                      attempt is made to use a quoted compound  array  assign-
											      >	                      ment  as  an  argument  to ddeeccllaarree, makes word expansion
											      >	                      errors non-fatal errors that cause the  current  command
											      >	                      to  fail  (the  default  behavior  is to make them fatal
											      >	                      errors that cause the shell to exit), and does not reset
											      >	                      the  loop  state when a shell function is executed (this
											      >	                      allows bbrreeaakk or ccoonnttiinnuuee in a shell function  to  affect
											      >	                      loops in the caller's context).
											      >	              ccoommppaatt4444
											      >	                      If   set,   bbaasshh  saves  the  positional  parameters  to
											      >	                      BASH_ARGV and BASH_ARGC before they are used, regardless
											      >	                      of whether or not extended debugging mode is enabled.
											      >	              ccoommpplleettee__ffuullllqquuoottee
											      >	                      If  set,  bbaasshh  quotes all shell metacharacters in file-
											      >	                      names and directory names  when  performing  completion.
											      >	                      If not set, bbaasshh removes metacharacters such as the dol-
											      >	                      lar sign from the set of characters that will be  quoted
											      >	                      in  completed filenames when these metacharacters appear
											      >	                      in shell variable references in words to  be  completed.
											      >	                      This  means  that  dollar  signs  in variable names that
											      >	                      expand to directories will not be quoted;  however,  any
											      >	                      dollar  signs appearing in filenames will not be quoted,
											      >	                      either.  This is active only when bash  is  using  back-
											      >	                      slashes  to quote completed filenames.  This variable is
											      >	                      set by default, which is the default  bash  behavior  in
											      >	                      versions through 4.2.
											      >	              ddiirreexxppaanndd
											      >	                      If  set,  bbaasshh replaces directory names with the results
											      >	                      of word expansion when performing  filename  completion.
											      >	                      This  changes  the  contents  of  the  readline  editing
											      >	                      buffer.  If not set, bbaasshh attempts to preserve what  the
											      >	                      user typed.
											      >	              ddiirrssppeellll
											      >	                      If  set,  bbaasshh attempts spelling correction on directory
											      >	                      names during word completion if the directory name  ini-
											      >	                      tially supplied does not exist.
              ddoottgglloobb If  set, bbaasshh includes filenames beginning with a `.' in			              ddoottgglloobb If  set, bbaasshh includes filenames beginning with a `.' in
                      the results of pathname expansion.				      |	                      the results of pathname expansion.  The filenames  ````..''''
											      >	                      and  ````....''''   must always be matched explicitly, even if
											      >	                      ddoottgglloobb is set.
              eexxeeccffaaiill										              eexxeeccffaaiill
                      If set, a non-interactive shell will not exit if it can-			                      If set, a non-interactive shell will not exit if it can-
                      not  execute  the  file  specified as an argument to the			                      not  execute  the  file  specified as an argument to the
                      eexxeecc builtin command.  An  interactive  shell  does  not			                      eexxeecc builtin command.  An  interactive  shell  does  not
                      exit if eexxeecc fails.							                      exit if eexxeecc fails.
              eexxppaanndd__aalliiaasseess									              eexxppaanndd__aalliiaasseess
                      If  set,  aliases  are expanded as described above under			                      If  set,  aliases  are expanded as described above under
                      AALLIIAASSEESS.  This option is enabled by default for interac-			                      AALLIIAASSEESS.  This option is enabled by default for interac-
                      tive shells.								                      tive shells.
              eexxttddeebbuugg										              eexxttddeebbuugg
                      If  set,  behavior  intended  for  use  by  debuggers is		      |	                      If  set  at  shell  invocation,  arrange  to execute the
                      enabled:								      |	                      debugger profile before the shell starts,  identical  to
											      >	                      the  ----ddeebbuuggggeerr option.  If set after invocation, behav-
											      >	                      ior intended for use by debuggers is enabled:
                      11..     The --FF option to the ddeeccllaarree builtin displays the			                      11..     The --FF option to the ddeeccllaarree builtin displays the
                             source file name and line number corresponding to			                             source file name and line number corresponding to
                             each function name supplied as an argument.			                             each function name supplied as an argument.
                      22..     If the command run by the DDEEBBUUGG  trap  returns  a			                      22..     If the command run by the DDEEBBUUGG  trap  returns  a
                             non-zero  value,  the next command is skipped and			                             non-zero  value,  the next command is skipped and
                             not executed.							                             not executed.
                      33..     If the command run by the DDEEBBUUGG  trap  returns  a			                      33..     If the command run by the DDEEBBUUGG  trap  returns  a
                             value  of 2, and the shell is executing in a sub-			                             value  of 2, and the shell is executing in a sub-
                             routine (a shell function or a shell script  exe-			                             routine (a shell function or a shell script  exe-
                             cuted  by  the  ..  or ssoouurrccee builtins), a call to		      |	                             cuted  by  the  ..  or ssoouurrccee builtins), the shell
                             rreettuurrnn is simulated.					      |	                             simulates a call to rreettuurrnn.
                      44..     BBAASSHH__AARRGGCC and BBAASSHH__AARRGGVV are updated as  described			                      44..     BBAASSHH__AARRGGCC and BBAASSHH__AARRGGVV are updated as  described
                             in their descriptions above.					                             in their descriptions above.
                      55..     Function  tracing  is enabled:  command substitu-		      |	                      55..     Function  tracing  is  enabled: command substitu-
                             tion, shell functions, and subshells invoked with			                             tion, shell functions, and subshells invoked with
                             (( _c_o_m_m_a_n_d )) inherit the DDEEBBUUGG and RREETTUURRNN traps.			                             (( _c_o_m_m_a_n_d )) inherit the DDEEBBUUGG and RREETTUURRNN traps.
                      66..     Error  tracing is enabled:  command substitution,		      |	                      66..     Error  tracing  is enabled: command substitution,
                             shell functions, and  subshells  invoked  with  ((			                             shell functions, and  subshells  invoked  with  ((
                             _c_o_m_m_a_n_d )) inherit the EERRRROORR trap.				      |	                             _c_o_m_m_a_n_d )) inherit the EERRRR trap.
              eexxttgglloobb If set, the extended pattern matching features described			              eexxttgglloobb If set, the extended pattern matching features described
                      above under PPaatthhnnaammee EExxppaannssiioonn are enabled.				                      above under PPaatthhnnaammee EExxppaannssiioonn are enabled.
              eexxttqquuoottee										              eexxttqquuoottee
                      If set, $$'_s_t_r_i_n_g' and  $$"_s_t_r_i_n_g"  quoting  is  performed			                      If set, $$'_s_t_r_i_n_g' and  $$"_s_t_r_i_n_g"  quoting  is  performed
                      within   $${{_p_a_r_a_m_e_t_e_r}}   expansions  enclosed  in  double			                      within   $${{_p_a_r_a_m_e_t_e_r}}   expansions  enclosed  in  double
                      quotes.  This option is enabled by default.				                      quotes.  This option is enabled by default.
              ffaaiillgglloobb										              ffaaiillgglloobb
                      If set, patterns which fail to  match  filenames  during			                      If set, patterns which fail to  match  filenames  during
                      pathname expansion result in an expansion error.				                      pathname expansion result in an expansion error.
              ffoorrccee__ffiiggnnoorree									              ffoorrccee__ffiiggnnoorree
                      If  set,  the  suffixes  specified  by the FFIIGGNNOORREE shell			                      If  set,  the  suffixes  specified  by the FFIIGGNNOORREE shell
                      variable cause words to be ignored when performing  word			                      variable cause words to be ignored when performing  word
                      completion even if the ignored words are the only possi-			                      completion even if the ignored words are the only possi-
                      ble  completions.   See  SSHHEELLLL  VVAARRIIAABBLLEESS  above  for  a			                      ble  completions.   See  SSHHEELLLL  VVAARRIIAABBLLEESS  above  for  a
                      description  of  FFIIGGNNOORREE.   This  option  is  enabled by			                      description  of  FFIIGGNNOORREE.   This  option  is  enabled by
                      default.									                      default.
											      >	              gglloobbaasscciiiirraannggeess
											      >	                      If set,  range  expressions  used  in  pattern  matching
											      >	                      bracket  expressions (see PPaatttteerrnn MMaattcchhiinngg above) behave
											      >	                      as if in the traditional C locale when  performing  com-
											      >	                      parisons.   That  is,  the  current  locale's  collating
											      >	                      sequence is not taken into account, so bb will  not  col-
											      >	                      late  between  AA  and  BB,  and upper-case and lower-case
											      >	                      ASCII characters will collate together.
											      >	              gglloobbssttaarr
											      >	                      If set, the pattern **** used in a pathname expansion con-
											      >	                      text  will  match all files and zero or more directories
											      >	                      and subdirectories.  If the pattern is followed by a  //,
											      >	                      only directories and subdirectories match.
              ggnnuu__eerrrrffmmtt									              ggnnuu__eerrrrffmmtt
                      If set, shell error messages are written in the standard			                      If set, shell error messages are written in the standard
                      GNU error message format.							                      GNU error message format.
              hhiissttaappppeenndd									              hhiissttaappppeenndd
                      If  set,  the history list is appended to the file named		      |	                      If set, the history list is appended to the  file  named
                      by the value of the HHIISSTTFFIILLEE  variable  when  the  shell		      |	                      by  the  value  of  the HHIISSTTFFIILLEE variable when the shell
                      exits, rather than overwriting the file.					                      exits, rather than overwriting the file.
              hhiissttrreeeeddiitt									              hhiissttrreeeeddiitt
                      If  set, and rreeaaddlliinnee is being used, a user is given the		      |	                      If set, and rreeaaddlliinnee is being used, a user is given  the
                      opportunity to re-edit a failed history substitution.			                      opportunity to re-edit a failed history substitution.
              hhiissttvveerriiffyy									              hhiissttvveerriiffyy
                      If set, and rreeaaddlliinnee is being used, the results of  his-		      |	                      If  set, and rreeaaddlliinnee is being used, the results of his-
                      tory  substitution  are  not  immediately  passed to the		      |	                      tory substitution are  not  immediately  passed  to  the
                      shell parser.  Instead, the  resulting  line  is  loaded		      |	                      shell  parser.   Instead,  the  resulting line is loaded
                      into the rreeaaddlliinnee editing buffer, allowing further modi-			                      into the rreeaaddlliinnee editing buffer, allowing further modi-
                      fication.									                      fication.
              hhoossttccoommpplleettee									              hhoossttccoommpplleettee
                      If set, and rreeaaddlliinnee is being used, bbaasshh will attempt to			                      If set, and rreeaaddlliinnee is being used, bbaasshh will attempt to
                      perform  hostname  completion when a word containing a @@		      |	                      perform hostname completion when a word containing  a  @@
                      is  being  completed  (see  CCoommpplleettiinngg  under   RREEAADDLLIINNEE		      |	                      is   being  completed  (see  CCoommpplleettiinngg  under  RREEAADDLLIINNEE
                      above).  This is enabled by default.					                      above).  This is enabled by default.
              hhuuppoonneexxiitt										              hhuuppoonneexxiitt
                      If set, bbaasshh will send SSIIGGHHUUPP to all jobs when an inter-			                      If set, bbaasshh will send SSIIGGHHUUPP to all jobs when an inter-
                      active login shell exits.							                      active login shell exits.
											      >	              iinnhheerriitt__eerrrreexxiitt
											      >	                      If  set,  command substitution inherits the value of the
											      >	                      eerrrreexxiitt option, instead of unsetting it in the  subshell
											      >	                      environment.   This option is enabled when _p_o_s_i_x _m_o_d_e is
											      >	                      enabled.
              iinntteerraaccttiivvee__ccoommmmeennttss								              iinntteerraaccttiivvee__ccoommmmeennttss
                      If set, allow a word beginning with ## to cause that word			                      If set, allow a word beginning with ## to cause that word
                      and  all remaining characters on that line to be ignored			                      and  all remaining characters on that line to be ignored
                      in an interactive  shell  (see  CCOOMMMMEENNTTSS  above).   This			                      in an interactive  shell  (see  CCOOMMMMEENNTTSS  above).   This
                      option is enabled by default.						                      option is enabled by default.
											      >	              llaassttppiippee
											      >	                      If  set,  and  job control is not active, the shell runs
											      >	                      the last command of a pipeline not executed in the back-
											      >	                      ground in the current shell environment.
              lliitthhiisstt If  set,  and  the ccmmddhhiisstt option is enabled, multi-line			              lliitthhiisstt If  set,  and  the ccmmddhhiisstt option is enabled, multi-line
                      commands are saved to the history with embedded newlines			                      commands are saved to the history with embedded newlines
                      rather than using semicolon separators where possible.			                      rather than using semicolon separators where possible.
											      >	              llooccaallvvaarr__iinnhheerriitt
											      >	                      If set, local variables inherit the value and attributes
											      >	                      of a variable of the same name that exists at a previous
											      >	                      scope  before  any  new  value is assigned.  The nameref
											      >	                      attribute is not inherited.
											      >	              llooccaallvvaarr__uunnsseett
											      >	                      If set, calling uunnsseett on  local  variables  in  previous
											      >	                      function  scopes  marks  them so subsequent lookups find
											      >	                      them unset until that function returns. This is  identi-
											      >	                      cal  to the behavior of unsetting local variables at the
											      >	                      current function scope.
              llooggiinn__sshheellll									              llooggiinn__sshheellll
                      The  shell  sets this option if it is started as a login		      |	                      The shell sets this option if it is started as  a  login
                      shell (see IINNVVOOCCAATTIIOONN above).   The  value  may  not  be		      |	                      shell  (see  IINNVVOOCCAATTIIOONN  above).   The  value may not be
                      changed.									                      changed.
              mmaaiillwwaarrnn										              mmaaiillwwaarrnn
                      If  set,  and  a file that bbaasshh is checking for mail has		      |	                      If set, and a file that bbaasshh is checking  for  mail  has
                      been accessed since the last time it  was  checked,  the		      |	                      been  accessed  since  the last time it was checked, the
                      message  ``The  mail in _m_a_i_l_f_i_l_e has been read'' is dis-		      |	                      message ``The mail in _m_a_i_l_f_i_l_e has been read''  is  dis-
                      played.									                      played.
              nnoo__eemmppttyy__ccmmdd__ccoommpplleettiioonn								              nnoo__eemmppttyy__ccmmdd__ccoommpplleettiioonn
                      If set, and  rreeaaddlliinnee  is  being  used,  bbaasshh  will  not		      |	                      If  set,  and  rreeaaddlliinnee  is  being  used,  bbaasshh will not
                      attempt to search the PPAATTHH for possible completions when			                      attempt to search the PPAATTHH for possible completions when
                      completion is attempted on an empty line.					                      completion is attempted on an empty line.
              nnooccaasseegglloobb									              nnooccaasseegglloobb
                      If set, bbaasshh matches  filenames  in  a  case-insensitive		      |	                      If  set,  bbaasshh  matches  filenames in a case-insensitive
                      fashion when performing pathname expansion (see PPaatthhnnaammee			                      fashion when performing pathname expansion (see PPaatthhnnaammee
                      EExxppaannssiioonn above).								                      EExxppaannssiioonn above).
              nnooccaasseemmaattcchh									              nnooccaasseemmaattcchh
                      If set, bbaasshh  matches  patterns  in  a  case-insensitive		      |	                      If  set,  bbaasshh  matches  patterns  in a case-insensitive
                      fashion when performing matching while executing ccaassee or			                      fashion when performing matching while executing ccaassee or
                      [[[[ conditional commands.						      |	                      [[[[ conditional commands, when performing pattern substi-
											      >	                      tution word expansions, or when filtering possible  com-
											      >	                      pletions as part of programmable completion.
              nnuullllgglloobb										              nnuullllgglloobb
                      If set, bbaasshh allows patterns which match no  files  (see		      |	                      If  set,  bbaasshh allows patterns which match no files (see
                      PPaatthhnnaammee  EExxppaannssiioonn  above)  to expand to a null string,		      |	                      PPaatthhnnaammee EExxppaannssiioonn above) to expand to  a  null  string,
                      rather than themselves.							                      rather than themselves.
              pprrooggccoommpp										              pprrooggccoommpp
                      If set, the programmable completion facilities (see PPrroo--			                      If set, the programmable completion facilities (see PPrroo--
                      ggrraammmmaabbllee CCoommpplleettiioonn above) are enabled.  This option is			                      ggrraammmmaabbllee CCoommpplleettiioonn above) are enabled.  This option is
                      enabled by default.							                      enabled by default.
											      >	              pprrooggccoommpp__aalliiaass
											      >	                      If  set,  and  programmable  completion is enabled, bbaasshh
											      >	                      treats a command name that doesn't have any  completions
											      >	                      as  a possible alias and attempts alias expansion. If it
											      >	                      has an  alias,  bbaasshh  attempts  programmable  completion
											      >	                      using  the  command  word  resulting  from  the expanded
											      >	                      alias.
              pprroommppttvvaarrss									              pprroommppttvvaarrss
                      If set, prompt strings undergo parameter expansion, com-			                      If set, prompt strings undergo parameter expansion, com-
                      mand   substitution,  arithmetic  expansion,  and  quote			                      mand   substitution,  arithmetic  expansion,  and  quote
                      removal after being expanded as described  in  PPRROOMMPPTTIINNGG			                      removal after being expanded as described  in  PPRROOMMPPTTIINNGG
                      above.  This option is enabled by default.				                      above.  This option is enabled by default.
              rreessttrriicctteedd__sshheellll									              rreessttrriicctteedd__sshheellll
                      The   shell  sets  this  option  if  it  is  started  in			                      The   shell  sets  this  option  if  it  is  started  in
                      restricted mode (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).  The value			                      restricted mode (see RREESSTTRRIICCTTEEDD SSHHEELLLL below).  The value
                      may  not be changed.  This is not reset when the startup			                      may  not be changed.  This is not reset when the startup
                      files are executed, allowing the startup files  to  dis-			                      files are executed, allowing the startup files  to  dis-
                      cover whether or not a shell is restricted.				                      cover whether or not a shell is restricted.
              sshhiifftt__vveerrbboossee									              sshhiifftt__vveerrbboossee
                      If  set,  the sshhiifftt builtin prints an error message when			                      If  set,  the sshhiifftt builtin prints an error message when
                      the shift count exceeds the number of positional parame-			                      the shift count exceeds the number of positional parame-
                      ters.									                      ters.
              ssoouurrcceeppaatthh									              ssoouurrcceeppaatthh
                      If set, the ssoouurrccee (..) builtin uses the value of PPAATTHH to			                      If set, the ssoouurrccee (..) builtin uses the value of PPAATTHH to
                      find the directory containing the file  supplied  as  an			                      find the directory containing the file  supplied  as  an
                      argument.  This option is enabled by default.				                      argument.  This option is enabled by default.
              xxppgg__eecchhoo										              xxppgg__eecchhoo
                      If   set,  the  eecchhoo  builtin  expands  backslash-escape			                      If   set,  the  eecchhoo  builtin  expands  backslash-escape
                      sequences by default.							                      sequences by default.
											      >
       ssuussppeenndd [--ff]										       ssuussppeenndd [--ff]
              Suspend the execution of this shell until it receives a  SSIIGGCCOONNTT			              Suspend the execution of this shell until it receives a  SSIIGGCCOONNTT
              signal.   The  --ff option says not to complain if this is a login		      |	              signal.  A login shell cannot be suspended; the --ff option can be
              shell; just suspend anyway.  The return status is 0  unless  the		      |	              used to override this and force the suspension.  The return sta-
              shell is a login shell and --ff is not supplied, or if job control		      |	              tus  is  0  unless the shell is a login shell and --ff is not sup-
              is not enabled.								      |	              plied, or if job control is not enabled.
											      >
       tteesstt _e_x_p_r										       tteesstt _e_x_p_r
       [[ _e_x_p_r ]]											       [[ _e_x_p_r ]]
              Return a status of 0 or 1 depending on  the  evaluation  of  the		      |	              Return a status of 0 (true) or 1 (false) depending on the evalu-
              conditional  expression _e_x_p_r.  Each operator and operand must be		      |	              ation of the conditional expression _e_x_p_r.  Each operator and op-
              a separate argument.  Expressions are composed of the  primaries		      |	              erand must be a separate argument.  Expressions are composed  of
              described  above  under  CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS.  tteesstt does not		      |	              the  primaries  described  above  under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS.
              accept any options, nor does it accept and ignore an argument of		      |	              tteesstt does not accept any options, nor does it accept and  ignore
              ---- as signifying the end of options.					      |	              an argument of ---- as signifying the end of options.

              Expressions  may  be  combined  using  the  following operators,			              Expressions  may  be  combined  using  the  following operators,
              listed in decreasing order of precedence.					      |	              listed  in  decreasing  order  of  precedence.   The  evaluation
											      >	              depends  on the number of arguments; see below.  Operator prece-
											      >	              dence is used when there are five or more arguments.
              !! _e_x_p_r True if _e_x_p_r is false.							              !! _e_x_p_r True if _e_x_p_r is false.
              (( _e_x_p_r ))										              (( _e_x_p_r ))
                     Returns the value of _e_x_p_r.  This may be used to  override			                     Returns the value of _e_x_p_r.  This may be used to  override
                     the normal precedence of operators.					                     the normal precedence of operators.
              _e_x_p_r_1 -aa _e_x_p_r_2									              _e_x_p_r_1 -aa _e_x_p_r_2
                     True if both _e_x_p_r_1 and _e_x_p_r_2 are true.					                     True if both _e_x_p_r_1 and _e_x_p_r_2 are true.
              _e_x_p_r_1 -oo _e_x_p_r_2									              _e_x_p_r_1 -oo _e_x_p_r_2
                     True if either _e_x_p_r_1 or _e_x_p_r_2 is true.					                     True if either _e_x_p_r_1 or _e_x_p_r_2 is true.

              tteesstt and [[ evaluate conditional expressions using a set of rules			              tteesstt and [[ evaluate conditional expressions using a set of rules
              based on the number of arguments.							              based on the number of arguments.

              0 arguments									              0 arguments
                     The expression is false.							                     The expression is false.
              1 argument									              1 argument
                     The expression is true if and only if the argument is not			                     The expression is true if and only if the argument is not
                     null.									                     null.
              2 arguments									              2 arguments
                     If the first argument is !!, the expression is true if and			                     If the first argument is !!, the expression is true if and
                     only if the second argument is null.  If the first  argu-			                     only if the second argument is null.  If the first  argu-
                     ment  is  one  of  the unary conditional operators listed			                     ment  is  one  of  the unary conditional operators listed
                     above under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS,  the  expression  is			                     above under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS,  the  expression  is
                     true if the unary test is true.  If the first argument is			                     true if the unary test is true.  If the first argument is
                     not a valid unary conditional operator, the expression is			                     not a valid unary conditional operator, the expression is
                     false.									                     false.
              3 arguments									              3 arguments
                     If  the  second argument is one of the binary conditional		      |	                     The following conditions are applied in the order listed.
											      >	                     If the second argument is one of the  binary  conditional
                     operators listed above under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS, the			                     operators listed above under CCOONNDDIITTIIOONNAALL EEXXPPRREESSSSIIOONNSS, the
                     result of the expression is the result of the binary test			                     result of the expression is the result of the binary test
                     using the first and third arguments as operands.  If  the		      |	                     using  the first and third arguments as operands.  The --aa
                     first  argument  is  !!,  the value is the negation of the		      |	                     and --oo operators are  considered  binary  operators  when
                     two-argument test using the second and  third  arguments.		      |	                     there  are  three arguments.  If the first argument is !!,
                     If the first argument is exactly (( and the third argument		      |	                     the value is the negation of the two-argument test  using
                     is exactly )), the result is the one-argument test of  the		      |	                     the second and third arguments.  If the first argument is
                     second  argument.   Otherwise,  the  expression is false.		      |	                     exactly (( and the third argument is exactly )), the result
                     The --aa and --oo operators are considered  binary  operators		      |	                     is  the one-argument test of the second argument.  Other-
                     in this case.							      |	                     wise, the expression is false.
              4 arguments									              4 arguments
                     If the first argument is !!, the result is the negation of			                     If the first argument is !!, the result is the negation of
                     the three-argument expression composed of  the  remaining		      |	                     the  three-argument  expression composed of the remaining
                     arguments.  Otherwise, the expression is parsed and eval-			                     arguments.  Otherwise, the expression is parsed and eval-
                     uated according to  precedence  using  the  rules  listed		      |	                     uated  according  to  precedence  using  the rules listed
                     above.									                     above.
              5 or more arguments								              5 or more arguments
                     The  expression  is  parsed  and  evaluated  according to		      |	                     The expression  is  parsed  and  evaluated  according  to
                     precedence using the rules listed above.					                     precedence using the rules listed above.

											      >	              When  used  with  tteesstt  or [[, the << and >> operators sort lexico-
											      >	              graphically using ASCII ordering.
											      >
       ttiimmeess  Print the accumulated user and system times for  the  shell  and			       ttiimmeess  Print the accumulated user and system times for  the  shell  and
              for processes run from the shell.  The return status is 0.			              for processes run from the shell.  The return status is 0.

       ttrraapp [--llpp] [[_a_r_g] _s_i_g_s_p_e_c ...]								       ttrraapp [--llpp] [[_a_r_g] _s_i_g_s_p_e_c ...]
              The  command  _a_r_g  is  to  be  read  and executed when the shell			              The  command  _a_r_g  is  to  be  read  and executed when the shell
              receives signal(s) _s_i_g_s_p_e_c.  If _a_r_g is absent (and  there  is  a			              receives signal(s) _s_i_g_s_p_e_c.  If _a_r_g is absent (and  there  is  a
              single  _s_i_g_s_p_e_c)  or  --,  each  specified signal is reset to its			              single  _s_i_g_s_p_e_c)  or  --,  each  specified signal is reset to its
              original disposition (the value it  had  upon  entrance  to  the			              original disposition (the value it  had  upon  entrance  to  the
              shell).   If _a_r_g is the null string the signal specified by each			              shell).   If _a_r_g is the null string the signal specified by each
              _s_i_g_s_p_e_c is ignored by the shell and by the commands it  invokes.			              _s_i_g_s_p_e_c is ignored by the shell and by the commands it  invokes.
              If  _a_r_g  is  not present and --pp has been supplied, then the trap			              If  _a_r_g  is  not present and --pp has been supplied, then the trap
              commands associated with each  _s_i_g_s_p_e_c  are  displayed.   If  no			              commands associated with each  _s_i_g_s_p_e_c  are  displayed.   If  no
              arguments  are  supplied or if only --pp is given, ttrraapp prints the			              arguments  are  supplied or if only --pp is given, ttrraapp prints the
              list of commands associated with each  signal.   The  --ll  option			              list of commands associated with each  signal.   The  --ll  option
              causes  the shell to print a list of signal names and their cor-			              causes  the shell to print a list of signal names and their cor-
              responding numbers.   Each  _s_i_g_s_p_e_c  is  either  a  signal  name			              responding numbers.   Each  _s_i_g_s_p_e_c  is  either  a  signal  name
              defined  in  <_s_i_g_n_a_l_._h>,  or  a signal number.  Signal names are			              defined  in  <_s_i_g_n_a_l_._h>,  or  a signal number.  Signal names are
              case insensitive and the SIG prefix is optional.  If  a  _s_i_g_s_p_e_c		      |	              case insensitive and the SSIIGG prefix is optional.
              is  EEXXIITT (0) the command _a_r_g is executed on exit from the shell.		      |
              If a _s_i_g_s_p_e_c is DDEEBBUUGG, the command _a_r_g is executed before  every		      |	              If a _s_i_g_s_p_e_c is EEXXIITT (0) the command _a_r_g  is  executed  on  exit
              _s_i_m_p_l_e _c_o_m_m_a_n_d, _f_o_r command, _c_a_s_e command, _s_e_l_e_c_t command, every		      |	              from  the shell.  If a _s_i_g_s_p_e_c is DDEEBBUUGG, the command _a_r_g is exe-
              arithmetic _f_o_r command, and before the first command executes in		      |	              cuted before every _s_i_m_p_l_e _c_o_m_m_a_n_d, _f_o_r  command,  _c_a_s_e  command,
              a  shell  function  (see  SSHHEELLLL  GGRRAAMMMMAARR  above).   Refer to the		      |	              _s_e_l_e_c_t  command,  every  arithmetic  _f_o_r command, and before the
              description of the eexxttddeebbuugg option  to  the  sshhoopptt  builtin  for		      |	              first command executes in a shell function  (see  SSHHEELLLL  GGRRAAMMMMAARR
              details  of  its effect on the DDEEBBUUGG trap.  If a _s_i_g_s_p_e_c is EERRRR,		      |	              above).   Refer to the description of the eexxttddeebbuugg option to the
              the command _a_r_g is executed whenever  a  simple  command  has  a		      |	              sshhoopptt builtin for details of its effect on the DDEEBBUUGG trap.  If a
              non-zero  exit status, subject to the following conditions.  The		      <
              EERRRR trap is not executed if the failed command is  part  of  the		      <
              command  list  immediately  following  a wwhhiillee or uunnttiill keyword,		      <
              part of the test in an _i_f statement, part of a &&&& or |||| list, or		      <
              if  the  command's  return value is being inverted via !!.  These		      <
              are the same conditions obeyed by  the  eerrrreexxiitt  option.   If  a		      <
              _s_i_g_s_p_e_c is RREETTUURRNN, the command _a_r_g is executed each time a shell			              _s_i_g_s_p_e_c is RREETTUURRNN, the command _a_r_g is executed each time a shell
              function or a script executed with the .. or ssoouurrccee builtins fin-			              function or a script executed with the .. or ssoouurrccee builtins fin-
              ishes executing.  Signals ignored upon entry to the shell cannot		      |	              ishes executing.
              be trapped or reset.  Trapped signals that are not being ignored		      |
              are reset to their original values in a child process when it is		      |	              If  a  _s_i_g_s_p_e_c  is  EERRRR,  the command _a_r_g is executed whenever a
              created.  The return status is false if any _s_i_g_s_p_e_c is  invalid;		      |	              pipeline (which may consist of a single simple command), a list,
              otherwise ttrraapp returns true.						      |	              or a compound command returns a non-zero exit status, subject to
											      >	              the following conditions.  The EERRRR trap is not executed  if  the
											      >	              failed command is part of the command list immediately following
											      >	              a wwhhiillee or uunnttiill keyword, part of the test in an  _i_f  statement,
											      >	              part of a command executed in a &&&& or |||| list except the command
											      >	              following the final &&&& or ||||, any command in a pipeline but  the
											      >	              last,  or  if the command's return value is being inverted using
											      >	              !!.  These are the same conditions obeyed  by  the  eerrrreexxiitt  (--ee)
											      >	              option.
											      >
											      >	              Signals  ignored  upon  entry  to the shell cannot be trapped or
											      >	              reset.  Trapped signals that are not being ignored are reset  to
											      >	              their original values in a subshell or subshell environment when
											      >	              one is created.  The return status is false if  any  _s_i_g_s_p_e_c  is
											      >	              invalid; otherwise ttrraapp returns true.

       ttyyppee [--aaffttppPP] _n_a_m_e [_n_a_m_e ...]								       ttyyppee [--aaffttppPP] _n_a_m_e [_n_a_m_e ...]
              With  no options, indicate how each _n_a_m_e would be interpreted if			              With  no options, indicate how each _n_a_m_e would be interpreted if
              used as a command name.  If the --tt option is used, ttyyppee prints a			              used as a command name.  If the --tt option is used, ttyyppee prints a
              string  which  is  one  of _a_l_i_a_s, _k_e_y_w_o_r_d, _f_u_n_c_t_i_o_n, _b_u_i_l_t_i_n, or			              string  which  is  one  of _a_l_i_a_s, _k_e_y_w_o_r_d, _f_u_n_c_t_i_o_n, _b_u_i_l_t_i_n, or
              _f_i_l_e if  _n_a_m_e  is  an  alias,  shell  reserved  word,  function,			              _f_i_l_e if  _n_a_m_e  is  an  alias,  shell  reserved  word,  function,
              builtin,  or disk file, respectively.  If the _n_a_m_e is not found,			              builtin,  or disk file, respectively.  If the _n_a_m_e is not found,
              then nothing  is  printed,  and  an  exit  status  of  false  is			              then nothing  is  printed,  and  an  exit  status  of  false  is
              returned.   If  the  --pp  option is used, ttyyppee either returns the			              returned.   If  the  --pp  option is used, ttyyppee either returns the
              name of the disk file that would be executed if _n_a_m_e were speci-			              name of the disk file that would be executed if _n_a_m_e were speci-
              fied as a command name, or nothing if ``type -t name'' would not			              fied as a command name, or nothing if ``type -t name'' would not
              return _f_i_l_e.  The --PP option forces a PPAATTHH search for each  _n_a_m_e,			              return _f_i_l_e.  The --PP option forces a PPAATTHH search for each  _n_a_m_e,
              even if ``type -t name'' would not return _f_i_l_e.  If a command is			              even if ``type -t name'' would not return _f_i_l_e.  If a command is
              hashed, --pp and --PP print the hashed value,  not  necessarily  the		      |	              hashed, --pp and --PP print the hashed value, which is not necessar-
              file that appears first in PPAATTHH.  If the --aa option is used, ttyyppee		      |	              ily  the  file  that appears first in PPAATTHH.  If the --aa option is
              prints all of the places that contain an executable named  _n_a_m_e.		      |	              used, ttyyppee prints all of the places that contain  an  executable
              This  includes  aliases  and  functions,  if  and only if the --pp		      |	              named _n_a_m_e.  This includes aliases and functions, if and only if
              option is not also used.  The table of hashed  commands  is  not		      |	              the --pp option is not also used.  The table of hashed commands is
              consulted  when  using --aa.  The --ff option suppresses shell func-		      |	              not  consulted  when  using  --aa.  The --ff option suppresses shell
              tion lookup, as with the ccoommmmaanndd builtin.  ttyyppee returns true  if		      |	              function lookup, as with the ccoommmmaanndd builtin.  ttyyppee returns true
              any of the arguments are found, false if none are found.			      |	              if all of the arguments are found, false if any are not found.

       uulliimmiitt [--SSHHaaccddeeffiillmmnnppqqrrssttuuvvxx [_l_i_m_i_t]]						      |	       uulliimmiitt [--HHSSaabbccddeeffiikkllmmnnppqqrrssttuuvvxxPPTT [_l_i_m_i_t]]
              Provides  control  over the resources available to the shell and			              Provides  control  over the resources available to the shell and
              to processes started by it, on systems that allow such  control.			              to processes started by it, on systems that allow such  control.
              The --HH and --SS options specify that the hard or soft limit is set			              The --HH and --SS options specify that the hard or soft limit is set
              for the given resource.  A hard limit cannot be  increased  once		      |	              for the given resource.  A hard limit cannot be increased  by  a
              it  is set; a soft limit may be increased up to the value of the		      |	              non-root  user  once it is set; a soft limit may be increased up
              hard limit.  If neither --HH nor --SS is specified,  both  the  soft		      |	              to the value of the hard limit.  If neither --HH nor --SS is  speci-
              and  hard limits are set.  The value of _l_i_m_i_t can be a number in		      |	              fied, both the soft and hard limits are set.  The value of _l_i_m_i_t
              the unit specified for the resource or one of the special values		      |	              can be a number in the unit specified for the resource or one of
              hhaarrdd,  ssoofftt,  or  uunnlliimmiitteedd,  which  stand  for the current hard		      |	              the special values hhaarrdd, ssoofftt, or uunnlliimmiitteedd, which stand for the
              limit, the current soft limit, and no limit,  respectively.   If		      |	              current hard limit,  the  current  soft  limit,  and  no  limit,
              _l_i_m_i_t  is  omitted,  the  current value of the soft limit of the		      |	              respectively.   If  _l_i_m_i_t  is  omitted, the current value of the
              resource is printed, unless the --HH option is given.   When  more		      |	              soft limit of the resource is printed, unless the --HH  option  is
              than  one  resource  is  specified,  the limit name and unit are		      |	              given.  When more than one resource is specified, the limit name
              printed before the value.  Other options are interpreted as fol-		      |	              and unit are printed before the value.  Other options are inter-
              lows:									      |	              preted as follows:
              --aa     All current limits are reported						              --aa     All current limits are reported
											      >	              --bb     The maximum socket buffer size
              --cc     The maximum size of core files created					              --cc     The maximum size of core files created
              --dd     The maximum size of a process's data segment				              --dd     The maximum size of a process's data segment
              --ee     The maximum scheduling priority ("nice")					              --ee     The maximum scheduling priority ("nice")
              --ff     The  maximum  size  of files written by the shell and its			              --ff     The  maximum  size  of files written by the shell and its
                     children									                     children
              --ii     The maximum number of pending signals					              --ii     The maximum number of pending signals
											      >	              --kk     The maximum number of kqueues that may be allocated
              --ll     The maximum size that may be locked into memory				              --ll     The maximum size that may be locked into memory
              --mm     The maximum resident set size					      |	              --mm     The maximum resident set size (many systems do not  honor
											      >	                     this limit)
              --nn     The maximum number of open file descriptors (most systems			              --nn     The maximum number of open file descriptors (most systems
                     do not allow this value to be set)						                     do not allow this value to be set)
              --pp     The pipe size in 512-byte blocks (this may not be set)			              --pp     The pipe size in 512-byte blocks (this may not be set)
              --qq     The maximum number of bytes in POSIX message queues			              --qq     The maximum number of bytes in POSIX message queues
              --rr     The maximum real-time scheduling priority					              --rr     The maximum real-time scheduling priority
              --ss     The maximum stack size							              --ss     The maximum stack size
              --tt     The maximum amount of cpu time in seconds					              --tt     The maximum amount of cpu time in seconds
              --uu     The  maximum  number  of  processes available to a single		      |	              --uu     The maximum number of processes  available  to  a  single
                     user									                     user
              --vv     The maximum amount of virtual  memory  available  to  the		      |	              --vv     The  maximum  amount  of  virtual memory available to the
                     shell								      |	                     shell and, on some systems, to its children
              --xx     The maximum number of file locks						              --xx     The maximum number of file locks
											      >	              --PP     The maximum number of pseudoterminals
											      >	              --TT     The maximum number of threads

              If _l_i_m_i_t is given, it is the new value of the specified resource		      |	              If _l_i_m_i_t is given, and the --aa option is not used, _l_i_m_i_t  is  the
              (the --aa option is display only).  If no option is given, then --ff		      |	              new  value  of  the  specified resource.  If no option is given,
              is  assumed.  Values are in 1024-byte increments, except for --tt,		      |	              then --ff is assumed.  Values are in 1024-byte increments,  except
              which is in seconds, --pp, which is in units of  512-byte  blocks,		      |	              for  --tt,  which is in seconds; --pp, which is in units of 512-byte
              and  --nn and --uu, which are unscaled values.  The return status is		      |	              blocks; --PP, --TT, --bb, --kk, --nn, and --uu, which are  unscaled  values;
              0 unless an invalid option or argument is supplied, or an  error		      |	              and, when in posix mode, --cc and --ff, which are in 512-byte incre-
              occurs while setting a new limit.						      |	              ments.  The return status is 0 unless an invalid option or argu-
											      >	              ment  is supplied, or an error occurs while setting a new limit.

       uummaasskk [--pp] [--SS] [_m_o_d_e]									       uummaasskk [--pp] [--SS] [_m_o_d_e]
              The user file-creation mask is set to _m_o_d_e.  If _m_o_d_e begins with			              The user file-creation mask is set to _m_o_d_e.  If _m_o_d_e begins with
              a digit, it is interpreted as an octal number; otherwise  it  is		      |	              a  digit,  it is interpreted as an octal number; otherwise it is
              interpreted  as a symbolic mode mask similar to that accepted by		      |	              interpreted as a symbolic mode mask similar to that accepted  by
              _c_h_m_o_d(1).  If _m_o_d_e is omitted, the current value of the mask  is		      |	              _c_h_m_o_d(1).   If _m_o_d_e is omitted, the current value of the mask is
              printed.   The  --SS  option causes the mask to be printed in sym-		      |	              printed.  The --SS option causes the mask to be  printed  in  sym-
              bolic form; the default output is an octal number.   If  the  --pp		      |	              bolic  form;  the  default output is an octal number.  If the --pp
              option is supplied, and _m_o_d_e is omitted, the output is in a form			              option is supplied, and _m_o_d_e is omitted, the output is in a form
              that may be reused as input.  The return status is 0 if the mode			              that may be reused as input.  The return status is 0 if the mode
              was  successfully  changed  or if no _m_o_d_e argument was supplied,		      |	              was successfully changed or if no _m_o_d_e  argument  was  supplied,
              and false otherwise.								              and false otherwise.

       uunnaalliiaass [-aa] [_n_a_m_e ...]									       uunnaalliiaass [-aa] [_n_a_m_e ...]
              Remove each _n_a_m_e from the list of defined  aliases.   If  --aa  is		      |	              Remove  each  _n_a_m_e  from  the list of defined aliases.  If --aa is
              supplied,  all  alias definitions are removed.  The return value		      |	              supplied, all alias definitions are removed.  The  return  value
              is true unless a supplied _n_a_m_e is not a defined alias.				              is true unless a supplied _n_a_m_e is not a defined alias.

       uunnsseett [-ffvv] [_n_a_m_e ...]								      |	       uunnsseett [-ffvv] [-nn] [_n_a_m_e ...]
              For each _n_a_m_e, remove the corresponding  variable  or  function.		      |	              For  each  _n_a_m_e,  remove the corresponding variable or function.
              If no options are supplied, or the --vv option is given, each _n_a_m_e		      |	              If the --vv option is given, each _n_a_m_e refers to a shell variable,
              refers to a shell variable.   Read-only  variables  may  not  be		      |	              and  that  variable  is removed.  Read-only variables may not be
              unset.   If  --ff  is specified, each _n_a_m_e refers to a shell func-		      |	              unset.  If --ff is specified, each _n_a_m_e refers to  a  shell  func-
              tion, and the function definition is removed.  Each unset  vari-		      |	              tion,  and the function definition is removed.  If the --nn option
              able  or function is removed from the environment passed to sub-		      |	              is supplied, and _n_a_m_e is a variable with the _n_a_m_e_r_e_f  attribute,
              sequent commands.  If any of RRAANNDDOOMM, SSEECCOONNDDSS,  LLIINNEENNOO,  HHIISSTTCCMMDD,		      |	              _n_a_m_e  will  be unset rather than the variable it references.  --nn
              FFUUNNCCNNAAMMEE, GGRROOUUPPSS, or DDIIRRSSTTAACCKK are unset, they lose their special		      |	              has no effect if the --ff option is supplied.  If no  options  are
              properties, even if they are subsequently reset.  The exit  sta-		      |	              supplied,  each  _n_a_m_e refers to a variable; if there is no vari-
              tus is true unless a _n_a_m_e is readonly.					      |	              able by that name, any function with that name is  unset.   Each
											      |	              unset  variable  or  function  is  removed  from the environment
       wwaaiitt [_n _._._.]									      |	              passed to subsequent commands.  If any of CCOOMMPP__WWOORRDDBBRREEAAKKSS,  RRAANN--
              Wait  for each specified process and return its termination sta-		      |	              DDOOMM, SSEECCOONNDDSS, LLIINNEENNOO, HHIISSTTCCMMDD, FFUUNNCCNNAAMMEE, GGRROOUUPPSS, or DDIIRRSSTTAACCKK are
              tus.  Each _n may be a process ID or a job  specification;  if  a		      |	              unset, they lose their special properties, even if they are sub-
              job  spec  is  given,  all  processes in that job's pipeline are		      |	              sequently reset.  The exit status is true unless a _n_a_m_e is read-
              waited for.  If _n is not given, all currently active child  pro-		      |	              only.
              cesses  are  waited  for,  and  the return status is zero.  If _n		      |
              specifies a non-existent process or job, the  return  status  is		      |	       wwaaiitt [--ffnn] [_i_d _._._.]
              127.   Otherwise,  the  return  status is the exit status of the		      |	              Wait for each specified child process and return its termination
											      >	              status.   Each _i_d may be a process ID or a job specification; if
											      >	              a job spec is given, all processes in that  job's  pipeline  are
											      >	              waited for.  If _i_d is not given, all currently active child pro-
											      >	              cesses are waited for, and the return status is zero.  If the --nn
											      >	              option  is  supplied,  wwaaiitt  waits  for any job to terminate and
											      >	              returns its exit status.  If the --ff option is supplied, and  job
											      >	              control is enabled, wwaaiitt forces _i_d to terminate before returning
											      >	              its status, instead of returning when it changes status.  If  _i_d
											      >	              specifies  a  non-existent  process or job, the return status is
											      >	              127.  Otherwise, the return status is the  exit  status  of  the
              last process or job waited for.							              last process or job waited for.

RREESSTTRRIICCTTEEDD SSHHEELLLL										RREESSTTRRIICCTTEEDD SSHHEELLLL
       If bbaasshh is started with the name rrbbaasshh, or the --rr option is supplied at			       If bbaasshh is started with the name rrbbaasshh, or the --rr option is supplied at
       invocation,  the  shell becomes restricted.  A restricted shell is used		      |	       invocation, the shell becomes restricted.  A restricted shell  is  used
       to set up an environment more controlled than the standard  shell.   It		      |	       to  set  up an environment more controlled than the standard shell.  It
       behaves  identically  to bbaasshh with the exception that the following are		      |	       behaves identically to bbaasshh with the exception that the  following  are
       disallowed or not performed:								       disallowed or not performed:

       +o      changing directories with ccdd							       +o      changing directories with ccdd

       +o      setting or unsetting the values of SSHHEELLLL, PPAATTHH, EENNVV, or BBAASSHH__EENNVV			       +o      setting or unsetting the values of SSHHEELLLL, PPAATTHH, EENNVV, or BBAASSHH__EENNVV

       +o      specifying command names containing //						       +o      specifying command names containing //

       +o      specifying  a  file  name containing a // as an argument to the ..		      |	       +o      specifying a filename containing a // as an  argument  to  the  ..
              builtin command									              builtin command

       +o      Specifying a filename containing a slash as an argument  to  the		      |	       +o      specifying  a  filename containing a slash as an argument to the
              --pp option to the hhaasshh builtin command						              --pp option to the hhaasshh builtin command

       +o      importing  function  definitions  from  the shell environment at		      |	       +o      importing function definitions from  the  shell  environment  at
              startup										              startup

       +o      parsing the value of SSHHEELLLLOOPPTTSS from  the  shell  environment  at		      |	       +o      parsing  the  value  of  SSHHEELLLLOOPPTTSS from the shell environment at
              startup										              startup

       +o      redirecting output using the >, >|, <>, >&, &>, and >> redirect-			       +o      redirecting output using the >, >|, <>, >&, &>, and >> redirect-
              ion operators									              ion operators

       +o      using the eexxeecc builtin command to replace the shell with another			       +o      using the eexxeecc builtin command to replace the shell with another
              command										              command

       +o      adding  or  deleting builtin commands with the --ff and --dd options		      |	       +o      adding or deleting builtin commands with the --ff and  --dd  options
              to the eennaabbllee builtin command							              to the eennaabbllee builtin command

       +o      Using the  eennaabbllee  builtin  command  to  enable  disabled  shell		      |	       +o      using  the  eennaabbllee  builtin  command  to  enable  disabled shell
              builtins										              builtins

       +o      specifying the --pp option to the ccoommmmaanndd builtin command				       +o      specifying the --pp option to the ccoommmmaanndd builtin command

       +o      turning off restricted mode with sseett ++rr or sseett ++oo rreessttrriicctteedd.			       +o      turning off restricted mode with sseett ++rr or sseett ++oo rreessttrriicctteedd.

       These restrictions are enforced after any startup files are read.			       These restrictions are enforced after any startup files are read.

       When a command that is found to be a shell script is executed (see CCOOMM--			       When a command that is found to be a shell script is executed (see CCOOMM--
       MMAANNDD EEXXEECCUUTTIIOONN above), rrbbaasshh turns off any restrictions  in  the  shell		      |	       MMAANNDD  EEXXEECCUUTTIIOONN  above),  rrbbaasshh turns off any restrictions in the shell
       spawned to execute the script.								       spawned to execute the script.

SSEEEE AALLSSOO											SSEEEE AALLSSOO
       _B_a_s_h _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l, Brian Fox and Chet Ramey						       _B_a_s_h _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l, Brian Fox and Chet Ramey
       _T_h_e _G_n_u _R_e_a_d_l_i_n_e _L_i_b_r_a_r_y, Brian Fox and Chet Ramey					       _T_h_e _G_n_u _R_e_a_d_l_i_n_e _L_i_b_r_a_r_y, Brian Fox and Chet Ramey
       _T_h_e _G_n_u _H_i_s_t_o_r_y _L_i_b_r_a_r_y, Brian Fox and Chet Ramey					       _T_h_e _G_n_u _H_i_s_t_o_r_y _L_i_b_r_a_r_y, Brian Fox and Chet Ramey
       _P_o_r_t_a_b_l_e  _O_p_e_r_a_t_i_n_g  _S_y_s_t_e_m  _I_n_t_e_r_f_a_c_e _(_P_O_S_I_X_) _P_a_r_t _2_: _S_h_e_l_l _a_n_d _U_t_i_l_i_-		      |	       _P_o_r_t_a_b_l_e _O_p_e_r_a_t_i_n_g _S_y_s_t_e_m _I_n_t_e_r_f_a_c_e _(_P_O_S_I_X_) _P_a_r_t _2_:  _S_h_e_l_l  _a_n_d  _U_t_i_l_i_-
       _t_i_e_s, IEEE									      |	       _t_i_e_s, IEEE --
											      >	              http://pubs.opengroup.org/onlinepubs/9699919799/
											      >	       http://tiswww.case.edu/~chet/bash/POSIX -- a description of posix mode
       _s_h(1), _k_s_h(1), _c_s_h(1)									       _s_h(1), _k_s_h(1), _c_s_h(1)
       _e_m_a_c_s(1), _v_i(1)										       _e_m_a_c_s(1), _v_i(1)
       _r_e_a_d_l_i_n_e(3)										       _r_e_a_d_l_i_n_e(3)

FFIILLEESS												FFIILLEESS
       _/_b_i_n_/_b_a_s_h										       _/_b_i_n_/_b_a_s_h
              The bbaasshh executable								              The bbaasshh executable
       _/_e_t_c_/_p_r_o_f_i_l_e										       _/_e_t_c_/_p_r_o_f_i_l_e
              The systemwide initialization file, executed for login shells			              The systemwide initialization file, executed for login shells
       _~_/_._b_a_s_h___p_r_o_f_i_l_e										       _~_/_._b_a_s_h___p_r_o_f_i_l_e
              The personal initialization file, executed for login shells			              The personal initialization file, executed for login shells
       _~_/_._b_a_s_h_r_c										       _~_/_._b_a_s_h_r_c
              The individual per-interactive-shell startup file					              The individual per-interactive-shell startup file
       _~_/_._b_a_s_h___l_o_g_o_u_t										       _~_/_._b_a_s_h___l_o_g_o_u_t
              The  individual  login shell cleanup file, executed when a login		      |	              The individual login shell cleanup file, executed when  a  login
              shell exits									              shell exits
       _~_/_._i_n_p_u_t_r_c										       _~_/_._i_n_p_u_t_r_c
              Individual _r_e_a_d_l_i_n_e initialization file						              Individual _r_e_a_d_l_i_n_e initialization file

AAUUTTHHOORRSS												AAUUTTHHOORRSS
       Brian Fox, Free Software Foundation							       Brian Fox, Free Software Foundation
       bfox@gnu.org										       bfox@gnu.org

       Chet Ramey, Case Western Reserve University						       Chet Ramey, Case Western Reserve University
       chet@po.cwru.edu									      |	       chet.ramey@case.edu

BBUUGG RREEPPOORRTTSS											BBUUGG RREEPPOORRTTSS
       If you find a bug in bbaasshh,, you should report it.  But first, you should			       If you find a bug in bbaasshh,, you should report it.  But first, you should
       make  sure  that  it really is a bug, and that it appears in the latest		      |	       make sure that it really is a bug, and that it appears  in  the  latest
       version  of  bbaasshh.   The  latest  version  is  always  available   from		      |	       version   of  bbaasshh.   The  latest  version  is  always  available  from
       _f_t_p_:_/_/_f_t_p_._g_n_u_._o_r_g_/_p_u_b_/_b_a_s_h_/.							      |	       _f_t_p_:_/_/_f_t_p_._g_n_u_._o_r_g_/_p_u_b_/_g_n_u_/_b_a_s_h_/.
											      |
       Once  you  have  determined that a bug actually exists, use the _b_a_s_h_b_u_g		      |	       Once you have determined that a bug actually exists,  use  the  _b_a_s_h_b_u_g
       command to submit a bug report.  If you have a fix, you are  encouraged		      |	       command  to submit a bug report.  If you have a fix, you are encouraged
       to  mail that as well!  Suggestions and `philosophical' bug reports may		      |	       to mail that as well!  Suggestions and `philosophical' bug reports  may
       be mailed  to  _b_u_g_-_b_a_s_h_@_g_n_u_._o_r_g  or  posted  to  the  Usenet  newsgroup		      |	       be  mailed  to  _b_u_g_-_b_a_s_h_@_g_n_u_._o_r_g  or  posted  to  the  Usenet newsgroup
       ggnnuu..bbaasshh..bbuugg.										       ggnnuu..bbaasshh..bbuugg.

       ALL bug reports should include:								       ALL bug reports should include:

       The version number of bbaasshh								       The version number of bbaasshh
       The hardware and operating system							       The hardware and operating system
       The compiler used to compile								       The compiler used to compile
       A description of the bug behaviour							       A description of the bug behaviour
       A short script or `recipe' which exercises the bug					       A short script or `recipe' which exercises the bug

       _b_a_s_h_b_u_g  inserts  the first three items automatically into the template		      |	       _b_a_s_h_b_u_g inserts the first three items automatically into  the  template
       it provides for filing a bug report.							       it provides for filing a bug report.

       Comments and bug reports concerning this manual page should be directed			       Comments and bug reports concerning this manual page should be directed
       to _c_h_e_t_@_p_o_._c_w_r_u_._e_d_u.								      |	       to _c_h_e_t_._r_a_m_e_y_@_c_a_s_e_._e_d_u.

BBUUGGSS												BBUUGGSS
       It's too big and too slow.								       It's too big and too slow.

       There are some subtle differences between bbaasshh and traditional versions			       There are some subtle differences between bbaasshh and traditional versions
       of sshh, mostly because of the PPOOSSIIXX specification.					       of sshh, mostly because of the PPOOSSIIXX specification.

       Aliases are confusing in some uses.							       Aliases are confusing in some uses.

       Shell builtin commands and functions are not stoppable/restartable.			       Shell builtin commands and functions are not stoppable/restartable.

       Compound commands and command sequences of the form `a ; b ; c' are not			       Compound commands and command sequences of the form `a ; b ; c' are not
       handled  gracefully  when  process  suspension  is  attempted.   When a		      |	       handled gracefully  when  process  suspension  is  attempted.   When  a
       process is stopped, the shell immediately executes the next command  in		      |	       process  is stopped, the shell immediately executes the next command in
       the  sequence.   It  suffices to place the sequence of commands between		      |	       the sequence.  It suffices to place the sequence  of  commands  between
       parentheses to force it into a subshell, which  may  be  stopped  as  a		      |	       parentheses  to  force  it  into  a subshell, which may be stopped as a
       unit.											       unit.

       Commands  inside  of  $$((...))  command substitution are not parsed until		      <
       substitution is attempted.  This will delay error reporting until  some		      <
       time after the command is entered.  For example, unmatched parentheses,		      <
       even inside shell comments, will result in  error  messages  while  the		      <
       construct is being read.								      <
											      <
       Array variables may not (yet) be exported.						       Array variables may not (yet) be exported.

											      >	       There may be only one active coprocess at a time.
											      >


GNU Bash-3.2                   2006 September 28                       BASH(1)		      |	GNU Bash 5.0                    2018 December 7                        BASH(1)
